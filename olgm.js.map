{"version":3,"file":"olgm.js","sources":["../src/olgm/Abstract.js","../node_modules/ol/src/obj.js","../node_modules/ol/src/events.js","../node_modules/ol/src/events/EventType.js","../node_modules/ol/src/util.js","../node_modules/ol/src/ObjectEventType.js","../node_modules/ol/src/Disposable.js","../node_modules/ol/src/array.js","../node_modules/ol/src/functions.js","../node_modules/ol/src/events/Event.js","../node_modules/ol/src/events/Target.js","../node_modules/ol/src/Observable.js","../node_modules/ol/src/Object.js","../node_modules/ol/src/layer/Property.js","../node_modules/ol/src/math.js","../node_modules/ol/src/AssertionError.js","../node_modules/ol/src/asserts.js","../node_modules/ol/src/layer/Base.js","../node_modules/ol/src/render/EventType.js","../node_modules/ol/src/source/State.js","../node_modules/ol/src/layer/Layer.js","../node_modules/ol/src/layer/BaseImage.js","../node_modules/ol/src/ViewHint.js","../node_modules/ol/src/extent/Corner.js","../node_modules/ol/src/extent/Relationship.js","../node_modules/ol/src/extent.js","../node_modules/ol/src/geom/GeometryType.js","../node_modules/ol/src/sphere.js","../node_modules/ol/src/proj/Units.js","../node_modules/ol/src/proj/Projection.js","../node_modules/ol/src/proj/epsg3857.js","../node_modules/ol/src/proj/epsg4326.js","../node_modules/ol/src/proj/transforms.js","../node_modules/ol/src/proj/projections.js","../node_modules/ol/src/proj.js","../node_modules/ol/src/dom.js","../node_modules/ol/src/css.js","../node_modules/ol/src/render/Event.js","../node_modules/ol/src/transform.js","../node_modules/ol/src/render/canvas.js","../node_modules/ol/src/structs/LRUCache.js","../node_modules/ol/src/render/canvas/LabelCache.js","../node_modules/ol/src/ImageState.js","../node_modules/ol/src/renderer/Layer.js","../node_modules/ol/src/renderer/canvas/Layer.js","../node_modules/ol/src/renderer/canvas/ImageLayer.js","../node_modules/ol/src/layer/Image.js","../node_modules/ol/src/layer/TileProperty.js","../node_modules/ol/src/layer/BaseTile.js","../node_modules/ol/src/TileRange.js","../node_modules/ol/src/TileState.js","../node_modules/ol/src/renderer/canvas/TileLayer.js","../node_modules/ol/src/layer/Tile.js","../node_modules/ol/src/color.js","../node_modules/ol/src/colorlike.js","../node_modules/ol/src/style/Image.js","../node_modules/ol/src/style/RegularShape.js","../node_modules/ol/src/style/Circle.js","../node_modules/ol/src/style/Fill.js","../node_modules/ol/src/style/Stroke.js","../node_modules/ol/src/style/Style.js","../node_modules/ol/src/layer/BaseVector.js","../node_modules/ol/src/geom/flat/inflate.js","../node_modules/ol/src/render/VectorContext.js","../node_modules/ol/src/render/canvas/Instruction.js","../node_modules/ol/src/render/canvas/Builder.js","../node_modules/ol/src/render/canvas/ImageBuilder.js","../node_modules/ol/src/render/canvas/LineStringBuilder.js","../node_modules/ol/src/geom/flat/simplify.js","../node_modules/ol/src/render/canvas/PolygonBuilder.js","../node_modules/ol/src/geom/flat/straightchunk.js","../node_modules/ol/src/style/TextPlacement.js","../node_modules/ol/src/render/canvas/TextBuilder.js","../node_modules/ol/src/render/canvas/BuilderGroup.js","../node_modules/ol/src/geom/flat/transform.js","../node_modules/ol/src/render/canvas/BuilderType.js","../node_modules/ol/src/geom/flat/length.js","../node_modules/ol/src/geom/flat/textpath.js","../node_modules/quickselect/index.js","../node_modules/rbush/index.js","../node_modules/ol/src/render/canvas/Executor.js","../node_modules/ol/src/render/canvas/ExecutorGroup.js","../node_modules/ol/src/renderer/vector.js","../node_modules/ol/src/geom/Geometry.js","../node_modules/ol/src/geom/GeometryLayout.js","../node_modules/ol/src/geom/SimpleGeometry.js","../node_modules/ol/src/render/canvas/Immediate.js","../node_modules/ol/src/style/IconAnchorUnits.js","../node_modules/ol/src/style/IconImageCache.js","../node_modules/ol/src/ImageBase.js","../node_modules/ol/src/has.js","../node_modules/ol/src/Image.js","../node_modules/ol/src/style/IconImage.js","../node_modules/ol/src/style/IconOrigin.js","../node_modules/ol/src/style/Icon.js","../node_modules/ol/src/render/canvas/hitdetect.js","../node_modules/ol/src/renderer/canvas/VectorLayer.js","../node_modules/ol/src/layer/Vector.js","../src/olgm/herald/Herald.js","../node_modules/ol/src/source/common.js","../node_modules/ol/src/reproj.js","../node_modules/ol/src/reproj/Triangulation.js","../node_modules/ol/src/reproj/Image.js","../node_modules/ol/src/reproj/common.js","../node_modules/ol/src/source/Source.js","../node_modules/ol/src/source/Image.js","../node_modules/ol/src/source/WMSServerType.js","../node_modules/ol/src/uri.js","../node_modules/ol/src/source/ImageWMS.js","../node_modules/ol/src/string.js","../src/olgm/asserts.js","../src/olgm/gm/ImageOverlay.js","../src/olgm/herald/Source.js","../src/olgm/obj.js","../src/olgm/listener/AbstractListener.js","../src/olgm/listener/Listener.js","../src/olgm/listener/PropertyListener.js","../src/olgm/herald/ImageWMSSource.js","../src/olgm/uri.js","../node_modules/ol/src/easing.js","../node_modules/ol/src/Tile.js","../node_modules/ol/src/ImageTile.js","../node_modules/ol/src/tilecoord.js","../node_modules/ol/src/TileCache.js","../node_modules/ol/src/reproj/Tile.js","../node_modules/ol/src/tileurlfunction.js","../node_modules/ol/src/size.js","../node_modules/ol/src/tilegrid/common.js","../node_modules/ol/src/tilegrid/TileGrid.js","../node_modules/ol/src/tilegrid.js","../node_modules/ol/src/source/Tile.js","../node_modules/ol/src/source/TileEventType.js","../node_modules/ol/src/source/UrlTile.js","../node_modules/ol/src/source/TileImage.js","../src/olgm/gm/PanesOverlay.js","../src/olgm/herald/TileSource.js","../node_modules/ol/src/geom/flat/closest.js","../node_modules/ol/src/geom/flat/deflate.js","../node_modules/ol/src/geom/flat/interpolate.js","../node_modules/ol/src/geom/flat/contains.js","../node_modules/ol/src/geom/flat/segments.js","../node_modules/ol/src/geom/flat/intersectsextent.js","../node_modules/ol/src/geom/LineString.js","../node_modules/ol/src/geom/Point.js","../node_modules/ol/src/geom/flat/area.js","../node_modules/ol/src/geom/LinearRing.js","../node_modules/ol/src/geom/flat/interiorpoint.js","../node_modules/ol/src/geom/flat/reverse.js","../node_modules/ol/src/geom/flat/orient.js","../node_modules/ol/src/geom/Polygon.js","../node_modules/ol/src/geom/MultiLineString.js","../node_modules/ol/src/geom/MultiPoint.js","../node_modules/ol/src/geom/MultiPolygon.js","../node_modules/ol/src/geom/flat/center.js","../node_modules/ol/src/Feature.js","../src/olgm/util.js","../src/olgm/gm/MapElement.js","../src/olgm/gm/MapLabel.js","../src/olgm/gm/MapIcon.js","../src/olgm/gm.js","../src/olgm/herald/Feature.js","../src/olgm/herald/VectorFeature.js","../src/olgm/herald/VectorSource.js","../src/olgm/events.js","../src/olgm/herald/View.js","../src/olgm/layer/Google.js","../src/olgm/herald/Layers.js","../src/olgm/OLGoogleMaps.js","../node_modules/ol/src/CollectionEventType.js","../node_modules/ol/src/Collection.js","../node_modules/ol/src/Kinetic.js","../node_modules/ol/src/MapBrowserEventType.js","../node_modules/ol/src/interaction/Property.js","../node_modules/ol/src/interaction/Interaction.js","../node_modules/ol/src/interaction/DoubleClickZoom.js","../node_modules/ol/src/coordinate.js","../node_modules/ol/src/events/condition.js","../node_modules/ol/src/interaction/Pointer.js","../node_modules/ol/src/interaction/DragPan.js","../node_modules/ol/src/rotationconstraint.js","../node_modules/ol/src/interaction/DragRotate.js","../node_modules/ol/src/render/Box.js","../node_modules/ol/src/interaction/DragBox.js","../node_modules/ol/src/interaction/DragZoom.js","../node_modules/ol/src/events/KeyCode.js","../node_modules/ol/src/interaction/KeyboardPan.js","../node_modules/ol/src/interaction/KeyboardZoom.js","../node_modules/ol/src/interaction/MouseWheelZoom.js","../node_modules/ol/src/interaction/PinchRotate.js","../node_modules/ol/src/interaction/PinchZoom.js","../node_modules/ol/src/interaction/DragAndDrop.js","../node_modules/ol/src/interaction/DragRotateAndZoom.js","../node_modules/ol/src/MapEvent.js","../node_modules/ol/src/MapBrowserEvent.js","../node_modules/ol/src/MapBrowserPointerEvent.js","../node_modules/ol/src/geom/Circle.js","../node_modules/ol/src/format/FormatType.js","../node_modules/ol/src/featureloader.js","../node_modules/ol/src/loadingstrategy.js","../node_modules/ol/src/source/VectorEventType.js","../node_modules/ol/src/structs/RBush.js","../node_modules/ol/src/source/Vector.js","../node_modules/ol/src/interaction/Draw.js","../node_modules/ol/src/interaction/Extent.js","../node_modules/ol/src/interaction/Modify.js","../node_modules/ol/src/interaction/Select.js","../node_modules/ol/src/interaction/Snap.js","../node_modules/ol/src/interaction/Translate.js","index.js","../src/olgm/interaction.js","../node_modules/ol/src/interaction.js"],"sourcesContent":["/**\n * @module olgm/Abstract\n */\nclass Abstract {\n  /**\n   * @classdesc\n   * Abstract class for most classes of this library, which receives a reference\n   * to the `google.maps.Map` and {@link module:ol/PluggableMap} objects and behave accordingly with\n   * them.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    /**\n     * @type {module:ol/PluggableMap}\n     * @protected\n     */\n    this.ol3map = ol3map;\n\n    /**\n     * @type {!google.maps.Map}\n     * @protected\n     */\n    this.gmap = gmap;\n  }\n}\nexport default Abstract;\n","/**\n * @module ol/obj\n */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Polyfill for Object.values().  Get an array of property values from an object.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/values\n *\n * @param {!Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport const getValues = (typeof Object.values === 'function') ? Object.values : function(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n};\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * Key to use with {@link module:ol/Observable~Observable#unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener\n * @property {import(\"./events/Target.js\").EventTargetLike} target\n * @property {string} type\n * @api\n */\n\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  if (opt_this && opt_this !== target) {\n    listener = listener.bind(opt_this);\n  }\n  if (opt_once) {\n    const originalListener = listener;\n    listener = function() {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  WHEEL: 'wheel'\n};\n","/**\n * @module ol/util\n */\n\n/**\n * @return {?} Any return.\n */\nexport function abstract() {\n  return /** @type {?} */ ((function() {\n    throw new Error('Unimplemented abstract method.');\n  })());\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = 'latest';\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange'\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @private\n     */\n    this.disposed_ = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed_) {\n      this.disposed_ = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function=} opt_comparator Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, opt_comparator) {\n  let mid, cmp;\n  const comparator = opt_comparator || numberSafeCompareFunction;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + (high - low >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) { /* Too low. */\n      low = mid + 1;\n\n    } else { /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n\n/**\n * Compare function for array sort that is safe for numbers.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function numberSafeCompareFunction(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n\n/**\n * Whether the array contains the given object.\n * @param {Array<*>} arr The array to test for the presence of the element.\n * @param {*} obj The object for which to test.\n * @return {boolean} The object is in the array.\n */\nexport function includes(arr, obj) {\n  return arr.indexOf(obj) >= 0;\n}\n\n\n/**\n * @param {Array<number>} arr Array.\n * @param {number} target Target.\n * @param {number} direction 0 means return the nearest, > 0\n *    means return the largest nearest, < 0 means return the\n *    smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  const n = arr.length;\n  if (arr[0] <= target) {\n    return 0;\n  } else if (target <= arr[n - 1]) {\n    return n - 1;\n  } else {\n    let i;\n    if (direction > 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] < target) {\n          return i - 1;\n        }\n      }\n    } else if (direction < 0) {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] <= target) {\n          return i;\n        }\n      }\n    } else {\n      for (i = 1; i < n; ++i) {\n        if (arr[i] == target) {\n          return i;\n        } else if (arr[i] < target) {\n          if (arr[i - 1] - target < target - arr[i]) {\n            return i - 1;\n          } else {\n            return i;\n          }\n        }\n      }\n    }\n    return n - 1;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n\n/**\n * @param {Array<VALUE>} arr The array to search in.\n * @param {function(VALUE, number, ?) : boolean} func The function to compare.\n * @template VALUE\n * @return {VALUE|null} The element found or null.\n */\nexport function find(arr, func) {\n  const length = arr.length >>> 0;\n  let value;\n\n  for (let i = 0; i < length; i++) {\n    value = arr[i];\n    if (func(value, i, arr)) {\n      return value;\n    }\n  }\n  return null;\n}\n\n\n/**\n * @param {Array|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * Sort the passed array such that the relative order of equal elements is preverved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function(a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n\n/**\n * @param {Array<*>} arr The array to search in.\n * @param {Function} func Comparison function.\n * @return {number} Return index.\n */\nexport function findIndex(arr, func) {\n  let index;\n  const found = !arr.every(function(el, idx) {\n    index = idx;\n    return !func(el, idx, arr);\n  });\n  return found ? index : -1;\n}\n\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function=} opt_func Comparison function.\n * @param {boolean=} opt_strict Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, opt_func, opt_strict) {\n  const compare = opt_func || numberSafeCompareFunction;\n  return arr.every(function(currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || opt_strict && res === 0);\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @returns {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @returns {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function() {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  preventDefault() {\n    this.propagationStopped = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport Event from './Event.js';\nimport {clear} from '../obj.js';\n\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n\n  /**\n   * @param {*=} opt_target Default event target for dispatched events.\n   */\n  constructor(opt_target) {\n\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = opt_target;\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.pendingRemovals_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, number>}\n     */\n    this.dispatching_ = {};\n\n    /**\n     * @private\n     * @type {!Object<string, Array<import(\"../events.js\").ListenerFunction>>}\n     */\n    this.listeners_ = {};\n\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    let listeners = this.listeners_[type];\n    if (!listeners) {\n      listeners = [];\n      this.listeners_[type] = listeners;\n    }\n    if (listeners.indexOf(listener) === -1) {\n      listeners.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {{type: string,\n   *     target: (EventTargetLike|undefined),\n   *     propagationStopped: (boolean|undefined)}|\n   *     import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const evt = typeof event === 'string' ? new Event(event) : event;\n    const type = evt.type;\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const listeners = this.listeners_[type];\n    let propagate;\n    if (listeners) {\n      if (!(type in this.dispatching_)) {\n        this.dispatching_[type] = 0;\n        this.pendingRemovals_[type] = 0;\n      }\n      ++this.dispatching_[type];\n      for (let i = 0, ii = listeners.length; i < ii; ++i) {\n        if (listeners[i].call(this, evt) === false || evt.propagationStopped) {\n          propagate = false;\n          break;\n        }\n      }\n      --this.dispatching_[type];\n      if (this.dispatching_[type] === 0) {\n        let pendingRemovals = this.pendingRemovals_[type];\n        delete this.pendingRemovals_[type];\n        while (pendingRemovals--) {\n          this.removeEventListener(type, VOID);\n        }\n        delete this.dispatching_[type];\n      }\n      return propagate;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").ListenerFunction>} Listeners.\n   */\n  getListeners(type) {\n    return this.listeners_[type];\n  }\n\n  /**\n   * @param {string=} opt_type Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(opt_type) {\n    return opt_type ?\n      opt_type in this.listeners_ :\n      Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").ListenerFunction} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    const listeners = this.listeners_[type];\n    if (listeners) {\n      const index = listeners.indexOf(listener);\n      if (index !== -1) {\n        if (type in this.pendingRemovals_) {\n          // make listener a no-op, and remove later in #dispatchEvent()\n          listeners[index] = VOID;\n          ++this.pendingRemovals_[type];\n        } else {\n          listeners.splice(index, 1);\n          if (listeners.length === 0) {\n            delete this.listeners_[type];\n          }\n        }\n      }\n    }\n  }\n}\n\n\nexport default Target;\n","/**\n * @module ol/Observable\n */\nimport {listen, unlistenByKey, listenOnce} from './events.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * Listen for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  on(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listen(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Listen once for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n   *     called with an array of event types as the first argument, the return\n   *     will be an array of keys.\n   * @api\n   */\n  once(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listenOnce(this, type[i], listener);\n      }\n      return keys;\n    } else {\n      return listenOnce(this, /** @type {string} */ (type), listener);\n    }\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type The event type or array of event types.\n   * @param {function(?): ?} listener The listener function.\n   * @api\n   */\n  un(type, listener) {\n    if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\n\nexport default Observable;\n","/**\n * @module ol/Object\n */\nimport {getUid} from './util.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {assign} from './obj.js';\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n\n  /**\n   * @param {Object<string, *>=} opt_values An object with key-value pairs.\n   */\n  constructor(opt_values) {\n    super();\n\n    // Call {@link module:ol/util~getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {!Object<string, *>}\n     */\n    this.values_ = {};\n\n    if (opt_values !== undefined) {\n      this.setProperties(opt_values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return Object.keys(this.values_);\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return assign({}, this.values_);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = getChangeEventType(key);\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  set(key, value, opt_silent) {\n    if (opt_silent) {\n      this.values_[key] = value;\n    } else {\n      const oldValue = this.values_[key];\n      this.values_[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean=} opt_silent Update without triggering an event.\n   * @api\n   */\n  setProperties(values, opt_silent) {\n    for (const key in values) {\n      this.set(key, values[key], opt_silent);\n    }\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean=} opt_silent Unset without triggering an event.\n   * @api\n   */\n  unset(key, opt_silent) {\n    if (key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (!opt_silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\n\n/**\n * @type {Object<string, string>}\n */\nconst changeEventTypeCache = {};\n\n\n/**\n * @param {string} key Key name.\n * @return {string} Change name.\n */\nexport function getChangeEventType(key) {\n  return changeEventTypeCache.hasOwnProperty(key) ?\n    changeEventTypeCache[key] :\n    (changeEventTypeCache[key] = 'change:' + key);\n}\n\n\nexport default BaseObject;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source'\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n\n/**\n * Return the hyperbolic cosine of a given number. The method will use the\n * native `Math.cosh` function if it is available, otherwise the hyperbolic\n * cosine will be calculated via the reference implementation of the Mozilla\n * developer network.\n *\n * @param {number} x X.\n * @return {number} Hyperbolic cosine of x.\n */\nexport const cosh = (function() {\n  // Wrapped in a iife, to save the overhead of checking for the native\n  // implementation on every invocation.\n  let cosh;\n  if ('cosh' in Math) {\n    // The environment supports the native Math.cosh function, use it…\n    cosh = Math.cosh;\n  } else {\n    // … else, use the reference implementation of MDN:\n    cosh = function(x) {\n      const y = /** @type {Math} */ (Math).exp(x);\n      return (y + 1 / y) / 2;\n    };\n  }\n  return cosh;\n}());\n\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return angleInRadians * 180 / Math.PI;\n}\n\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return angleInDegrees * Math.PI / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n","/**\n * @module ol/AssertionError\n */\nimport {VERSION} from './util.js';\n\n/**\n * Error object thrown when an assertion failed. This is an ECMA-262 Error,\n * extended with a `code` property.\n * See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error.\n */\nclass AssertionError extends Error {\n\n  /**\n   * @param {number} code Error code.\n   */\n  constructor(code) {\n    const path = VERSION === 'latest' ? VERSION : 'v' + VERSION.split('-')[0];\n    const message = 'Assertion failed. See https://openlayers.org/en/' + path +\n    '/doc/errors/#' + code + ' for details.';\n\n    super(message);\n\n    /**\n     * Error code. The meaning of the code can be found on\n     * https://openlayers.org/en/latest/doc/errors/ (replace `latest` with\n     * the version found in the OpenLayers script's header comment if a version\n     * other than the latest is used).\n     * @type {number}\n     * @api\n     */\n    this.code = code;\n\n    /**\n     * @type {string}\n     */\n    this.name = 'AssertionError';\n\n    // Re-assign message, see https://github.com/Rich-Harris/buble/issues/40\n    this.message = message;\n  }\n\n}\n\nexport default AssertionError;\n","/**\n * @module ol/asserts\n */\nimport AssertionError from './AssertionError.js';\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {number} errorCode Error code.\n */\nexport function assert(assertion, errorCode) {\n  if (!assertion) {\n    throw new AssertionError(errorCode);\n  }\n}\n","/**\n * @module ol/layer/Base\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {clamp} from '../math.js';\nimport {assign} from '../obj.js';\nimport {assert} from '../asserts.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = assign({}, options);\n\n    properties[LayerProperty.OPACITY] =\n        options.opacity !== undefined ? options.opacity : 1;\n    assert(typeof properties[LayerProperty.OPACITY] === 'number', 64); // Layer opacity must be a number\n\n    properties[LayerProperty.VISIBLE] =\n       options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n       options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n       options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n       options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n       options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ = properties.className !== undefined ? options.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean=} opt_managed Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(opt_managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state = this.state_ || /** @type {?} */ ({\n      layer: this,\n      managed: opt_managed === undefined ? true : opt_managed\n    });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.sourceState = this.getSourceState();\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex !== undefined ? zIndex : (state.managed === false ? Infinity : 0);\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>=} opt_array Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(opt_array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>=} opt_states Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(opt_states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return (\n      /** @type {import(\"../extent.js\").Extent|undefined} */ (this.get(LayerProperty.EXTENT))\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/State.js\").default} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the visibility of the layer (`true` or `false`).\n   * @return {boolean} The visibility of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. The default Z-index is 0.\n   * @return {number} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 64); // Layer opacity must be a number\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after all layers are rendered.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete'\n\n};\n","/**\n * @module ol/source/State\n */\n\n/**\n * @enum {string}\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\nexport default {\n  UNDEFINED: 'undefined',\n  LOADING: 'loading',\n  READY: 'ready',\n  ERROR: 'error'\n};\n","/**\n * @module ol/layer/Layer\n */\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getChangeEventType} from '../Object.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\nimport {assign} from '../obj.js';\nimport RenderEventType from '../render/EventType.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @typedef {function(import(\"../PluggableMap.js\").FrameState):HTMLElement} RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../source/Source.js\").default} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../PluggableMap.js\").default} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n */\n\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Base.js\").default} layer\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {SourceState} sourceState\n * @property {boolean} visible\n * @property {boolean} managed\n * @property {import(\"../extent.js\").Extent} [extent]\n * @property {number} zIndex\n * @property {number} maxResolution\n * @property {number} minResolution\n * @property {number} minZoom\n * @property {number} maxZoom\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is be added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with {@link module:ol/Map#addLayer}. Components\n * like {@link module:ol/interaction/Select~Select} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * {@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n *\n * Please note that for performance reasons several layers might get rendered to\n * the same HTML element, which will cause {@link module:ol/Map~Map#forEachLayerAtPixel} to\n * give false positives. To avoid this, apply different `className` properties to the\n * layers at creation time.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n *\n * @template {import(\"../source/Source.js\").default} SourceType\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n\n    const baseOptions = assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../renderer/Layer.js\").default}\n     */\n    this.renderer_ = null;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addEventListener(getChangeEventType(LayerProperty.SOURCE), this.handleSourcePropertyChange_);\n\n    const source = options.source ? /** @type {SourceType} */ (options.source) : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayersArray(opt_array) {\n    const array = opt_array ? opt_array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getLayerStatesArray(opt_states) {\n    const states = opt_states ? opt_states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n    * @inheritDoc\n    */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? SourceState.UNDEFINED : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(source,\n        EventType.CHANGE, this.handleSourceChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      return layerRenderer.renderFrame(frameState, target);\n    }\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection, and the callback in\n   * {@link module:ol/Map#forEachLayerAtPixel} will receive `null` as layer. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map#addLayer} instead.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(map, RenderEventType.PRECOMPOSE, function(evt) {\n        const renderEvent = /** @type {import(\"../render/Event.js\").default} */ (evt);\n        renderEvent.frameState.layerStatesArray.push(this.getLayerState(false));\n      }, this);\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (resolution < layerState.minResolution || resolution >= layerState.maxResolution) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {import(\"../source/Image.js\").default} [source] Source for this layer.\n */\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Image.js\").default>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n\n  /**\n   * @param {Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n  }\n\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1\n};\n","/**\n * @module ol/extent/Corner\n */\n\n/**\n * Extent corner.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16\n};\n","/**\n * @module ol/extent\n */\nimport {assert} from './asserts.js';\nimport Corner from './extent/Corner.js';\nimport Relationship from './extent/Relationship.js';\n\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent=} opt_extent Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, opt_extent) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n}\n\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0] - value;\n    opt_extent[1] = extent[1] - value;\n    opt_extent[2] = extent[2] + value;\n    opt_extent[3] = extent[3] + value;\n    return opt_extent;\n  } else {\n    return [\n      extent[0] - value,\n      extent[1] - value,\n      extent[2] + value,\n      extent[3] + value\n    ];\n  }\n}\n\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent.slice();\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return extent1[0] <= extent2[0] && extent2[2] <= extent1[2] &&\n      extent1[1] <= extent2[1] && extent2[3] <= extent1[3];\n}\n\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {Relationship} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = minX;\n    opt_extent[1] = minY;\n    opt_extent[2] = maxX;\n    opt_extent[3] = maxY;\n    return opt_extent;\n  } else {\n    return [minX, minY, maxX, maxY];\n  }\n}\n\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(opt_extent) {\n  return createOrUpdate(\n    Infinity, Infinity, -Infinity, -Infinity, opt_extent);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, opt_extent) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, opt_extent);\n}\n\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendCoordinates(extent, coordinates);\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(flatCoordinates, offset, end, stride, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, opt_extent) {\n  const extent = createOrUpdateEmpty(opt_extent);\n  return extendRings(extent, rings);\n}\n\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return extent1[0] == extent2[0] && extent1[2] == extent2[2] &&\n      extent1[1] == extent2[1] && extent1[3] == extent2[3];\n}\n\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(extent, flatCoordinates, offset, end, stride) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === Corner.BOTTOM_LEFT) {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === Corner.BOTTOM_RIGHT) {\n    coordinate = getBottomRight(extent);\n  } else if (corner === Corner.TOP_LEFT) {\n    coordinate = getTopLeft(extent);\n  } else if (corner === Corner.TOP_RIGHT) {\n    coordinate = getTopRight(extent);\n  } else {\n    assert(false, 13); // Invalid corner\n  }\n  return coordinate;\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, opt_extent) {\n  const dx = resolution * size[0] / 2;\n  const dy = resolution * size[1] / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  const x0 = x - xCos + ySin;\n  const x1 = x - xCos - ySin;\n  const x2 = x + xCos - ySin;\n  const x3 = x + xCos + ySin;\n  const y0 = y - xSin - yCos;\n  const y1 = y - xSin + yCos;\n  const y2 = y + xSin + yCos;\n  const y3 = y + xSin - yCos;\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3), Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3), Math.max(y0, y1, y2, y3),\n    opt_extent);\n}\n\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent=} opt_extent Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, opt_extent) {\n  const intersection = opt_extent ? opt_extent : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return extent1[0] <= extent2[2] &&\n      extent1[2] >= extent2[0] &&\n      extent1[1] <= extent2[3] &&\n      extent1[3] >= extent2[1];\n}\n\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent=} opt_extent Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, opt_extent) {\n  if (opt_extent) {\n    opt_extent[0] = extent[0];\n    opt_extent[1] = extent[1];\n    opt_extent[2] = extent[2];\n    opt_extent[3] = extent[3];\n    return opt_extent;\n  } else {\n    return extent;\n  }\n}\n\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (startRel === Relationship.INTERSECTING ||\n      endRel === Relationship.INTERSECTING) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) &&\n        !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - ((endY - maxY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.RIGHT) &&\n        !(startRel & Relationship.RIGHT)) {\n      // potentially intersects right\n      y = endY - ((endX - maxX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n    if (!intersects && !!(endRel & Relationship.BELOW) &&\n        !(startRel & Relationship.BELOW)) {\n      // potentially intersects bottom\n      x = endX - ((endY - minY) / slope);\n      intersects = x >= minX && x <= maxX;\n    }\n    if (!intersects && !!(endRel & Relationship.LEFT) &&\n        !(startRel & Relationship.LEFT)) {\n      // potentially intersects left\n      y = endY - ((endX - minX) * slope);\n      intersects = y >= minY && y <= maxY;\n    }\n\n  }\n  return intersects;\n}\n\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent=} opt_extent Destination extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, opt_extent) {\n  const coordinates = [\n    extent[0], extent[1],\n    extent[0], extent[3],\n    extent[2], extent[1],\n    extent[2], extent[3]\n  ];\n  transformFn(coordinates, coordinates, 2);\n  const xs = [coordinates[0], coordinates[2], coordinates[4], coordinates[6]];\n  const ys = [coordinates[1], coordinates[3], coordinates[5], coordinates[7]];\n  return _boundingExtentXYs(xs, ys, opt_extent);\n}\n","/**\n * @module ol/geom/GeometryType\n */\n\n/**\n * The geometry type. One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, `'Circle'`.\n * @enum {string}\n */\nexport default {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  LINEAR_RING: 'LinearRing',\n  POLYGON: 'Polygon',\n  MULTI_POINT: 'MultiPoint',\n  MULTI_LINE_STRING: 'MultiLineString',\n  MULTI_POLYGON: 'MultiPolygon',\n  GEOMETRY_COLLECTION: 'GeometryCollection',\n  CIRCLE: 'Circle'\n};\n","/**\n * @license\n * Latitude/longitude spherical geodesy formulae taken from\n * http://www.movable-type.co.uk/scripts/latlong.html\n * Licensed under CC-BY-3.0.\n */\n\n/**\n * @module ol/sphere\n */\nimport {toRadians, toDegrees} from './math.js';\nimport GeometryType from './geom/GeometryType.js';\n\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a = Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n      Math.sin(deltaLonBy2) * Math.sin(deltaLonBy2) *\n      Math.cos(lat1) * Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT: {\n      break;\n    }\n    case GeometryType.LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs-new.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area += toRadians(x2 - x1) *\n        (2 + Math.sin(toRadians(y1)) +\n        Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return area * radius * radius / 2.0;\n}\n\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions=} opt_options Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, opt_options) {\n  const options = opt_options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== GeometryType.GEOMETRY_COLLECTION) {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case GeometryType.POINT:\n    case GeometryType.MULTI_POINT:\n    case GeometryType.LINE_STRING:\n    case GeometryType.MULTI_LINE_STRING:\n    case GeometryType.LINEAR_RING: {\n      break;\n    }\n    case GeometryType.POLYGON: {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (geometry).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case GeometryType.MULTI_POLYGON: {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (geometry).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case GeometryType.GEOMETRY_COLLECTION: {\n      const geometries = /** @type {import(\"./geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], opt_options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number=} opt_radius The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, opt_radius) {\n  const radius = opt_radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing));\n  const lon = lon1 + Math.atan2(\n    Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n    Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat));\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * Projection units: `'degrees'`, `'ft'`, `'m'`, `'pixels'`, `'tile-pixels'` or\n * `'us-ft'`.\n * @enum {string}\n */\nconst Units = {\n  DEGREES: 'degrees',\n  FEET: 'ft',\n  METERS: 'm',\n  PIXELS: 'pixels',\n  TILE_PIXELS: 'tile-pixels',\n  USFEET: 'us-ft'\n};\n\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {Object<Units, number>}\n * @api\n */\nexport const METERS_PER_UNIT = {};\n// use the radius of the Normal sphere\nMETERS_PER_UNIT[Units.DEGREES] = 2 * Math.PI * 6370997 / 360;\nMETERS_PER_UNIT[Units.FEET] = 0.3048;\nMETERS_PER_UNIT[Units.METERS] = 1;\nMETERS_PER_UNIT[Units.USFEET] = 1200 / 3937;\n\nexport default Units;\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").default|string} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link module:ol/proj/Units~METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `{number}` view resolution and an `{import(\"../coordinate.js\").Coordinate}` as arguments, and returns\n * the `{number}` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj#getPointResolution} function will be used.\n */\n\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj~get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4~register} function.\n *\n * @api\n */\nclass Projection {\n\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").default}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").default} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ = options.worldExtent !== undefined ?\n      options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ = options.axisOrientation !== undefined ?\n      options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").default} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj~getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport {cosh} from '../math.js';\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [\n  -HALF_SIZE, -HALF_SIZE,\n  HALF_SIZE, HALF_SIZE\n];\n\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: Units.METERS,\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function(resolution, point) {\n        return resolution / cosh(point[1] / RADIUS);\n      }\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG:6.18:3:3857'),\n  new EPSG3857Projection('urn:ogc:def:crs:EPSG::3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857')\n];\n\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  const halfSize = HALF_SIZE;\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = halfSize * input[i] / 180;\n    let y = RADIUS *\n        Math.log(Math.tan(Math.PI * (+input[i + 1] + 90) / 360));\n    if (y > halfSize) {\n      y = halfSize;\n    } else if (y < -halfSize) {\n      y = -halfSize;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, opt_output, opt_dimension) {\n  const length = input.length;\n  const dimension = opt_dimension > 1 ? opt_dimension : 2;\n  let output = opt_output;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = 180 * input[i] / HALF_SIZE;\n    output[i + 1] = 360 * Math.atan(\n      Math.exp(input[i + 1] / RADIUS)) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\nimport Units from './Units.js';\n\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = Math.PI * RADIUS / 180;\n\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n\n  /**\n   * @param {string} code Code.\n   * @param {string=} opt_axisOrientation Axis orientation.\n   */\n  constructor(code, opt_axisOrientation) {\n    super({\n      code: code,\n      units: Units.DEGREES,\n      extent: EXTENT,\n      axisOrientation: opt_axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT\n    });\n\n  }\n\n}\n\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG::4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:EPSG:6.6:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('urn:x-ogc:def:crs:EPSG:4326', 'neu')\n];\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/proj/projections\n */\n\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return cache[code] || null;\n}\n\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj~addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection} object for the new projection and add it with\n * {@link module:ol/proj~addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj~addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection} with\n * {@link module:ol/proj~addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {getDistance} from './sphere.js';\nimport {applyTransform} from './extent.js';\nimport {modulo} from './math.js';\nimport {toEPSG4326, fromEPSG4326, PROJECTIONS as EPSG3857_PROJECTIONS} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport Projection from './proj/Projection.js';\nimport Units, {METERS_PER_UNIT} from './proj/Units.js';\nimport {add as addTransformFunc, clear as clearTransformFuncs, get as getTransformFunc} from './proj/transforms.js';\nimport {add as addProj, clear as clearProj, get as getProj} from './proj/projections.js';\n\n\n/**\n * A projection as {@link module:ol/proj/Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, opt_output, opt_dimension) {\n  let output;\n  if (opt_output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    output = opt_output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>=} opt_output Output array of coordinate values.\n * @param {number=} opt_dimension Dimension.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, opt_output, opt_dimension) {\n  if (opt_output !== undefined && input !== opt_output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      opt_output[i] = input[i];\n    }\n    input = opt_output;\n  }\n  return input;\n}\n\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string' ?\n    getProj(/** @type {string} */ (projectionLike)) :\n    (/** @type {Projection} */ (projectionLike) || null);\n}\n\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the 'point' pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {Units=} opt_units Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, opt_units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (opt_units && opt_units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution = pointResolution * metersPerUnit / METERS_PER_UNIT[opt_units];\n      }\n    }\n  } else {\n    const units = projection.getUnits();\n    if (units == Units.DEGREES && !opt_units || opt_units == Units.DEGREES) {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(projection, get('EPSG:4326'));\n      let vertices = [\n        point[0] - resolution / 2, point[1],\n        point[0] + resolution / 2, point[1],\n        point[0], point[1] - resolution / 2,\n        point[0], point[1] + resolution / 2\n      ];\n      vertices = toEPSG4326(vertices, vertices, 2);\n      const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n      const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n      pointResolution = (width + height) / 2;\n      const metersPerUnit = opt_units ?\n        METERS_PER_UNIT[opt_units] :\n        projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function(source) {\n    projections.forEach(function(destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(projections1, projections2, forwardTransform, inverseTransform) {\n  projections1.forEach(function(projection1) {\n    projections2.forEach(function(projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  } else if (typeof projection === 'string') {\n    return get(projection);\n  } else {\n    return (\n      /** @type {Projection} */ (projection)\n    );\n  }\n}\n\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>=} opt_output Output.\n     * @param {number=} opt_dimension Dimension.\n     * @return {Array<number>} Output.\n     */\n    function(input, opt_output, opt_dimension) {\n      const length = input.length;\n      const dimension = opt_dimension !== undefined ? opt_dimension : 2;\n      const output = opt_output !== undefined ? opt_output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform([input[i], input[i + 1]]);\n        output[i] = point[0];\n        output[i + 1] = point[1];\n        for (let j = dimension - 1; j >= 2; --j) {\n          output[i + j] = input[i + j];\n        }\n      }\n      return output;\n    });\n}\n\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(sourceProj, destProj, createTransformFromCoordinateTransform(forward));\n  addTransformFunc(destProj, sourceProj, createTransformFromCoordinateTransform(inverse));\n}\n\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike=} opt_projection Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, opt_projection) {\n  return transform(coordinate, 'EPSG:4326',\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857');\n}\n\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike=} opt_projection Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, opt_projection) {\n  const lonLat = transform(coordinate,\n    opt_projection !== undefined ? opt_projection : 'EPSG:3857', 'EPSG:4326');\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  } else {\n    const transformFunc = getTransformFromProjections(projection1, projection2);\n    return transformFunc === cloneTransform && equalUnits;\n  }\n}\n\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(sourceProjection, destinationProjection) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj~transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc);\n}\n\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(point, sourceProjection, destinationProjection) {\n  const transformFunc = getTransformFromProjections(sourceProjection, destinationProjection);\n  return transformFunc(point);\n}\n\n/**\n * @type {?Projection}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @param {ProjectionLike} projection The user projection.\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.  Note that this method is not yet a part of\n * the stable API.  Support for user projections is not yet complete and should\n * be considered experimental.\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * Note that this method is not yet a part of the stable API.  Support for user\n * projections is not yet complete and should be considered experimental.\n * @returns {?Projection} The user projection (or null if not set).\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.  Note that this\n * method is not yet a part of the stable API.  Support for user projections is\n * not yet complete and should be considered experimental.\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @returns {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @returns {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @returns {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(EPSG4326_PROJECTIONS, EPSG3857_PROJECTIONS, fromEPSG4326, toEPSG4326);\n}\n\naddCommon();\n","/**\n * @module ol/dom\n */\n\n\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number=} opt_width Canvas width.\n * @param {number=} opt_height Canvas height.\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(opt_width, opt_height) {\n  const canvas = document.createElement('canvas');\n  if (opt_width) {\n    canvas.width = opt_width;\n  }\n  if (opt_height) {\n    canvas.height = opt_height;\n  }\n  return canvas.getContext('2d');\n}\n\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @returns {Node} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {Array<string>} families\n * @property {string} style\n * @property {string} weight\n */\n\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} The CSS font property.\n * @return {FontParameters} The font families (or null if the input spec is invalid).\n */\nexport const getFontParameters = (function() {\n  /**\n   * @type {CSSStyleDeclaration}\n   */\n  let style;\n  /**\n   * @type {Object<string, FontParameters>}\n   */\n  const cache = {};\n  return function(font) {\n    if (!style) {\n      style = document.createElement('div').style;\n    }\n    if (!(font in cache)) {\n      style.font = font;\n      const family = style.fontFamily;\n      const fontWeight = style.fontWeight;\n      const fontStyle = style.fontStyle;\n      style.font = '';\n      if (!family) {\n        return null;\n      }\n      const families = family.split(/,\\s?/);\n      cache[font] = {\n        families: families,\n        weight: fontWeight,\n        style: fontStyle\n      };\n    }\n    return cache[font];\n  };\n})();\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform=} opt_inversePixelTransform Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   * @param {?CanvasRenderingContext2D=} opt_context Context.\n   */\n  constructor(type, opt_inversePixelTransform, opt_frameState, opt_context) {\n\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = opt_inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../PluggableMap.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = opt_frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. Only available\n     * when a Canvas renderer is used, null otherwise.\n     * @type {CanvasRenderingContext2D|null|undefined}\n     * @api\n     */\n    this.context = opt_context;\n\n  }\n\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n */\n\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 32); // Transformation matrix cannot be inverted\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * A string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  return 'matrix(' + mat.join(', ') + ')';\n}\n","/**\n * @module ol/render/canvas\n */\nimport {getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {clear} from '../obj.js';\nimport {create as createTransform} from '../transform.js';\nimport LabelCache from './canvas/LabelCache.js';\n\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle\n */\n\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle]\n * @property {CanvasLineCap} [currentLineCap]\n * @property {Array<number>} currentLineDash\n * @property {number} [currentLineDashOffset]\n * @property {CanvasLineJoin} [currentLineJoin]\n * @property {number} [currentLineWidth]\n * @property {number} [currentMiterLimit]\n * @property {number} [lastStroke]\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle]\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {CanvasLineCap} [lineCap]\n * @property {Array<number>} lineDash\n * @property {number} [lineDashOffset]\n * @property {CanvasLineJoin} [lineJoin]\n * @property {number} [lineWidth]\n * @property {number} [miterLimit]\n */\n\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} lineWidth\n * @property {number} miterLimit\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle\n */\n\n\n/**\n * @typedef {Object} TextState\n * @property {string} font\n * @property {string} [textAlign]\n * @property {string} textBaseline\n * @property {string} [placement]\n * @property {number} [maxAngle]\n * @property {boolean} [overflow]\n * @property {import(\"../style/Fill.js\").default} [backgroundFill]\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke]\n * @property {number} [scale]\n * @property {Array<number>} [padding]\n */\n\n/**\n * Container for decluttered replay instructions that need to be rendered or\n * omitted together, i.e. when styles render both an image and text, or for the\n * characters that form text along lines. The basic elements of this array are\n * `[minX, minY, maxX, maxY, count]`, where the first four entries are the\n * rendered extent of the group in pixel space. `count` is the number of styles\n * in the group, i.e. 2 when an image and a text are grouped, or 1 otherwise.\n * In addition to these four elements, declutter instruction arrays (i.e. the\n * arguments to {@link module:ol/render/canvas~drawImage} are appended to the array.\n * @typedef {Array<*>} DeclutterGroup\n */\n\n\n/**\n * Declutter groups for support of multi geometries.\n * @typedef {Array<DeclutterGroup>} DeclutterGroups\n */\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultFillStyle = '#000';\n\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextAlign = 'center';\n\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultTextBaseline = 'middle';\n\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n\n/**\n * The label cache for text rendering. To change the default cache size of 2048\n * entries, use {@link module:ol/structs/LRUCache#setSize}.\n * @type {LabelCache}\n * @api\n */\nexport const labelCache = new LabelCache();\n\n\n/**\n * @type {!Object<string, number>}\n */\nexport const checkedFonts = {};\n\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const checkFont = (function() {\n  const retries = 100;\n  const checked = checkedFonts;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    const context = getMeasureContext();\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      context.font = fontStyle + ' ' + fontWeight + ' ' + size + referenceFont;\n      referenceWidth = context.measureText(text).width;\n      if (fontFamily != referenceFont) {\n        context.font = fontStyle + ' ' + fontWeight + ' ' + size + fontFamily + ',' + referenceFont;\n        const width = context.measureText(text).width;\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    for (const font in checked) {\n      if (checked[font] < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          checked[font] = retries;\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          if (labelCache.getCount()) {\n            labelCache.clear();\n          }\n        } else {\n          ++checked[font];\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function(fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (!(key in checked)) {\n        checked[key] = retries;\n        if (!isAvailable(font.style, font.weight, family)) {\n          checked[key] = 0;\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n\n/**\n * @return {CanvasRenderingContext2D} Measure context.\n */\nfunction getMeasureContext() {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  return measureContext;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function() {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let div;\n  const heights = textHeights;\n  return function(font) {\n    let height = heights[font];\n    if (height == undefined) {\n      if (!div) {\n        div = document.createElement('div');\n        div.innerHTML = 'M';\n        div.style.margin = '0 !important';\n        div.style.padding = '0 !important';\n        div.style.position = 'absolute !important';\n        div.style.left = '-99999px !important';\n      }\n      div.style.font = font;\n      document.body.appendChild(div);\n      height = div.offsetHeight;\n      heights[font] = height;\n      document.body.removeChild(div);\n    }\n    return height;\n  };\n})();\n\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  const measureContext = getMeasureContext();\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text).width;\n}\n\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @returns {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = measureTextWidth(font, text);\n  cache[text] = width;\n  return width;\n}\n\n\n/**\n * @param {string} font Font to use for measuring.\n * @param {Array<string>} lines Lines to measure.\n * @param {Array<number>} widths Array will be populated with the widths of\n * each line.\n * @return {number} Width of the whole text.\n */\nexport function measureTextWidths(font, lines, widths) {\n  const numLines = lines.length;\n  let width = 0;\n  for (let i = 0; i < numLines; ++i) {\n    const currentWidth = measureTextWidth(font, lines[i]);\n    width = Math.max(width, currentWidth);\n    widths.push(currentWidth);\n  }\n  return width;\n}\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n\nexport const resetTransform = createTransform();\n\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} scale Scale.\n */\nexport function drawImage(context,\n  transform, opacity, image, originX, originY, w, h, x, y, scale) {\n  let alpha;\n  if (opacity != 1) {\n    alpha = context.globalAlpha;\n    context.globalAlpha = alpha * opacity;\n  }\n  if (transform) {\n    context.setTransform.apply(context, transform);\n  }\n\n  context.drawImage(image, originX, originY, w, h, x, y, w * scale, h * scale);\n\n  if (opacity != 1) {\n    context.globalAlpha = alpha;\n  }\n  if (transform) {\n    context.setTransform.apply(context, resetTransform);\n  }\n}\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\n\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_\n * @property {Object} newer\n * @property {Object} older\n * @property {*} value_\n */\n\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache extends EventTarget {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super();\n\n    /**\n     * @type {number}\n     */\n    this.highWaterMark = opt_highWaterMark !== undefined ? opt_highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n\n  }\n\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.getCount() > this.highWaterMark;\n  }\n\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n    this.dispatchEvent(EventType.CLEAR);\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {*=} opt_options Options (reserverd for subclasses).\n   * @return {T} Value.\n   */\n  get(key, opt_options) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined,\n      15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      return entry.value_;\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(entry !== undefined, 15); // Tried to get a value for a key that does not exist in the cache\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(!(key in this.entries_),\n      16); // Tried to set a value for a key that is used already\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n\n}\n\nexport default LRUCache;\n","import {getUid} from '../../util.js';\nimport LRUCache from '../../structs/LRUCache.js';\n\n/**\n * @module ol/render/canvas/LabelCache\n */\n\n/**\n * @classdesc\n * Cache of pre-rendered labels.\n */\nclass LabelCache extends LRUCache {\n\n  /**\n   * @inheritDoc\n   */\n  constructor(opt_highWaterMark) {\n    super(opt_highWaterMark);\n    this.consumers = {};\n  }\n\n  clear() {\n    this.consumers = {};\n    super.clear();\n  }\n\n  /**\n   * @override\n   * @param {string} key Label key.\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\n   * @return {HTMLCanvasElement} Label.\n   */\n  get(key, consumer) {\n    const canvas = super.get(key);\n    const consumerId = getUid(consumer);\n    if (!(consumerId in this.consumers)) {\n      this.consumers[consumerId] = {};\n    }\n    this.consumers[consumerId][key] = true;\n    return canvas;\n  }\n\n  prune() {\n    outer:\n    while (this.canExpireCache()) {\n      const key = this.peekLastKey();\n      for (const consumerId in this.consumers) {\n        if (key in this.consumers[consumerId]) {\n          break outer;\n        }\n      }\n      const canvas = this.pop();\n      canvas.width = 0;\n      canvas.height = 0;\n      for (const consumerId in this.consumers) {\n        delete this.consumers[consumerId][key];\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"./Executor.js\").default} consumer Label consumer.\n   */\n  release(consumer) {\n    delete this.consumers[getUid(consumer)];\n  }\n}\n\nexport default LabelCache;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4\n};\n","/**\n * @module ol/renderer/Layer\n */\nimport {abstract} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport SourceState from '../source/State.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super();\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       * @this {LayerRenderer}\n       */\n      function(zoom, tileRange) {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    ).bind(this);\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default): T} callback Feature callback.\n   * @param {Array<import(\"../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|void} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {}\n\n  /**\n   * @abstract\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    return abstract();\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (image.getState() === ImageState.LOADED) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../ImageBase.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && layer.getSourceState() == SourceState.READY) {\n      layer.changed();\n    }\n  }\n\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../../extent.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport {rotateAtOffset} from '../../render/canvas.js';\nimport LayerRenderer from '../Layer.js';\nimport {create as createTransform, apply as applyTransform, compose as composeTransform, toString} from '../../transform.js';\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform_ = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @protected\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @type {HTMLCanvasElement}\n     * @private\n     */\n    this.createTransformStringCanvas_ = createCanvasContext2D(1, 1).canvas;\n\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {number} opacity Opacity.\n   */\n  useContainer(target, transform, opacity) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (target && target.style.opacity === '' && target.className === layerClassName) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clip(context, frameState, extent) {\n    const pixelRatio = frameState.pixelRatio;\n    const halfWidth = (frameState.size[0] * pixelRatio) / 2;\n    const halfHeight = (frameState.size[1] * pixelRatio) / 2;\n    const rotation = frameState.viewState.rotation;\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    context.save();\n    rotateAtOffset(context, -rotation, halfWidth, halfHeight);\n    context.beginPath();\n    context.moveTo(topLeft[0] * pixelRatio, topLeft[1] * pixelRatio);\n    context.lineTo(topRight[0] * pixelRatio, topRight[1] * pixelRatio);\n    context.lineTo(bottomRight[0] * pixelRatio, bottomRight[1] * pixelRatio);\n    context.lineTo(bottomLeft[0] * pixelRatio, bottomLeft[1] * pixelRatio);\n    context.clip();\n    rotateAtOffset(context, rotation, halfWidth, halfHeight);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(type, this.inversePixelTransform, frameState, context);\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(this.tempTransform_, dx1, dy1, sx, sy, -rotation, dx2, dy2);\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @return {Uint8ClampedArray|Uint8Array} The result.  If there is no data at the pixel\n   *    location, null will be returned.  If there is data, but pixel values cannot be\n   *    returned, and empty array will be returned.\n   */\n  getDataAtPixel(pixel, frameState, hitTolerance) {\n    const renderPixel = applyTransform(this.inversePixelTransform, pixel.slice());\n    const context = this.context;\n\n    let data;\n    try {\n      data = context.getImageData(Math.round(renderPixel[0]), Math.round(renderPixel[1]), 1, 1).data;\n    } catch (err) {\n      if (err.name === 'SecurityError') {\n        // tainted canvas, we assume there is data at the given pixel (although there might not be)\n        return new Uint8Array();\n      }\n      return data;\n    }\n\n    if (data[3] === 0) {\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {string} CSS transform.\n   */\n  createTransformString(transform) {\n    this.createTransformStringCanvas_.style.transform = toString(transform);\n    return this.createTransformStringCanvas_.style.transform;\n  }\n\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport ViewHint from '../../ViewHint.js';\nimport {containsExtent, intersects} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {compose as composeTransform, makeInverse} from '../../transform.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../ImageBase.js\").default}\n     */\n    this.image_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return !this.image_ ? null : this.image_.getImage();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, fromUserExtent(layerState.extent, viewState.projection));\n    }\n\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] && !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      const image = imageSource.getImage(renderedExtent, viewResolution, pixelRatio, projection);\n      if (image && this.loadImage(image)) {\n        this.image_ = image;\n      }\n    }\n\n    return !!this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState, target) {\n    const image = this.image_;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const size = frameState.size;\n    const scale = pixelRatio * imageResolution / (viewResolution * imagePixelRatio);\n\n    let width = Math.round(size[0] * pixelRatio);\n    let height = Math.round(size[1] * pixelRatio);\n    const rotation = viewState.rotation;\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / pixelRatio, 1 / pixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = this.createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n\n    const context = this.context;\n    const canvas = context.canvas;\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(layerState.extent, viewState.projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersects(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      scale, scale,\n      0,\n      imagePixelRatio * (imageExtent[0] - viewCenter[0]) / imageResolution,\n      imagePixelRatio * (viewCenter[1] - imageExtent[3]) / imageResolution);\n\n    this.renderedResolution = imageResolution * pixelRatio / imagePixelRatio;\n\n    const dx = transform[4];\n    const dy = transform[5];\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    this.preRender(context, frameState);\n    if (dw >= 0.5 && dh >= 0.5) {\n      const opacity = layerState.opacity;\n      let previousAlpha;\n      if (opacity !== 1) {\n        previousAlpha = this.context.globalAlpha;\n        this.context.globalAlpha = opacity;\n      }\n      this.context.drawImage(img, 0, 0, +img.width, +img.height,\n        Math.round(dx), Math.round(dy), Math.round(dw), Math.round(dh));\n      if (opacity !== 1) {\n        this.context.globalAlpha = previousAlpha;\n      }\n    }\n    this.postRender(context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n\n  }\n\n}\n\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/Image\n */\nimport BaseImageLayer from './BaseImage.js';\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\n\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n\n  /**\n   * @param {import(\"./BaseImage.js\").Options=} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError'\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\nimport {assign} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {import(\"../source/Tile.js\").default} [source] Source for this layer.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n */\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {Layer<import(\"../source/Tile.js\").default>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(options.useInterimTilesOnError !== undefined ?\n      options.useInterimTilesOnError : true);\n\n  }\n\n  /**\n  * Return the level as number to which we will preload tiles up to.\n  * @return {number} The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n  * Set the level as number to which we will preload tiles up to.\n  * @param {number} preload The level to preload tiles up to.\n  * @observable\n  * @api\n  */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n  * Whether we use interim tiles on error.\n  * @return {boolean} Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR));\n  }\n\n  /**\n  * Set whether we use interim tiles on error.\n  * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n  * @observable\n  * @api\n  */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n}\n\n\nexport default BaseTileLayer;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return this.minX <= tileRange.minX && tileRange.maxX <= this.maxX &&\n       this.minY <= tileRange.minY && tileRange.maxY <= this.maxY;\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return this.minX == tileRange.minX && this.minY == tileRange.minY &&\n       this.maxX == tileRange.maxX && this.maxY == tileRange.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return this.minX <= tileRange.maxX &&\n       this.maxX >= tileRange.minX &&\n       this.minY <= tileRange.maxY &&\n       this.maxY >= tileRange.minY;\n  }\n}\n\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange=} tileRange TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  } else {\n    return new TileRange(minX, maxX, minY, maxY);\n  }\n}\n\n\nexport default TileRange;\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n  ABORT: 5\n};\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport {getUid} from '../../util.js';\nimport {fromUserExtent} from '../../proj.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {createEmpty, equals, getIntersection, getTopLeft} from '../../extent.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {apply as applyTransform, compose as composeTransform, makeInverse} from '../../transform.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return tileState == TileState.LOADED ||\n        tileState == TileState.EMPTY ||\n        tileState == TileState.ERROR && !useInterimTilesOnError;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (!tileLayer.getUseInterimTilesOnError()) {\n        // When useInterimTilesOnError is false, we consider the error tile as loaded.\n        tile.setState(TileState.LOADED);\n      } else if (tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * TODO: File a TypeScript issue about inheritDoc not being followed\n   * all the way.  Without this explicit return type, the VectorTileLayer\n   * renderFrame function does not pass.\n   *\n   * @inheritDoc\n   * @returns {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const layerExtent = layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(extent, fromUserExtent(layerState.extent, projection));\n    }\n\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    // desired dimensions of the canvas in pixels\n    let width = Math.round(frameState.size[0] * tilePixelRatio);\n    let height = Math.round(frameState.size[1] * tilePixelRatio);\n\n    if (rotation) {\n      const size = Math.round(Math.sqrt(width * width + height * height));\n      width = size;\n      height = size;\n    }\n\n    const dx = tileResolution * width / 2 / tilePixelRatio;\n    const dy = tileResolution * height / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(tileSource, projection, tilesToDrawByZ);\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            const inTransition = tile.inTransition(uid);\n            if (!this.newTiles_ && (inTransition || this.renderedTiles.indexOf(tile) === -1)) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(tile.tileCoord, tmpTileRange, tmpExtent);\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(tile.tileCoord, findLoadedTiles, tmpTileRange, tmpExtent);\n        }\n\n      }\n    }\n\n\n    const canvasScale = tileResolution / viewResolution;\n\n    // set forward and inverse pixel transforms\n    composeTransform(this.pixelTransform,\n      frameState.size[0] / 2, frameState.size[1] / 2,\n      1 / tilePixelRatio, 1 / tilePixelRatio,\n      rotation,\n      -width / 2, -height / 2\n    );\n\n    const canvasTransform = this.createTransformString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(this.tempTransform_,\n      width / 2, height / 2,\n      canvasScale, canvasScale,\n      0,\n      -width / 2, -height / 2\n    );\n\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let clips, clipZs, currentClip;\n    if (layerState.opacity === 1 && (!this.containerReused || tileSource.getOpaque(frameState.viewState.projection))) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(currentZ, pixelRatio, projection);\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(getTopLeft(canvasExtent), currentZ);\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform_, [\n        tilePixelRatio * (originTileExtent[0] - canvasExtent[0]) / tileResolution,\n        tilePixelRatio * (canvasExtent[3] - originTileExtent[3]) / tileResolution\n      ]);\n      const tileGutter = tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (tilesToDraw[tileCoordKey]);\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const floatX = (origin[0] - (originTileCoord[1] - tileCoord[1]) * dx);\n        const nextX = Math.round(floatX + dx);\n        const floatY = (origin[1] - (originTileCoord[2] - tileCoord[2]) * dy);\n        const nextY = Math.round(floatY + dy);\n        const x = Math.round(floatX);\n        const y = Math.round(floatY);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition = transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            context.save();\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                context.beginPath();\n                // counter-clockwise (outer ring) for current tile\n                context.moveTo(currentClip[0], currentClip[1]);\n                context.lineTo(currentClip[2], currentClip[3]);\n                context.lineTo(currentClip[4], currentClip[5]);\n                context.lineTo(currentClip[6], currentClip[7]);\n                // clockwise (inner ring) for higher z tile\n                context.moveTo(clip[6], clip[7]);\n                context.lineTo(clip[4], clip[5]);\n                context.lineTo(clip[2], clip[3]);\n                context.lineTo(clip[0], clip[1]);\n                context.clip();\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(tile, frameState, x, y, w, h, tileGutter, transition, layerState.opacity);\n        if (clips && !inTransition) {\n          context.restore();\n        }\n        this.renderedTiles.push(tile);\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged = !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(frameState, tileSource, tileGrid, pixelRatio,\n      projection, extent, z, tileLayer.getPreload());\n    this.updateCacheSize_(frameState, tileSource);\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n\n    if (canvasTransform !== canvas.style.transform) {\n      canvas.style.transform = canvasTransform;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @param {number} opacity Opacity.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition, opacity) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const uid = getUid(this);\n    const tileAlpha = transition ? tile.getAlpha(uid, frameState.time) : 1;\n    const alpha = opacity * tileAlpha;\n    const alphaChanged = alpha !== this.context.globalAlpha;\n    if (alphaChanged) {\n      this.context.save();\n      this.context.globalAlpha = alpha;\n    }\n    this.context.drawImage(image, gutter, gutter,\n      image.width - 2 * gutter, image.height - 2 * gutter, x, y, w, h);\n\n    if (alphaChanged) {\n      this.context.restore();\n    }\n    if (tileAlpha !== 1) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../PluggableMap.js\").default} map Map.\n       * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function(tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey]);\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../PluggableMap.js\").PostRenderFunction} */ (postRenderFunction)\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Check if the cache is big enough, and increase its size if necessary.\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @private\n   */\n  updateCacheSize_(frameState, tileSource) {\n    const tileSourceKey = getUid(tileSource);\n    let size = 0;\n    if (tileSourceKey in frameState.usedTiles) {\n      size += Object.keys(frameState.usedTiles[tileSourceKey]).length;\n    }\n    if (tileSourceKey in frameState.wantedTiles) {\n      size += Object.keys(frameState.wantedTiles[tileSourceKey]).length;\n    }\n    const tileCache = tileSource.tileCache;\n    if (tileCache.highWaterMark < size) {\n      tileCache.highWaterMark = size;\n    }\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../PluggableMap.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to 'preload' levels.\n   * @param {function(import(\"../../Tile.js\").default)=} opt_tileCallback Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    opt_tileCallback\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (currentZ - z <= preload) {\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([tile, tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord), tileResolution]);\n              }\n            }\n            if (opt_tileCallback !== undefined) {\n              opt_tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n  }\n\n}\n\n\n/**\n * @function\n * @return {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default}\n */\nCanvasTileLayerRenderer.prototype.getLayer;\n\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n\n  /**\n   * @param {import(\"./BaseTile.js\").Options=} opt_options Tile layer options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n\n}\n\nexport default TileLayer;\n","/**\n * @module ol/color\n */\nimport {assert} from './asserts.js';\nimport {clamp} from './math.js';\n\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n\n/**\n * This RegExp matches # followed by 3, 4, 6, or 8 hex digits.\n * @const\n * @type {RegExp}\n * @private\n */\nconst HEX_COLOR_RE_ = /^#([a-f0-9]{3}|[a-f0-9]{4}(?:[a-f0-9]{2}){0,2})$/i;\n\n\n/**\n * Regular expression for matching potential named color style strings.\n * @const\n * @type {RegExp}\n * @private\n */\nconst NAMED_COLOR_RE_ = /^([a-z]*)$|^hsla?\\(.*\\)$/i;\n\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  } else {\n    return toString(color);\n  }\n}\n\n/**\n * Return named color as an rgba string.\n * @param {string} color Named color.\n * @return {string} Rgb string.\n */\nfunction fromNamed(color) {\n  const el = document.createElement('div');\n  el.style.color = color;\n  if (el.style.color !== '') {\n    document.body.appendChild(el);\n    const rgb = getComputedStyle(el).color;\n    document.body.removeChild(el);\n    return rgb;\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport const fromString = (\n  function() {\n\n    // We maintain a small cache of parsed strings.  To provide cheap LRU-like\n    // semantics, whenever the cache grows too large we simply delete an\n    // arbitrary 25% of the entries.\n\n    /**\n     * @const\n     * @type {number}\n     */\n    const MAX_CACHE_SIZE = 1024;\n\n    /**\n     * @type {Object<string, Color>}\n     */\n    const cache = {};\n\n    /**\n     * @type {number}\n     */\n    let cacheSize = 0;\n\n    return (\n      /**\n       * @param {string} s String.\n       * @return {Color} Color.\n       */\n      function(s) {\n        let color;\n        if (cache.hasOwnProperty(s)) {\n          color = cache[s];\n        } else {\n          if (cacheSize >= MAX_CACHE_SIZE) {\n            let i = 0;\n            for (const key in cache) {\n              if ((i++ & 3) === 0) {\n                delete cache[key];\n                --cacheSize;\n              }\n            }\n          }\n          color = fromStringInternal_(s);\n          cache[s] = color;\n          ++cacheSize;\n        }\n        return color;\n      }\n    );\n\n  })();\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  } else {\n    return fromString(color);\n  }\n}\n\n/**\n * @param {string} s String.\n * @private\n * @return {Color} Color.\n */\nfunction fromStringInternal_(s) {\n  let r, g, b, a, color;\n\n  if (NAMED_COLOR_RE_.exec(s)) {\n    s = fromNamed(s);\n  }\n\n  if (HEX_COLOR_RE_.exec(s)) { // hex\n    const n = s.length - 1; // number of hex digits\n    let d; // number of digits per channel\n    if (n <= 4) {\n      d = 1;\n    } else {\n      d = 2;\n    }\n    const hasAlpha = n === 4 || n === 8;\n    r = parseInt(s.substr(1 + 0 * d, d), 16);\n    g = parseInt(s.substr(1 + 1 * d, d), 16);\n    b = parseInt(s.substr(1 + 2 * d, d), 16);\n    if (hasAlpha) {\n      a = parseInt(s.substr(1 + 3 * d, d), 16);\n    } else {\n      a = 255;\n    }\n    if (d == 1) {\n      r = (r << 4) + r;\n      g = (g << 4) + g;\n      b = (b << 4) + b;\n      if (hasAlpha) {\n        a = (a << 4) + a;\n      }\n    }\n    color = [r, g, b, a / 255];\n  } else if (s.indexOf('rgba(') == 0) { // rgba()\n    color = s.slice(5, -1).split(',').map(Number);\n    normalize(color);\n  } else if (s.indexOf('rgb(') == 0) { // rgb()\n    color = s.slice(4, -1).split(',').map(Number);\n    color.push(1);\n    normalize(color);\n  } else {\n    assert(false, 14); // Invalid color\n  }\n  return color;\n}\n\n\n/**\n * TODO this function is only used in the test, we probably shouldn't export it\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : color[3];\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  if (NAMED_COLOR_RE_.test(s)) {\n    s = fromNamed(s);\n  }\n  return HEX_COLOR_RE_.test(s) || s.indexOf('rgba(') === 0 || s.indexOf('rgb(') === 0;\n}\n","/**\n * @module ol/colorlike\n */\nimport {toString} from './color.js';\n\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, pattern, or gradient. The origin for patterns and\n * gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike} color Color.\n * @return {ColorLike} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (Array.isArray(color)) {\n    return toString(color);\n  } else {\n    return color;\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity\n * @property {boolean} rotateWithView\n * @property {number} rotation\n * @property {number} scale\n */\n\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.scale_ = options.scale;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size of the hit-detection image.\n   */\n  getHitDetectionImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n  /**\n   * Set the scale.\n   *\n   * @param {number} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @template T\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport ImageState from '../ImageState.js';\nimport {defaultStrokeStyle, defaultFillStyle, defaultLineCap, defaultLineWidth, defaultLineJoin, defaultMiterLimit} from '../render/canvas.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * Specify radius for regular polygons, or radius1 and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} [radius] Radius of a regular polygon.\n * @property {number} [radius1] Outer radius of a star.\n * @property {number} [radius2] Inner radius of a star.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's point facing up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n */\n\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle]\n * @property {number} strokeWidth\n * @property {number} size\n * @property {CanvasLineCap} lineCap\n * @property {Array<number>} lineDash\n * @property {number} lineDashOffset\n * @property {CanvasLineJoin} lineJoin\n * @property {number} miterLimit\n */\n\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when `radius1` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: 1,\n      rotateWithView: rotateWithView,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: 1\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius !== undefined ? options.radius : options.radius1;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.hitDetectionImageSize_ = null;\n\n    this.render();\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    return this.anchor_;\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.canvas_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageSize() {\n    return this.imageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getHitDetectionImageSize() {\n    return this.hitDetectionImageSize_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageState() {\n    return ImageState.LOADED;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * @inheritDoc\n   */\n  load() {}\n\n  /**\n   * @inheritDoc\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * @protected\n   */\n  render() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = this.stroke_.getColor();\n      if (strokeStyle === null) {\n        strokeStyle = defaultStrokeStyle;\n      }\n      strokeStyle = asColorLike(strokeStyle);\n      strokeWidth = this.stroke_.getWidth();\n      if (strokeWidth === undefined) {\n        strokeWidth = defaultLineWidth;\n      }\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset();\n      lineJoin = this.stroke_.getLineJoin();\n      if (lineJoin === undefined) {\n        lineJoin = defaultLineJoin;\n      }\n      lineCap = this.stroke_.getLineCap();\n      if (lineCap === undefined) {\n        lineCap = defaultLineCap;\n      }\n      miterLimit = this.stroke_.getMiterLimit();\n      if (miterLimit === undefined) {\n        miterLimit = defaultMiterLimit;\n      }\n    }\n\n    let size = 2 * (this.radius_ + strokeWidth) + 1;\n\n    const renderOptions = {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit\n    };\n\n    const context = createCanvasContext2D(size, size);\n    this.canvas_ = context.canvas;\n\n    // canvas.width and height are rounded to the closest integer\n    size = this.canvas_.width;\n    const imageSize = size;\n\n    this.draw_(renderOptions, context, 0, 0);\n\n    this.createHitDetectionCanvas_(renderOptions);\n\n    this.anchor_ = [size / 2, size / 2];\n    this.size_ = [size, size];\n    this.imageSize_ = [imageSize, imageSize];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  draw_(renderOptions, context, x, y) {\n    let i, angle0, radiusC;\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (context.setLineDash && renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    this.hitDetectionImageSize_ = [renderOptions.size, renderOptions.size];\n    this.hitDetectionCanvas_ = this.canvas_;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        const context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.hitDetectionCanvas_ = context.canvas;\n\n        this.drawHitDetectionCanvas_(renderOptions, context, 0, 0);\n      }\n    }\n\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   * @param {number} x The origin for the symbol (x).\n   * @param {number} y The origin for the symbol (y).\n   */\n  drawHitDetectionCanvas_(renderOptions, context, x, y) {\n    // reset transform\n    context.setTransform(1, 0, 0, 1, 0, 0);\n\n    // then move to (x, y)\n    context.translate(x, y);\n\n    context.beginPath();\n\n    let points = this.points_;\n    if (points === Infinity) {\n      context.arc(\n        renderOptions.size / 2, renderOptions.size / 2,\n        this.radius_, 0, 2 * Math.PI, true);\n    } else {\n      const radius2 = (this.radius2_ !== undefined) ? this.radius2_\n        : this.radius_;\n      if (radius2 !== this.radius_) {\n        points = 2 * points;\n      }\n      let i, radiusC, angle0;\n      for (i = 0; i <= points; i++) {\n        angle0 = i * 2 * Math.PI / points - Math.PI / 2 + this.angle_;\n        radiusC = i % 2 === 0 ? this.radius_ : radius2;\n        context.lineTo(renderOptions.size / 2 + radiusC * Math.cos(angle0),\n          renderOptions.size / 2 + radiusC * Math.sin(angle0));\n      }\n    }\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (this.stroke_) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.stroke();\n    }\n    context.closePath();\n  }\n\n}\n\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n */\n\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke\n    });\n\n  }\n\n  /**\n  * Clones the style.\n  * @return {CircleStyle} The cloned style.\n  * @override\n  * @api\n  */\n  clone() {\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius()\n    });\n    style.setOpacity(this.getOpacity());\n    style.setScale(this.getScale());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color=null] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `undefined` (no dash).\n * Please note that Internet Explorer 10 and lower do not support the `setLineDash` method on\n * the `CanvasRenderingContext2D` and therefore this option will have no visual effect in these browsers.\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth()\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * Please note that Internet Explorer 10 and lower [do not support][mdn] the\n   * `setLineDash` method on the `CanvasRenderingContext2D` and therefore this\n   * property will have no visual effect in these browsers.\n   *\n   * [mdn]: https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/setLineDash#Browser_compatibility\n   *\n   * @param {Array<number>} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n\n/**\n * A function that takes an {@link module:ol/Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style} or an array of them. This way e.g. a\n * vector layer can be styled.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature} as argument and returns an\n * {@link module:ol/geom/Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>),import(\"../render.js\").State): void}\n * RenderFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *\n *  var fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)'\n *  });\n *  var stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25\n *  });\n *  var styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5\n *      }),\n *      fill: fill,\n *      stroke: stroke\n *    })\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Fill, Stroke, Circle, Style} from 'ol/style';\n *  import GeometryType from 'ol/geom/GeometryType';\n *\n *  var white = [255, 255, 255, 1];\n *  var blue = [0, 153, 255, 1];\n *  var width = 3;\n *  styles[GeometryType.POLYGON] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5]\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POLYGON] =\n *      styles[GeometryType.POLYGON];\n *  styles[GeometryType.LINE_STRING] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2\n *      })\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width\n *      })\n *    })\n *  ];\n *  styles[GeometryType.MULTI_LINE_STRING] =\n *      styles[GeometryType.LINE_STRING];\n *  styles[GeometryType.POINT] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2\n *        })\n *      }),\n *      zIndex: Infinity\n *    })\n *  ];\n *  styles[GeometryType.MULTI_POINT] =\n *      styles[GeometryType.POINT];\n *  styles[GeometryType.GEOMETRY_COLLECTION] =\n *      styles[GeometryType.POLYGON].concat(\n *          styles[GeometryType.LINE_STRING],\n *          styles[GeometryType.POINT]\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options=} opt_options Style options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n       * @private\n       * @type {import(\"./Image.js\").default}\n       */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (geometry).clone();\n    }\n    return new Style({\n      geometry: geometry,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex()\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function(feature) {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (feature.get(geometry))\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function() {\n        return (\n          /** @type {import(\"../geom/Geometry.js\").default} */ (geometry)\n        );\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `Style` or an array of `Style`\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function() {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n\n/**\n * @type {Array<Style>}\n */\nlet defaultStyles = null;\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)'\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5\n        }),\n        fill: fill,\n        stroke: stroke\n      })\n    ];\n  }\n  return defaultStyles;\n}\n\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/GeometryType.js\").default, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles[GeometryType.POLYGON] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5]\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_POLYGON] =\n      styles[GeometryType.POLYGON];\n\n  styles[GeometryType.LINE_STRING] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2\n      })\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width\n      })\n    })\n  ];\n  styles[GeometryType.MULTI_LINE_STRING] =\n      styles[GeometryType.LINE_STRING];\n\n  styles[GeometryType.CIRCLE] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING]\n      );\n\n\n  styles[GeometryType.POINT] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2\n        })\n      }),\n      zIndex: Infinity\n    })\n  ];\n  styles[GeometryType.MULTI_POINT] =\n      styles[GeometryType.POINT];\n\n  styles[GeometryType.GEOMETRY_COLLECTION] =\n      styles[GeometryType.POLYGON].concat(\n        styles[GeometryType.LINE_STRING],\n        styles[GeometryType.POINT]\n      );\n\n  return styles;\n}\n\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport {assign} from '../obj.js';\nimport {createDefaultStyle, toFunction as toStyleFunction} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default} [source] Source.\n * @property {import(\"../PluggableMap.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link module:ol/Map#addLayer}.\n * @property {boolean} [declutter=false] Declutter images and text. Decluttering is applied to all\n * image and text styles of all Vector and VectorTile layers that have set this to `true`. The priority\n * is defined by the z-index of the layer, the `zIndex` of the style and the render order of features.\n * Higher z-index means higher priority. Within the same z-index, a feature rendered before another has\n * higher priority.\n * @property {import(\"../style/Style.js\").StyleLike} [style] Layer style. See\n * {@link module:ol/style} for default style which will be used if this is not defined.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n */\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder'\n};\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default|import(\"../source/VectorTile.js\").default} VectorSourceType\n * @extends {Layer<VectorSourceType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const baseOptions = assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.declutter_ = options.declutter !== undefined ? options.declutter : false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ = options.renderBuffer !== undefined ?\n      options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ = options.updateWhileAnimating !== undefined ?\n      options.updateWhileAnimating : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ = options.updateWhileInteracting !== undefined ?\n      options.updateWhileInteracting : false;\n\n  }\n\n  /**\n   * @return {boolean} Declutter.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in {@link import(\"../PluggableMap.js\").default#getFeaturesAtPixel}: Text\n   * is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").default>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return (\n    /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (this.get(Property.RENDER_ORDER))\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike}\n   *     Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If it is `undefined` the default style is used. If\n   * it is `null` the layer has no style (a `null` style), so only features\n   * that have their own styles will be rendered in the layer. See\n   * {@link module:ol/style} for information on the default style.\n   * @param {import(\"../style/Style.js\").default|Array<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null|undefined} style Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style !== undefined ? style : createDefaultStyle;\n    this.styleFunction_ = style === null ?\n      undefined : toStyleFunction(this.style_);\n    this.changed();\n  }\n\n}\n\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/geom/flat/inflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>=} opt_coordinates Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(flatCoordinates, offset, end, stride, opt_coordinates) {\n  const coordinates = opt_coordinates !== undefined ? opt_coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>=} opt_coordinatess Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(flatCoordinates, offset, ends, stride, opt_coordinatess) {\n  const coordinatess = opt_coordinatess !== undefined ? opt_coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates, offset, end, stride, coordinatess[i]);\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>=} opt_coordinatesss\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(flatCoordinates, offset, endss, stride, opt_coordinatesss) {\n  const coordinatesss = opt_coordinatesss !== undefined ? opt_coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] = inflateCoordinatesArray(\n      flatCoordinates, offset, ends, stride, coordinatesss[i]);\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   */\n  drawCustom(geometry, feature, renderer) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawCircle(circleGeometry, feature) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   */\n  drawFeature(feature, style) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawLineString(lineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPoint(multiPointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPoint(pointGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawPolygon(polygonGeometry, feature) {}\n\n  /**\n   * @param {import(\"../geom/Geometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   */\n  drawText(geometry, feature) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"./canvas.js\").DeclutterGroup=} opt_declutterGroup Declutter.\n   */\n  setImageStyle(imageStyle, opt_declutterGroup) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"./canvas.js\").DeclutterGroups=} opt_declutterGroups Declutter.\n   */\n  setTextStyle(textStyle, opt_declutterGroups) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12\n};\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {buffer, clone, coordinateRelationship} from '../../extent.js';\nimport Relationship from '../../extent/Relationship.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {inflateCoordinates, inflateCoordinatesArray, inflateMultiCoordinatesArray} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultFillStyle, defaultStrokeStyle,\n  defaultMiterLimit, defaultLineWidth, defaultLineJoin, defaultLineDashOffset,\n  defaultLineDash, defaultLineCap} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1 ? dashArray : dashArray.map(function(dash) {\n      return dash * pixelRatio;\n    });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatCoordinates(flatCoordinates, offset, end, stride, closed, skipFirst) {\n\n    let myEnd = this.coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          this.coordinates[myEnd++] = lastXCoord;\n          this.coordinates[myEnd++] = lastYCoord;\n        }\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else if (nextRel === Relationship.INTERSECTING) {\n        this.coordinates[myEnd++] = nextCoord[0];\n        this.coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      this.coordinates[myEnd++] = lastXCoord;\n      this.coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  drawCustom(geometry, feature, renderer) {\n    this.beginGeometry(geometry, feature);\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n    if (type == GeometryType.MULTI_POLYGON) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry);\n      flatCoordinates = geometry.getOrientedFlatCoordinates();\n      builderEndss = [];\n      const endss = geometry.getEndss();\n      offset = 0;\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const myEnds = [];\n        offset = this.drawCustomCoordinates_(flatCoordinates, offset, endss[i], stride, myEnds);\n        builderEndss.push(myEnds);\n      }\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEndss, geometry, renderer, inflateMultiCoordinatesArray]);\n    } else if (type == GeometryType.POLYGON || type == GeometryType.MULTI_LINE_STRING) {\n      builderEnds = [];\n      flatCoordinates = (type == GeometryType.POLYGON) ?\n        /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getOrientedFlatCoordinates() :\n        geometry.getFlatCoordinates();\n      offset = this.drawCustomCoordinates_(flatCoordinates, 0,\n        /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (geometry).getEnds(),\n        stride, builderEnds);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnds, geometry, renderer, inflateCoordinatesArray]);\n    } else if (type == GeometryType.LINE_STRING || type == GeometryType.MULTI_POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      builderEnd = this.appendFlatCoordinates(\n        flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer, inflateCoordinates]);\n    } else if (type == GeometryType.POINT) {\n      flatCoordinates = geometry.getFlatCoordinates();\n      this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n      builderEnd = this.coordinates.length;\n      this.instructions.push([CanvasInstruction.CUSTOM,\n        builderBegin, builderEnd, geometry, renderer]);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  beginGeometry(geometry, feature) {\n    const extent = geometry.getExtent();\n    this.beginGeometryInstruction1_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [CanvasInstruction.BEGIN_GEOMETRY, feature, 0, extent];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {CanvasInstruction} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillStyle = asColorLike(fillStyleColor ?\n        fillStyleColor : defaultFillStyle);\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(strokeStyleColor ?\n        strokeStyleColor : defaultStrokeStyle);\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap = strokeStyleLineCap !== undefined ?\n        strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash ?\n        strokeStyleLineDash.slice() : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset ?\n        strokeStyleLineDashOffset : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin = strokeStyleLineJoin !== undefined ?\n        strokeStyleLineJoin : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth = strokeStyleWidth !== undefined ?\n        strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit = strokeStyleMiterLimit !== undefined ?\n        strokeStyleMiterLimit : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align it!\n      fillInstruction.push(true);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth * this.pixelRatio, state.lineCap,\n      state.lineJoin, state.miterLimit,\n      this.applyPixelRatio(state.lineDash), state.lineDashOffset * this.pixelRatio\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (state.currentStrokeStyle != strokeStyle ||\n        state.currentLineCap != lineCap ||\n        (lineDash != state.currentLineDash && !equals(state.currentLineDash, lineDash)) ||\n        state.currentLineDashOffset != lineDashOffset ||\n        state.currentLineJoin != lineJoin ||\n        state.currentLineWidth != lineWidth ||\n        state.currentMiterLimit != miterLimit) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = this.resolution * (this.maxLineWidth + 1) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} My end.\n   */\n  drawCoordinates_(flatCoordinates, offset, end, stride) {\n    return this.appendFlatCoordinates(flatCoordinates, offset, end, stride, false, false);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPoint(pointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPoint(multiPointGeometry, feature) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const stride = multiPointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.drawCoordinates_(\n      flatCoordinates, 0, flatCoordinates.length, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_ * this.pixelRatio, this.width_\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE, myBegin, myEnd, this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_, this.anchorY_, this.declutterGroups_, this.height_, this.opacity_,\n      this.originX_, this.originY_, this.rotateWithView_, this.rotation_,\n      this.scale_, this.width_\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setImageStyle(imageStyle, declutterGroups) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const hitDetectionImage = imageStyle.getHitDetectionImage(1);\n    const image = imageStyle.getImage(1);\n    const origin = imageStyle.getOrigin();\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n    this.hitDetectionImage_ = hitDetectionImage;\n    this.image_ = image;\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScale();\n    this.width_ = size[0];\n  }\n}\n\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasInstruction, {strokeInstruction, beginPathInstruction} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatCoordinates(\n      flatCoordinates, offset, end, stride, false, false);\n    const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawLineString(lineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(flatCoordinates, 0, flatCoordinates.length, stride);\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiLineString(multiLineStringGeometry, feature) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n      state.miterLimit, state.lineDash, state.lineDashOffset\n    ], beginPathInstruction);\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(flatCoordinates, offset, ends[i], stride);\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const state = this.state;\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @inheritDoc.\n   */\n  applyStroke(state) {\n    if (state.lastStroke != undefined && state.lastStroke != this.coordinates.length) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredSegmentDistance, squaredDistance} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>=} opt_simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(flatCoordinates, offset, end,\n  stride, squaredTolerance, highQuality, opt_simplifiedFlatCoordinates) {\n  const simplifiedFlatCoordinates = opt_simplifiedFlatCoordinates !== undefined ?\n    opt_simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(flatCoordinates, offset, end,\n      stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0);\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates, offset, end, stride, squaredTolerance,\n    simplifiedFlatCoordinates, 0);\n  return simplifiedFlatCoordinates;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(\n        x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(flatCoordinates, offset,\n  ends, stride, squaredTolerance, simplifiedFlatCoordinates,\n  simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates, offset, end, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates, offset, endss, stride, squaredTolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates, offset, ends, stride, squaredTolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(flatCoordinates, offset, end,\n  stride, squaredTolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n          flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(flatCoordinates, offset, end, stride,\n  tolerance, simplifiedFlatCoordinates, simplifiedOffset) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if ((dx1 * dy2 == dy1 * dx2) &&\n        ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n        ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates, offset, ends, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates, offset, end, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset);\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates, offset, endss, stride,\n  tolerance,\n  simplifiedFlatCoordinates, simplifiedOffset, simplifiedEndss) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates, offset, ends, stride,\n      tolerance,\n      simplifiedFlatCoordinates, simplifiedOffset, simplifiedEnds);\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {defaultFillStyle} from '../canvas.js';\nimport CanvasInstruction, {\n  fillInstruction, strokeInstruction, beginPathInstruction, closePathInstruction\n} from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\n\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatCoordinates(flatCoordinates, offset, end, stride, true, !stroke);\n      const moveToLineToInstruction = [CanvasInstruction.MOVE_TO_LINE_TO, myBegin, myEnd];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawCircle(circleGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatCoordinates(\n      flatCoordinates, 0, flatCoordinates.length, stride, false, false);\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawPolygon(polygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(flatCoordinates, 0, ends, stride);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle, state.lineWidth, state.lineCap, state.lineJoin,\n        state.miterLimit, state.lineDash, state.lineDashOffset\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(flatCoordinates, offset, endss[i], stride);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\n\nexport default CanvasPolygonBuilder;\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/style/TextPlacement\n */\n\n/**\n * Text placement. One of `'point'`, `'line'`. Default is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n * @enum {string}\n */\nexport default {\n  POINT: 'point',\n  LINE: 'line'\n};\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {getUid} from '../../util.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {labelCache, defaultTextAlign, defaultPadding, defaultLineCap, defaultLineDashOffset, defaultLineDash, defaultLineJoin, defaultFillStyle, checkFont, defaultFont, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport CanvasBuilder from './Builder.js';\nimport TextPlacement from '../../style/TextPlacement.js';\n/**\n * @const\n * @enum {number}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'end': 0,\n  'center': 0.5,\n  'right': 1,\n  'start': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1\n};\n\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     */\n    this.declutterGroups_;\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    labelCache.prune();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  drawText(geometry, feature) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    let begin = this.coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let end = 2;\n    let stride = 2;\n    let i, ii;\n\n    if (textState.placement === TextPlacement.LINE) {\n      if (!intersects(this.getBufferedMaxExtent(), geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      stride = geometry.getStride();\n      if (geometryType == GeometryType.LINE_STRING) {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == GeometryType.MULTI_LINE_STRING) {\n        ends = geometry.getEnds();\n      } else if (geometryType == GeometryType.POLYGON) {\n        ends = geometry.getEnds().slice(0, 1);\n      } else if (geometryType == GeometryType.MULTI_POLYGON) {\n        const endss = geometry.getEndss();\n        ends = [];\n        for (i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature);\n      const textAlign = textState.textAlign;\n      let flatOffset = 0;\n      let flatEnd;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        if (textAlign == undefined) {\n          const range = matchingChunk(textState.maxAngle, flatCoordinates, flatOffset, ends[o], stride);\n          flatOffset = range[0];\n          flatEnd = range[1];\n        } else {\n          flatEnd = ends[o];\n        }\n        for (i = flatOffset; i < flatEnd; i += stride) {\n          this.coordinates.push(flatCoordinates[i], flatCoordinates[i + 1]);\n        }\n        end = this.coordinates.length;\n        flatOffset = ends[o];\n        const declutterGroup = this.declutterGroups_ ?\n          (o === 0 ? this.declutterGroups_[0] : [].concat(this.declutterGroups_[0])) :\n          null;\n        this.drawChars_(begin, end, declutterGroup);\n        begin = end;\n      }\n      this.endGeometry(feature);\n\n    } else {\n\n      let geometryWidths = null;\n      if (!textState.overflow) {\n        geometryWidths = [];\n      }\n      switch (geometryType) {\n        case GeometryType.POINT:\n        case GeometryType.MULTI_POINT:\n          flatCoordinates = geometry.getFlatCoordinates();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry).getFlatMidpoint();\n          break;\n        case GeometryType.CIRCLE:\n          flatCoordinates = /** @type {import(\"../../geom/Circle.js\").default} */ (geometry).getCenter();\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          flatCoordinates = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry).getFlatMidpoints();\n          end = flatCoordinates.length;\n          break;\n        case GeometryType.POLYGON:\n          flatCoordinates = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          const interiorPoints = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          end = flatCoordinates.length;\n          if (end == 0) {\n            return;\n          }\n          break;\n        default:\n      }\n      end = this.appendFlatCoordinates(flatCoordinates, 0, end, stride, false, false);\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(textState.backgroundFill, textState.backgroundStroke);\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n          this.hitDetectionInstructions.push(this.createFill(this.state));\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature);\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1, NaN,\n        textState.padding == defaultPadding ?\n          defaultPadding : textState.padding.map(function(p) {\n            return p * pixelRatio;\n          }),\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n      this.hitDetectionInstructions.push([CanvasInstruction.DRAW_IMAGE, begin, end,\n        null, NaN, NaN, this.declutterGroups_, NaN, 1, 0, 0,\n        this.textRotateWithView_, this.textRotation_, 1 / this.pixelRatio, NaN,\n        textState.padding,\n        !!textState.backgroundFill, !!textState.backgroundStroke,\n        this.text_, this.textKey_, this.strokeKey_, this.fillKey_,\n        this.textOffsetX_, this.textOffsetY_, geometryWidths\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   */\n  drawChars_(begin, end, declutterGroup) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const textScale = textState.scale;\n    const strokeWidth = strokeState ? strokeState.lineWidth * textScale / 2 : 0;\n\n    this.instructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      pixelRatio,\n      offsetY, strokeKey, strokeWidth * pixelRatio, text, textKey, 1\n    ]);\n    this.hitDetectionInstructions.push([CanvasInstruction.DRAW_CHARS,\n      begin, end, baseline, declutterGroup,\n      textState.overflow, fillKey, textState.maxAngle,\n      1,\n      offsetY, strokeKey, strokeWidth, text, textKey, 1 / pixelRatio\n    ]);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setTextStyle(textStyle, declutterGroups) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      this.declutterGroups_ = /** @type {import(\"../canvas.js\").DeclutterGroups} */ (declutterGroups);\n\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle);\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n            lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n            lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n            miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle);\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      checkFont(font);\n      const textScale = textStyle.getScale();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.textBaseline = textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? 1 : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ = textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState ?\n        (typeof strokeState.strokeStyle == 'string' ? strokeState.strokeStyle : getUid(strokeState.strokeStyle)) +\n        strokeState.lineCap + strokeState.lineDashOffset + '|' + strokeState.lineWidth +\n        strokeState.lineJoin + strokeState.miterLimit + '[' + strokeState.lineDash.join() + ']' :\n        '';\n      this.textKey_ = textState.font + textState.scale + (textState.textAlign || '?');\n      this.fillKey_ = fillState ?\n        (typeof fillState.fillStyle == 'string' ? fillState.fillStyle : ('|' + getUid(fillState.fillStyle))) :\n        '';\n    }\n  }\n}\n\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport {createEmpty} from '../../extent.js';\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n\n/**\n * @type {Object<import(\"./BuilderType\").default, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder\n};\n\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} declutter Decluttering enabled.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio, declutter) {\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.declutter_ = declutter;\n\n    /**\n     * @type {import(\"../canvas.js\").DeclutterGroups}\n     * @private\n     */\n    this.declutterGroups_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"./BuilderType\").default, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @param {boolean} group Group with previous builder.\n   * @return {import(\"../canvas\").DeclutterGroups} The resulting instruction groups.\n   */\n  addDeclutter(group) {\n    let declutter = null;\n    if (this.declutter_) {\n      if (group) {\n        declutter = this.declutterGroups_;\n        /** @type {number} */ (declutter[0][4])++;\n      } else {\n        declutter = [createEmpty()];\n        this.declutterGroups_ = declutter;\n        declutter[0].push(1);\n      }\n    }\n    return declutter;\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"./BuilderType\").default, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"./BuilderType.js\").default} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(this.tolerance_, this.maxExtent_,\n        this.resolution_, this.pixelRatio_);\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/geom/flat/transform\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(flatCoordinates, offset, end, stride, transform, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(flatCoordinates, offset, end, stride, angle, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(flatCoordinates, offset, end, stride, sx, sy, anchor, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(flatCoordinates, offset, end, stride, deltaX, deltaY, opt_dest) {\n  const dest = opt_dest ? opt_dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (opt_dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/render/canvas/BuilderType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CIRCLE: 'Circle',\n  DEFAULT: 'Default',\n  IMAGE: 'Image',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  TEXT: 'Text'\n};\n","/**\n * @module ol/geom/flat/length\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @return {Array<Array<*>>} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates, offset, end, stride, text, startM, maxAngle, scale, measureAndCacheTextWidth, font, cache) {\n  const result = [];\n\n  // Keep text upright\n  const reverse = flatCoordinates[offset] > flatCoordinates[end - stride];\n\n  const numChars = text.length;\n\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  offset += stride;\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let segmentM = 0;\n  let segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n  let angleChanged = false;\n\n  let index, previousAngle;\n  for (let i = 0; i < numChars; ++i) {\n    index = reverse ? numChars - i - 1 : i;\n    const char = text[index];\n    const charLength = scale * measureAndCacheTextWidth(font, char, cache);\n    const charM = startM + charLength / 2;\n    while (offset < end - stride && segmentM + segmentLength < charM) {\n      x1 = x2;\n      y1 = y2;\n      offset += stride;\n      x2 = flatCoordinates[offset];\n      y2 = flatCoordinates[offset + 1];\n      segmentM += segmentLength;\n      segmentLength = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n    }\n    const segmentPos = charM - segmentM;\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -Math.PI : Math.PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      angleChanged = angleChanged || delta !== 0;\n      delta += (delta > Math.PI) ? -2 * Math.PI : (delta < -Math.PI) ? 2 * Math.PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n    const interpolate = segmentPos / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result[index] = [x, y, charLength / 2, angle, char];\n    startM += charLength;\n  }\n  return angleChanged ? result : [[result[0][0], result[0][1], result[0][2], result[0][3], text]];\n}\n","\nexport default function quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate,\n  createOrUpdateEmpty, extend, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {drawImage, defaultPadding, defaultTextBaseline} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  create as createTransform,\n  compose as composeTransform,\n  apply as applyTransform,\n  setFromArray as transformSetFromArray\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {labelCache, defaultTextAlign, measureTextHeight, measureAndCacheTextWidth, measureTextWidths} from '../canvas.js';\nimport Disposable from '../../Disposable.js';\nimport RBush from 'rbush';\n\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, import(\"../canvas.js\").TextState>} textStates The text states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").FillState>} fillStates The fill states (decluttering).\n * @property {!Object<string, import(\"../canvas.js\").StrokeState>} strokeStates The stroke states (decluttering).\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/**\n * @type {!import(\"../../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n\nclass Executor extends Disposable {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {SerializableInstructions} instructions The serializable instructions\n   */\n  constructor(resolution, pixelRatio, overlaps, instructions) {\n    super();\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.alignFill_;\n\n    /**\n     * @type {Array<*>}\n     */\n    this.declutterItems = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    labelCache.release(this);\n    super.disposeInternal();\n  }\n\n\n  /**\n   * @param {string} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {HTMLCanvasElement} Image.\n   */\n  getTextImage(text, textKey, fillKey, strokeKey) {\n    let label;\n    const key = strokeKey + textKey + text + fillKey + this.pixelRatio;\n\n    if (!labelCache.containsKey(key)) {\n      const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n      const fillState = fillKey ? this.fillStates[fillKey] : null;\n      const textState = this.textStates[textKey];\n      const pixelRatio = this.pixelRatio;\n      const scale = textState.scale * pixelRatio;\n      const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n      const strokeWidth = strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n      const lines = text.split('\\n');\n      const numLines = lines.length;\n      const widths = [];\n      const width = measureTextWidths(textState.font, lines, widths);\n      const lineHeight = measureTextHeight(textState.font);\n      const height = lineHeight * numLines;\n      const renderWidth = width + strokeWidth;\n      const context = createCanvasContext2D(\n        // make canvas 2 pixels wider to account for italic text width measurement errors\n        Math.ceil((renderWidth + 2) * scale),\n        Math.ceil((height + strokeWidth) * scale));\n      label = context.canvas;\n      labelCache.set(key, label);\n      if (scale != 1) {\n        context.scale(scale, scale);\n      }\n      context.font = textState.font;\n      if (strokeKey) {\n        context.strokeStyle = strokeState.strokeStyle;\n        context.lineWidth = strokeWidth;\n        context.lineCap = strokeState.lineCap;\n        context.lineJoin = strokeState.lineJoin;\n        context.miterLimit = strokeState.miterLimit;\n        if (context.setLineDash && strokeState.lineDash.length) {\n          context.setLineDash(strokeState.lineDash);\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (fillKey) {\n        context.fillStyle = fillState.fillStyle;\n      }\n      context.textBaseline = 'middle';\n      context.textAlign = 'center';\n      const leftRight = (0.5 - align);\n      const x = align * renderWidth + leftRight * strokeWidth;\n      let i;\n      if (strokeKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.strokeText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n      if (fillKey) {\n        for (i = 0; i < numLines; ++i) {\n          context.fillText(lines[i], x + leftRight * widths[i], 0.5 * (strokeWidth + lineHeight) + i * lineHeight);\n        }\n      }\n    }\n    return labelCache.get(key, this);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(context, p1, p2, p3, p4, fillInstruction, strokeInstruction) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignFill_ = /** @type {boolean} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(context, /** @type {Array<*>} */ (strokeInstruction));\n      context.stroke();\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} image Image.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {number} height Height.\n   * @param {number} opacity Opacity.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {number} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {number} width Width.\n   * @param {Array<number>} padding Padding.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayImage_(\n    context,\n    x,\n    y,\n    image,\n    anchorX,\n    anchorY,\n    declutterGroup,\n    height,\n    opacity,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    width,\n    padding,\n    fillInstruction,\n    strokeInstruction\n  ) {\n    const fillStroke = fillInstruction || strokeInstruction;\n    anchorX *= scale;\n    anchorY *= scale;\n    x -= anchorX;\n    y -= anchorY;\n\n    const w = (width + originX > image.width) ? image.width - originX : width;\n    const h = (height + originY > image.height) ? image.height - originY : height;\n    const boxW = padding[3] + w * scale + padding[1];\n    const boxH = padding[0] + h * scale + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform = null;\n    if (rotation !== 0) {\n      const centerX = x + anchorX;\n      const centerY = y + anchorY;\n      transform = composeTransform(tmpTransform, centerX, centerY, 1, 1, rotation, -centerX, -centerY);\n\n      applyTransform(tmpTransform, p1);\n      applyTransform(tmpTransform, p2);\n      applyTransform(tmpTransform, p3);\n      applyTransform(tmpTransform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent\n      );\n    } else {\n      createOrUpdate(boxX, boxY, boxX + boxW, boxY + boxH, tmpExtent);\n    }\n    const canvas = context.canvas;\n    const strokePadding = strokeInstruction ? (strokeInstruction[2] * scale / 2) : 0;\n    const intersects =\n        tmpExtent[0] - strokePadding <= canvas.width && tmpExtent[2] + strokePadding >= 0 &&\n        tmpExtent[1] - strokePadding <= canvas.height && tmpExtent[3] + strokePadding >= 0;\n\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n\n    if (declutterGroup) {\n      if (!intersects && declutterGroup[4] == 1) {\n        return;\n      }\n      extend(declutterGroup, tmpExtent);\n      const declutterArgs = intersects ?\n        [context, transform ? transform.slice(0) : null, opacity, image, originX, originY, w, h, x, y, scale] :\n        null;\n      if (declutterArgs) {\n        if (fillStroke) {\n          declutterArgs.push(fillInstruction, strokeInstruction, p1, p2, p3, p4);\n        }\n        declutterGroup.push(declutterArgs);\n      }\n    } else if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(context, p1, p2, p3, p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction));\n      }\n      drawImage(context, transform, opacity, image, originX, originY, w, h, x, y, scale);\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    if (this.alignFill_) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (this.alignFill_) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    if (context.setLineDash) {\n      context.lineDashOffset = /** @type {number} */ (instruction[7]);\n      context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").DeclutterGroup} declutterGroup Declutter group.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} opacity Layer opacity.\n   * @param {?} declutterTree Declutter tree.\n   * @return {?} Declutter tree.\n   */\n  renderDeclutter(declutterGroup, feature, opacity, declutterTree) {\n    if (declutterGroup && declutterGroup.length > 5) {\n      const groupCount = declutterGroup[4];\n      if (groupCount == 1 || groupCount == declutterGroup.length - 5) {\n        /** @type {import(\"../../structs/RBush.js\").Entry} */\n        const box = {\n          minX: /** @type {number} */ (declutterGroup[0]),\n          minY: /** @type {number} */ (declutterGroup[1]),\n          maxX: /** @type {number} */ (declutterGroup[2]),\n          maxY: /** @type {number} */ (declutterGroup[3]),\n          value: feature\n        };\n        if (!declutterTree) {\n          declutterTree = new RBush(9);\n        }\n        if (!declutterTree.collides(box)) {\n          declutterTree.insert(box);\n          for (let j = 5, jj = declutterGroup.length; j < jj; ++j) {\n            const declutterData = /** @type {Array} */ (declutterGroup[j]);\n            const context = declutterData[0];\n            const currentAlpha = context.globalAlpha;\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = opacity;\n            }\n            if (declutterData.length > 11) {\n              this.replayTextBackground_(declutterData[0],\n                declutterData[13], declutterData[14], declutterData[15], declutterData[16],\n                declutterData[11], declutterData[12]);\n            }\n            drawImage.apply(undefined, declutterData);\n            if (currentAlpha !== opacity) {\n              context.globalAlpha = currentAlpha;\n            }\n          }\n        }\n        declutterGroup.length = 5;\n        createOrUpdateEmpty(declutterGroup);\n      }\n    }\n    return declutterTree;\n  }\n\n  /**\n   * @private\n   * @param {string} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: HTMLCanvasElement, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.getTextImage(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = TEXT_ALIGN[textState.textAlign || defaultTextAlign];\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth = strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in getTextImage() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale;\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY = baseline * label.height / pixelRatio + 2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T|undefined} featureCallback Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    opt_hitExtent\n  ) {\n    this.declutterItems.length = 0;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates, 0, this.coordinates.length, 2,\n        transform, this.pixelCoordinates_);\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX, anchorY, prevX, prevY, roundX, roundY, declutterGroup, declutterGroups, image, text, textKey;\n    let strokeKey, fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform = Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize = this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {CanvasInstruction} */ (instruction[0]);\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (opt_hitExtent !== undefined && !intersects(opt_hitExtent, instruction[3])) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry = /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (instruction[3]);\n          const renderer = instruction[4];\n          const fn = instruction.length == 6 ? instruction[5] : undefined;\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image = /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (instruction[3]);\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          declutterGroups = featureCallback ? null : instruction[6];\n          let height = /** @type {number} */ (instruction[7]);\n          const opacity = /** @type {number} */ (instruction[8]);\n          const originX = /** @type {number} */ (instruction[9]);\n          const originY = /** @type {number} */ (instruction[10]);\n          const rotateWithView = /** @type {boolean} */ (instruction[11]);\n          let rotation = /** @type {number} */ (instruction[12]);\n          const scale = /** @type {number} */ (instruction[13]);\n          let width = /** @type {number} */ (instruction[14]);\n\n          if (!image && instruction.length >= 19) {\n            // create label images\n            text = /** @type {string} */ (instruction[18]);\n            textKey = /** @type {string} */ (instruction[19]);\n            strokeKey = /** @type {string} */ (instruction[20]);\n            fillKey = /** @type {string} */ (instruction[21]);\n            const labelWithAnchor = this.drawTextImageWithPointPlacement_(text, textKey, strokeKey, fillKey);\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[22]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[23]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[7] = height;\n            width = image.width;\n            instruction[14] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 24) {\n            geometryWidths = /** @type {number} */ (instruction[24]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 16) {\n            padding = /** @type {Array<number>} */ (instruction[15]);\n            backgroundFill = /** @type {boolean} */ (instruction[16]);\n            backgroundStroke = /** @type {boolean} */ (instruction[17]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          let declutterGroupIndex = 0;\n          for (; d < dd; d += 2) {\n            if (geometryWidths && geometryWidths[widthIndex++] < width / this.pixelRatio) {\n              continue;\n            }\n            if (declutterGroups) {\n              const index = Math.floor(declutterGroupIndex);\n              if (declutterGroups.length < index + 1) {\n                declutterGroup = createEmpty();\n                declutterGroup.push(declutterGroups[0][4]);\n                declutterGroups.push(declutterGroup);\n              }\n              declutterGroup = declutterGroups[index];\n            }\n            this.replayImage_(context,\n              pixelCoordinates[d], pixelCoordinates[d + 1], image, anchorX, anchorY,\n              declutterGroup, height, opacity, originX, originY, rotation, scale,\n              snapToPixel, width, padding,\n              backgroundFill ? /** @type {Array<*>} */ (lastFillInstruction) : null,\n              backgroundStroke ? /** @type {Array<*>} */ (lastStrokeInstruction) : null);\n            if (declutterGroup) {\n              if (declutterGroupIndex === Math.floor(declutterGroupIndex)) {\n                this.declutterItems.push(this, declutterGroup, feature);\n              }\n              declutterGroupIndex += 1 / declutterGroup[4];\n\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          declutterGroup = featureCallback ? null : instruction[4];\n          const overflow = /** @type {number} */ (instruction[5]);\n          fillKey = /** @type {string} */ (instruction[6]);\n          const maxAngle = /** @type {number} */ (instruction[7]);\n          const measurePixelRatio = /** @type {number} */ (instruction[8]);\n          const offsetY = /** @type {number} */ (instruction[9]);\n          strokeKey = /** @type {string} */ (instruction[10]);\n          const strokeWidth = /** @type {number} */ (instruction[11]);\n          text = /** @type {string} */ (instruction[12]);\n          textKey = /** @type {string} */ (instruction[13]);\n          const pixelRatioScale = /** @type {number} */ (instruction[14]);\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = textState.scale * measurePixelRatio;\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength = textScale * measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM = (pathLength - textLength) * TEXT_ALIGN[textAlign];\n            const parts = drawTextOnPath(\n              pixelCoordinates, begin, end, 2, text, startM, maxAngle, textScale, measureAndCacheTextWidth, font, cachedWidths);\n            if (parts) {\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.getTextImage(chars, textKey, '', strokeKey);\n                  anchorX = /** @type {number} */ (part[2]) + strokeWidth;\n                  anchorY = baseline * label.height + (0.5 - baseline) * 2 * strokeWidth - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.getTextImage(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  this.replayImage_(context,\n                    /** @type {number} */ (part[0]), /** @type {number} */ (part[1]), label,\n                    anchorX, anchorY, declutterGroup, label.height, 1, 0, 0,\n                    /** @type {number} */ (part[3]), pixelRatioScale, false, label.width,\n                    defaultPadding, null, null);\n                }\n              }\n            }\n          }\n          this.declutterItems.push(this, declutterGroup, feature);\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (instruction[1]);\n            const result = featureCallback(feature);\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          roundX = (x + 0.5) | 0;\n          roundY = (y + 0.5) | 0;\n          if (roundX !== prevX || roundY !== prevY) {\n            context.moveTo(x, y);\n            prevX = roundX;\n            prevY = roundY;\n          }\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          context.fillStyle = /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default:\n          ++i; // consume the instruction anyway, to avoid an infinite loop\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   */\n  execute(context, transform, viewRotation, snapToPixel) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(context, transform, this.instructions, snapToPixel, undefined, undefined);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T=} opt_featureCallback\n   *     Feature callback.\n   * @param {import(\"../../extent.js\").Extent=} opt_hitExtent Only check features that intersect this\n   *     extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    opt_featureCallback,\n    opt_hitExtent\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(context, transform,\n      this.hitDetectionInstructions, true, opt_featureCallback, opt_hitExtent);\n  }\n}\n\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport BuilderType from './BuilderType.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\nimport Executor from './Executor.js';\nimport Disposable from '../../Disposable.js';\n\n/**\n * @const\n * @type {Array<BuilderType>}\n */\nconst ORDER = [\n  BuilderType.POLYGON,\n  BuilderType.CIRCLE,\n  BuilderType.LINE_STRING,\n  BuilderType.IMAGE,\n  BuilderType.TEXT,\n  BuilderType.DEFAULT\n];\n\n\nclass ExecutorGroup extends Disposable {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Buillder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceet that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number=} opt_renderBuffer Optional rendering buffer.\n   */\n  constructor(maxExtent, resolution, pixelRatio, overlaps, allInstructions, opt_renderBuffer) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = opt_renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<BuilderType, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    this.createExecutors_(allInstructions);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<BuilderType, import(\"./Builder.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   */\n  createExecutors_(allInstructions) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_, this.pixelRatio_, this.overlaps_, instructions);\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    for (const z in this.executorsByZIndex_) {\n      const executors = this.executorsByZIndex_[z];\n      for (const key in executors) {\n        executors[key].disposeInternal();\n      }\n    }\n    if (this.hitDetectionContext_) {\n      const canvas = this.hitDetectionContext_.canvas;\n      canvas.width = 0;\n      canvas.height = 0;\n    }\n\n    super.disposeInternal();\n  }\n\n  /**\n   * @param {Array<BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures\n  ) {\n\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(this.hitDetectionTransform_,\n      hitTolerance + 0.5, hitTolerance + 0.5,\n      1 / resolution, -1 / resolution,\n      -rotation,\n      -coordinate[0], -coordinate[1]);\n\n    if (!this.hitDetectionContext_) {\n      this.hitDetectionContext_ = createCanvasContext2D(contextSize, contextSize);\n    }\n    const context = this.hitDetectionContext_;\n\n    if (context.canvas.width !== contextSize || context.canvas.height !== contextSize) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(hitExtent, resolution * (this.renderBuffer_ + hitTolerance), hitExtent);\n    }\n\n    const mask = getCircleArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @return {?} Callback result.\n     */\n    function featureCallback(feature) {\n      const imageData = context.getImageData(0, 0, contextSize, contextSize).data;\n      for (let i = 0; i < contextSize; i++) {\n        for (let j = 0; j < contextSize; j++) {\n          if (mask[i][j]) {\n            if (imageData[(j * contextSize + i) * 4 + 3] > 0) {\n              let result;\n              if (!(declutteredFeatures && (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) ||\n                  declutteredFeatures.indexOf(feature) !== -1) {\n                result = callback(feature);\n              }\n              if (result) {\n                return result;\n              } else {\n                context.clearRect(0, 0, contextSize, contextSize);\n                return undefined;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ORDER.length - 1; j >= 0; --j) {\n        builderType = ORDER[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(context, transform, rotation, featureCallback, hitExtent);\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(\n      flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<BuilderType>=} opt_builderTypes Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ORDER}\n   * @param {Object<string, import(\"../canvas.js\").DeclutterGroup>=} opt_declutterReplays Declutter replays.\n   */\n  execute(context, transform, viewRotation, snapToPixel, opt_builderTypes, opt_declutterReplays) {\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(numberSafeCompareFunction);\n\n    // setup clipping so that the parts of over-simplified geometries are not\n    // visible outside the current extent when panning\n    if (this.maxExtent_) {\n      context.save();\n      this.clip(context, transform);\n    }\n\n    const builderTypes = opt_builderTypes ? opt_builderTypes : ORDER;\n    let i, ii, j, jj, replays, replay;\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        replay = replays[builderType];\n        if (replay !== undefined) {\n          if (opt_declutterReplays &&\n              (builderType == BuilderType.IMAGE || builderType == BuilderType.TEXT)) {\n            const declutter = opt_declutterReplays[zIndexKey];\n            if (!declutter) {\n              opt_declutterReplays[zIndexKey] = [replay, transform.slice(0)];\n            } else {\n              declutter.push(replay, transform.slice(0));\n            }\n          } else {\n            replay.execute(context, transform, viewRotation, snapToPixel);\n          }\n        }\n      }\n    }\n\n    if (this.maxExtent_) {\n      context.restore();\n    }\n  }\n}\n\n\n/**\n * This cache is used for storing calculated pixel circles for increasing performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<Array<(boolean|undefined)>>>}\n */\nconst circleArrayCache = {\n  0: [[true]]\n};\n\n\n/**\n * This method fills a row in the array from the given coordinate to the\n * middle with `true`.\n * @param {Array<Array<(boolean|undefined)>>} array The array that will be altered.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n */\nfunction fillCircleArrayRowToMiddle(array, x, y) {\n  let i;\n  const radius = Math.floor(array.length / 2);\n  if (x >= radius) {\n    for (i = radius; i < x; i++) {\n      array[i][y] = true;\n    }\n  } else if (x < radius) {\n    for (i = x + 1; i < radius; i++) {\n      array[i][y] = true;\n    }\n  }\n}\n\n\n/**\n * This methods creates a circle inside a fitting array. Points inside the\n * circle are marked by true, points on the outside are undefined.\n * It uses the midpoint circle algorithm.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @returns {Array<Array<(boolean|undefined)>>} An array with marked circle points.\n */\nexport function getCircleArray(radius) {\n  if (circleArrayCache[radius] !== undefined) {\n    return circleArrayCache[radius];\n  }\n\n  const arraySize = radius * 2 + 1;\n  const arr = new Array(arraySize);\n  for (let i = 0; i < arraySize; i++) {\n    arr[i] = new Array(arraySize);\n  }\n\n  let x = radius;\n  let y = 0;\n  let error = 0;\n\n  while (x >= y) {\n    fillCircleArrayRowToMiddle(arr, radius + x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius + x);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius + y);\n    fillCircleArrayRowToMiddle(arr, radius - x, radius - y);\n    fillCircleArrayRowToMiddle(arr, radius - y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + y, radius - x);\n    fillCircleArrayRowToMiddle(arr, radius + x, radius - y);\n\n    y++;\n    error += 1 + 2 * y;\n    if (2 * (error - x) + 1 > 0) {\n      x -= 1;\n      error += 1 - 2 * x;\n    }\n  }\n\n  circleArrayCache[radius] = arr;\n  return arr;\n}\n\n\n/**\n * @param {!Object<string, Array<*>>} declutterReplays Declutter replays.\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} opacity Opacity.\n * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n * @param {Array<import(\"../../PluggableMap.js\").DeclutterItems>} declutterItems Declutter items.\n */\nexport function replayDeclutter(declutterReplays, context, rotation, opacity, snapToPixel, declutterItems) {\n  const zs = Object.keys(declutterReplays).map(Number).sort(numberSafeCompareFunction);\n  for (let z = 0, zz = zs.length; z < zz; ++z) {\n    const executorData = declutterReplays[zs[z].toString()];\n    let currentExecutor;\n    for (let i = 0, ii = executorData.length; i < ii;) {\n      const executor = executorData[i++];\n      if (executor !== currentExecutor) {\n        currentExecutor = executor;\n        declutterItems.push({\n          items: executor.declutterItems,\n          opacity: opacity\n        });\n      }\n      const transform = executorData[i++];\n      executor.execute(context, transform, rotation, snapToPixel);\n    }\n  }\n}\n\n\nexport default ExecutorGroup;\n","/**\n * @module ol/renderer/vector\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport BuilderType from '../render/canvas/BuilderType.js';\n\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n\n/**\n * @const\n * @type {Object<import(\"../geom/GeometryType.js\").default,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry\n};\n\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return SIMPLIFY_TOLERANCE * resolution / pixelRatio;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.CIRCLE);\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Transform from user to view projection.\n * @return {boolean} `true` if style is loading.\n * @template T\n */\nexport function renderFeature(replayGroup, feature, style, squaredTolerance, listener, opt_transform) {\n  let loading = false;\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      imageStyle.unlistenImageChange(listener);\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n      imageState = imageStyle.getImageState();\n      imageStyle.listenImageChange(listener);\n      loading = true;\n    }\n  }\n  renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform);\n\n  return loading;\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n */\nfunction renderFeatureInternal(replayGroup, feature, style, squaredTolerance, opt_transform) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(squaredTolerance, opt_transform);\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(replayGroup, simplifiedGeometry, style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature) {\n  if (geometry.getType() == GeometryType.GEOMETRY_COLLECTION) {\n    const geometries = /** @type {import(\"../geom/GeometryCollection.js\").default} */ (geometry).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), BuilderType.DEFAULT);\n  replay.drawCustom(/** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry), feature, style.getRenderer());\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderGeometryCollectionGeometry(replayGroup, geometry, style, feature) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer =\n        GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(replayGroup, geometries[i], style, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiLineStringGeometry(builderGroup, geometry, style, feature) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.LINE_STRING);\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n */\nfunction renderMultiPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderMultiPointGeometry(builderGroup, geometry, style, feature) {\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.IMAGE);\n    imageReplay.setImageStyle(imageStyle, builderGroup.addDeclutter(false));\n    imageReplay.drawMultiPoint(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(!!imageStyle));\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.POLYGON);\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature);\n  }\n  const textStyle = style.getText();\n  if (textStyle) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), BuilderType.TEXT);\n    textReplay.setTextStyle(textStyle, builderGroup.addDeclutter(false));\n    textReplay.drawText(geometry, feature);\n  }\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {createEmpty, getHeight, returnOrUpdate} from '../extent.js';\nimport {transform2D} from './flat/transform.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport Units from '../proj/Units.js';\nimport {create as createTransform, compose as composeTransform} from '../transform.js';\nimport {memoizeOne} from '../functions.js';\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(function(revision, squaredTolerance, opt_transform) {\n      if (!opt_transform) {\n        return this.getSimplifiedGeometry(squaredTolerance);\n      }\n      const clone = this.clone();\n      clone.applyTransform(opt_transform);\n      return clone.getSimplifiedGeometry(squaredTolerance);\n    });\n\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [opt_transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, opt_transform) {\n    return this.simplifyTransformedInternal(this.getRevision(), squaredTolerance, opt_transform);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_closestPoint Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, opt_closestPoint) {\n    const closestPoint = opt_closestPoint ? opt_closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      this.extent_ = this.computeExtent(this.extent_);\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, opt_extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {import(\"./GeometryType.js\").default} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {Geometry} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn = sourceProj.getUnits() == Units.TILE_PIXELS ?\n      function(inCoordinates, outCoordinates, stride) {\n        const pixelExtent = sourceProj.getExtent();\n        const projectedExtent = sourceProj.getWorldExtent();\n        const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n        composeTransform(tmpTransform,\n          projectedExtent[0], projectedExtent[3],\n          scale, -scale, 0,\n          0, 0);\n        transform2D(inCoordinates, 0, inCoordinates.length, stride,\n          tmpTransform, outCoordinates);\n        return getTransform(sourceProj, destination)(inCoordinates, outCoordinates, stride);\n      } :\n      getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n\n}\n\n\nexport default Geometry;\n","/**\n * @module ol/geom/GeometryLayout\n */\n\n/**\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available. Supported values are `'XY'`,\n * `'XYZ'`, `'XYM'`, `'XYZM'`.\n * @enum {string}\n */\nexport default {\n  XY: 'XY',\n  XYZ: 'XYZ',\n  XYM: 'XYM',\n  XYZM: 'XYZM'\n};\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport Geometry from './Geometry.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport {rotate, scale, translate, transform2D} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n\n    super();\n\n    /**\n     * @protected\n     * @type {GeometryLayout}\n     */\n    this.layout = GeometryLayout.XY;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(this.flatCoordinates,\n      0, this.flatCoordinates.length, this.stride, extent);\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*>} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(this.flatCoordinates.length - this.stride);\n  }\n\n  /**\n   * Return the {@link module:ol/geom/GeometryLayout layout} of the geometry.\n   * @return {GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (squaredTolerance < 0 ||\n        (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n         squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n        this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    } else {\n      // Simplification did not actually remove any coordinates.  We now know\n      // that any calls to getSimplifiedGeometry with a squaredTolerance less\n      // than or equal to the current squaredTolerance will also not have any\n      // effect.  This allows us to short circuit simplification (saving CPU\n      // cycles) and prevents the cache of simplified geometries from filling\n      // up with useless identical copies of this geometry (saving memory).\n      this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n      return this;\n    }\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  setCoordinates(coordinates, opt_layout) {\n    abstract();\n  }\n\n  /**\n   * @param {GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    /** @type {number} */\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = GeometryLayout.XY;\n          this.stride = 2;\n          return;\n        } else {\n          coordinates = /** @type {Array} */ (coordinates[0]);\n        }\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, angle, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n    * @param {number} sx The scaling factor in the x-direction.\n   * @param {number=} opt_sy The scaling factor in the y-direction (defaults to\n   *     sx).\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, opt_sy, opt_anchor) {\n    let sy = opt_sy;\n    if (sy === undefined) {\n      sy = sx;\n    }\n    let anchor = opt_anchor;\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates, 0, flatCoordinates.length,\n        stride, sx, sy, anchor, flatCoordinates);\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates, 0, flatCoordinates.length, stride,\n        deltaX, deltaY, flatCoordinates);\n      this.changed();\n    }\n  }\n}\n\n\n/**\n * @param {number} stride Stride.\n * @return {GeometryLayout} layout Layout.\n */\nfunction getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = GeometryLayout.XY;\n  } else if (stride == 3) {\n    layout = GeometryLayout.XYZ;\n  } else if (stride == 4) {\n    layout = GeometryLayout.XYZM;\n  }\n  return (\n    /** @type {GeometryLayout} */ (layout)\n  );\n}\n\n\n/**\n * @param {GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == GeometryLayout.XY) {\n    stride = 2;\n  } else if (layout == GeometryLayout.XYZ || layout == GeometryLayout.XYM) {\n    stride = 3;\n  } else if (layout == GeometryLayout.XYZM) {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, opt_dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  } else {\n    const stride = simpleGeometry.getStride();\n    return transform2D(\n      flatCoordinates, 0, flatCoordinates.length, stride,\n      transform, opt_dest);\n  }\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {defaultTextAlign, defaultFillStyle, defaultLineCap, defaultLineDash, defaultLineDashOffset, defaultLineJoin, defaultLineWidth, defaultMiterLimit, defaultStrokeStyle, defaultTextBaseline, defaultFont} from '../canvas.js';\nimport {create as createTransform, compose as composeTransform} from '../../transform.js';\n\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number=} opt_squaredTolerance Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction=} opt_userTransform Transform from user to view projection.\n   */\n  constructor(context, pixelRatio, extent, transform, viewRotation, opt_squaredTolerance, opt_userTransform) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = opt_squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = opt_userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageScale_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textScale_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, 2, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (rotation !== 0 || this.imageScale_ != 1) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(localTransform,\n          centerX, centerY,\n          this.imageScale_, this.imageScale_,\n          rotation,\n          -centerX, -centerY);\n        context.setTransform.apply(context, localTransform);\n      }\n      context.drawImage(this.image_, this.imageOriginX_, this.imageOriginY_,\n        this.imageWidth_, this.imageHeight_, x, y,\n        this.imageWidth_, this.imageHeight_);\n    }\n    if (rotation !== 0 || this.imageScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (rotation !== 0 || this.textScale_ != 1) {\n        const localTransform = composeTransform(this.tmpLocalTransform_,\n          x, y,\n          this.textScale_, this.textScale_,\n          rotation,\n          -x, -y);\n        context.setTransform.apply(context, localTransform);\n      }\n      if (this.textStrokeState_) {\n        context.strokeText(this.text_, x, y);\n      }\n      if (this.textFillState_) {\n        context.fillText(this.text_, x, y);\n      }\n    }\n    if (rotation !== 0 || this.textScale_ != 1) {\n      context.setTransform(1, 0, 0, 1, 0, 0);\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates, offset, end, stride, this.transform_,\n      this.pixelCoordinates_);\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, true);\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @override\n   * @api\n   */\n  drawCircle(geometry) {\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry, this.transform_, this.pixelCoordinates_);\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0], pixelCoordinates[1], radius, 0, 2 * Math.PI);\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @override\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate#setStyle} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @override\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case GeometryType.POINT:\n        this.drawPoint(/** @type {import(\"../../geom/Point.js\").default} */ (geometry));\n        break;\n      case GeometryType.LINE_STRING:\n        this.drawLineString(/** @type {import(\"../../geom/LineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.POLYGON:\n        this.drawPolygon(/** @type {import(\"../../geom/Polygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POINT:\n        this.drawMultiPoint(/** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_LINE_STRING:\n        this.drawMultiLineString(/** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry));\n        break;\n      case GeometryType.MULTI_POLYGON:\n        this.drawMultiPolygon(/** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry));\n        break;\n      case GeometryType.GEOMETRY_COLLECTION:\n        this.drawGeometryCollection(/** @type {import(\"../../geom/GeometryCollection.js\").default} */ (geometry));\n        break;\n      case GeometryType.CIRCLE:\n        this.drawCircle(/** @type {import(\"../../geom/Circle.js\").default} */ (geometry));\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @override\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry || !intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(flatCoordinates, 0, flatCoordinates.length,\n        geometry.getStride(), false);\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(flatCoordinates, offset, ends[i], stride, false);\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(geometry.getOrientedFlatCoordinates(),\n        0, /** @type {Array<number>} */ (geometry.getEnds()), geometry.getStride());\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (geometry.simplifyTransformed(this.squaredTolerance_, this.userTransform_));\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      if (context.setLineDash) {\n        context.setLineDash(strokeState.lineDash);\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (context.setLineDash) {\n        if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n          context.setLineDash(contextStrokeState.lineDash = strokeState.lineDash);\n        }\n        if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n          contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n          context.lineDashOffset = strokeState.lineDashOffset;\n        }\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign ?\n      textState.textAlign : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n        context.textAlign = /** @type {CanvasTextAlign} */ (textAlign);\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n        context.textBaseline = /** @type {CanvasTextBaseline} */ (textState.textBaseline);\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(fillStyleColor ?\n          fillStyleColor : defaultFillStyle)\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      this.strokeState_ = {\n        lineCap: strokeStyleLineCap !== undefined ?\n          strokeStyleLineCap : defaultLineCap,\n        lineDash: strokeStyleLineDash ?\n          strokeStyleLineDash : defaultLineDash,\n        lineDashOffset: strokeStyleLineDashOffset ?\n          strokeStyleLineDashOffset : defaultLineDashOffset,\n        lineJoin: strokeStyleLineJoin !== undefined ?\n          strokeStyleLineJoin : defaultLineJoin,\n        lineWidth: this.pixelRatio_ * (strokeStyleWidth !== undefined ?\n          strokeStyleWidth : defaultLineWidth),\n        miterLimit: strokeStyleMiterLimit !== undefined ?\n          strokeStyleMiterLimit : defaultMiterLimit,\n        strokeStyle: asColorLike(strokeStyleColor ?\n          strokeStyleColor : defaultStrokeStyle)\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    if (!imageStyle) {\n      this.image_ = null;\n    } else {\n      const imageAnchor = imageStyle.getAnchor();\n      // FIXME pixel ratio\n      const imageImage = imageStyle.getImage(1);\n      const imageOrigin = imageStyle.getOrigin();\n      const imageSize = imageStyle.getSize();\n      this.imageAnchorX_ = imageAnchor[0];\n      this.imageAnchorY_ = imageAnchor[1];\n      this.imageHeight_ = imageSize[1];\n      this.image_ = imageImage;\n      this.imageOpacity_ = imageStyle.getOpacity();\n      this.imageOriginX_ = imageOrigin[0];\n      this.imageOriginY_ = imageOrigin[1];\n      this.imageRotateWithView_ = imageStyle.getRotateWithView();\n      this.imageRotation_ = imageStyle.getRotation();\n      this.imageScale_ = imageStyle.getScale() * this.pixelRatio_;\n      this.imageWidth_ = imageSize[0];\n    }\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(textFillStyleColor ?\n            textFillStyleColor : defaultFillStyle)\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset = textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap: textStrokeStyleLineCap !== undefined ?\n            textStrokeStyleLineCap : defaultLineCap,\n          lineDash: textStrokeStyleLineDash ?\n            textStrokeStyleLineDash : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset ?\n            textStrokeStyleLineDashOffset : defaultLineDashOffset,\n          lineJoin: textStrokeStyleLineJoin !== undefined ?\n            textStrokeStyleLineJoin : defaultLineJoin,\n          lineWidth: textStrokeStyleWidth !== undefined ?\n            textStrokeStyleWidth : defaultLineWidth,\n          miterLimit: textStrokeStyleMiterLimit !== undefined ?\n            textStrokeStyleMiterLimit : defaultMiterLimit,\n          strokeStyle: asColorLike(textStrokeStyleColor ?\n            textStrokeStyleColor : defaultStrokeStyle)\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScale();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ?\n          textFont : defaultFont,\n        textAlign: textTextAlign !== undefined ?\n          textTextAlign : defaultTextAlign,\n        textBaseline: textTextBaseline !== undefined ?\n          textTextBaseline : defaultTextBaseline\n      };\n      this.text_ = textText !== undefined ? textText : '';\n      this.textOffsetX_ =\n          textOffsetX !== undefined ? (this.pixelRatio_ * textOffsetX) : 0;\n      this.textOffsetY_ =\n          textOffsetY !== undefined ? (this.pixelRatio_ * textOffsetY) : 0;\n      this.textRotateWithView_ = textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = this.pixelRatio_ * (textScale !== undefined ?\n        textScale : 1);\n    }\n  }\n}\n\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/style/IconAnchorUnits\n */\n\n/**\n * Icon anchor units. One of 'fraction', 'pixels'.\n * @enum {string}\n */\nexport default {\n  FRACTION: 'fraction',\n  PIXELS: 'pixels'\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport {asString} from '../color.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache~shared}.\n */\nclass IconImageCache {\n  constructor() {\n\n    /**\n    * @type {!Object<string, import(\"./IconImage.js\").default>}\n    * @private\n    */\n    this.cache_ = {};\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.cacheSize_ = 0;\n\n    /**\n    * @type {number}\n    * @private\n    */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  clear() {\n    this.cache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n  * FIXME empty description for jsdoc\n  */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @return {import(\"./IconImage.js\").default} Icon image.\n  */\n  get(src, crossOrigin, color) {\n    const key = getKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n  * @param {string} src Src.\n  * @param {?string} crossOrigin Cross origin.\n  * @param {import(\"../color.js\").Color} color Color.\n  * @param {import(\"./IconImage.js\").default} iconImage Icon image.\n  */\n  set(src, crossOrigin, color, iconImage) {\n    const key = getKey(src, crossOrigin, color);\n    this.cache_[key] = iconImage;\n    ++this.cacheSize_;\n  }\n\n  /**\n  * Set the cache size of the icon cache. Default is `32`. Change this value when\n  * your map uses more than 32 different icon images and you are not caching icon\n  * styles on the application level.\n  * @param {number} maxCacheSize Cache max size.\n  * @api\n  */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {string} Cache key.\n */\nfunction getKey(src, crossOrigin, color) {\n  const colorString = color ? asString(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\n\nexport default IconImageCache;\n\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/ImageBase\n */\nimport {abstract} from './util.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\n\n/**\n * @abstract\n */\nclass ImageBase extends EventTarget {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default} state State.\n   */\n  constructor(extent, resolution, pixelRatio, state) {\n\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state = state;\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @abstract\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   */\n  getImage() {\n    return abstract();\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n}\n\n\nexport default ImageBase;\n","/**\n * @module ol/has\n */\n\nconst ua = typeof navigator !== 'undefined' ?\n  navigator.userAgent.toLowerCase() : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.indexOf('firefox') !== -1;\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.indexOf('safari') !== -1 && ua.indexOf('chrom') == -1;\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.indexOf('webkit') !== -1 && ua.indexOf('edge') == -1;\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.indexOf('macintosh') !== -1;\n\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO = window.devicePixelRatio || 1;\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE = typeof Image !== 'undefined' && Image.prototype.decode;\n","/**\n * @module ol/Image\n */\nimport ImageBase from './ImageBase.js';\nimport ImageState from './ImageState.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport {getHeight} from './extent.js';\nimport {IMAGE_DECODE} from './has.js';\n\n\n/**\n * A function that takes an {@link module:ol/Image~Image} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~Image#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(ImageWrapper, string): void} LoadFunction\n * @api\n */\n\n\nclass ImageWrapper extends ImageBase {\n\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|undefined} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {LoadFunction} imageLoadFunction Image load function.\n   */\n  constructor(extent, resolution, pixelRatio, src, crossOrigin, imageLoadFunction) {\n\n    super(extent, resolution, pixelRatio, ImageState.IDLE);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @protected\n     * @type {ImageState}\n     */\n    this.state = ImageState.IDLE;\n\n    /**\n     * @private\n     * @type {LoadFunction}\n     */\n    this.imageLoadFunction_ = imageLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = ImageState.ERROR;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    if (this.resolution === undefined) {\n      this.resolution = getHeight(this.extent) / this.image_.height;\n    }\n    this.state = ImageState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @override\n   * @api\n   */\n  load() {\n    if (this.state == ImageState.IDLE || this.state == ImageState.ERROR) {\n      this.state = ImageState.LOADING;\n      this.changed();\n      this.imageLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * @param {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n\n  if (img.src && IMAGE_DECODE) {\n    const promise = img.decode();\n    let listening = true;\n    const unlisten = function() {\n      listening = false;\n    };\n    promise.then(function() {\n      if (listening) {\n        loadHandler();\n      }\n    }).catch(function(error) {\n      if (listening) {\n        // FIXME: Unconditionally call errorHandler() when this bug is fixed upstream:\n        //        https://bugs.webkit.org/show_bug.cgi?id=198527\n        if (error.name === 'EncodingError' && error.message === 'Invalid image type.') {\n          loadHandler();\n        } else {\n          errorHandler();\n        }\n      }\n    });\n    return unlisten;\n  }\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, loadHandler),\n    listenOnce(img, EventType.ERROR, errorHandler)\n  ];\n  return function unlisten() {\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n\nexport default ImageWrapper;\n","/**\n * @module ol/style/IconImage\n */\n\nimport {createCanvasContext2D} from '../dom.js';\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport {listenImage} from '../Image.js';\n\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n   * @param {string|undefined} src Src.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default} imageState Image state.\n   * @param {import(\"../color.js\").Color} color Color.\n   */\n  constructor(image, src, size, crossOrigin, imageState, color) {\n\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = !image ? new Image() : image;\n\n    if (crossOrigin !== null) {\n      /** @type {HTMLImageElement} */ (this.image_).crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = color ? document.createElement('canvas') : null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = size;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.tainted_;\n\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      this.tainted_ = false;\n      const context = createCanvasContext2D(1, 1);\n      try {\n        context.drawImage(this.image_, 0, 0);\n        context.getImageData(0, 0, 1, 1);\n      } catch (e) {\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.unlistenImage_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    if (this.size_) {\n      this.image_.width = this.size_[0];\n      this.image_.height = this.size_[1];\n    }\n    this.size_ = [this.image_.width, this.image_.height];\n    this.unlistenImage_();\n    this.replaceColor_();\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   */\n  getImage(pixelRatio) {\n    return this.canvas_ ? this.canvas_ : this.image_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage(pixelRatio) {\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ == ImageState.IDLE) {\n      this.imageState_ = ImageState.LOADING;\n      try {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      } catch (e) {\n        this.handleImageError_();\n      }\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  replaceColor_() {\n    if (!this.color_ || this.isTainted_()) {\n      return;\n    }\n\n    this.canvas_.width = this.image_.width;\n    this.canvas_.height = this.image_.height;\n\n    const ctx = this.canvas_.getContext('2d');\n    ctx.drawImage(this.image_, 0, 0);\n\n    const imgData = ctx.getImageData(0, 0, this.image_.width, this.image_.height);\n    const data = imgData.data;\n    const r = this.color_[0] / 255.0;\n    const g = this.color_[1] / 255.0;\n    const b = this.color_[2] / 255.0;\n\n    for (let i = 0, ii = data.length; i < ii; i += 4) {\n      data[i] *= r;\n      data[i + 1] *= g;\n      data[i + 2] *= b;\n    }\n    ctx.putImageData(imgData, 0, 0);\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement} image Image.\n * @param {string} src Src.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default} imageState Image state.\n * @param {import(\"../color.js\").Color} color Color.\n * @return {IconImage} Icon image.\n */\nexport function get(image, src, size, crossOrigin, imageState, color) {\n  let iconImage = iconImageCache.get(src, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(image, src, size, crossOrigin, imageState, color);\n    iconImageCache.set(src, crossOrigin, color, iconImage);\n  }\n  return iconImage;\n}\n\n\nexport default IconImage;\n","/**\n * @module ol/style/IconOrigin\n */\n\n/**\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n * @enum {string}\n */\nexport default {\n  BOTTOM_LEFT: 'bottom-left',\n  BOTTOM_RIGHT: 'bottom-right',\n  TOP_LEFT: 'top-left',\n  TOP_RIGHT: 'top-right'\n};\n","/**\n * @module ol/style/Icon\n */\nimport {getUid} from '../util.js';\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport IconAnchorUnits from './IconAnchorUnits.js';\nimport {get as getIconImage} from './IconImage.js';\nimport IconOrigin from './IconOrigin.js';\nimport ImageStyle from './Image.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {import(\"./IconOrigin.js\").default} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {import(\"./IconAnchorUnits.js\").default} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement} [img] Image object for the icon. If the `src` option is not provided then the\n * provided image must already be loaded. And in that case, it is required\n * to provide the size of the image, with the `imgSize` option.\n * @property {Array<number>} [offset=[0, 0]] Offset, which, together with the size and the offset origin, define the\n * sub-rectangle to use from the original icon image.\n * @property {import(\"./IconOrigin.js\").default} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {import(\"../size.js\").Size} [size] Icon size in pixel. Can be used together with `offset` to define the\n * sub-rectangle to use from the origin (sprite) icon image.\n * @property {import(\"../size.js\").Size} [imgSize] Image size in pixels. Only required if `img` is set and `src` is not, and\n * for SVG images in Internet Explorer 11. The provided `imgSize` needs to match the actual size of the image.\n * @property {string} [src] Image source URI.\n */\n\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView = options.rotateWithView !== undefined ?\n      options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      rotateWithView: rotateWithView\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.anchorOrigin_ = options.anchorOrigin !== undefined ?\n      options.anchorOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorXUnits_ = options.anchorXUnits !== undefined ?\n      options.anchorXUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {import(\"./IconAnchorUnits.js\").default}\n     */\n    this.anchorYUnits_ = options.anchorYUnits !== undefined ?\n      options.anchorYUnits : IconAnchorUnits.FRACTION;\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    const image = options.img !== undefined ? options.img : null;\n\n    /**\n     * @type {import(\"../size.js\").Size}\n     */\n    const imgSize = options.imgSize !== undefined ? options.imgSize : null;\n\n    /**\n     * @type {string|undefined}\n     */\n    let src = options.src;\n\n    assert(!(src !== undefined && image),\n      4); // `image` and `src` cannot be provided at the same time\n    assert(!image || (image && imgSize),\n      5); // `imgSize` must be set when `image` is provided\n\n    if ((src === undefined || src.length === 0) && image) {\n      src = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(src !== undefined && src.length > 0,\n      6); // A defined and non-empty `src` or `image` must be provided\n\n    /**\n     * @type {import(\"../ImageState.js\").default}\n     */\n    const imageState = options.src !== undefined ?\n      ImageState.IDLE : ImageState.LOADED;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image, /** @type {string} */ (src), imgSize, this.crossOrigin_, imageState, this.color_);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"./IconOrigin.js\").default}\n     */\n    this.offsetOrigin_ = options.offsetOrigin !== undefined ?\n      options.offsetOrigin : IconOrigin.TOP_LEFT;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      crossOrigin: this.crossOrigin_,\n      color: (this.color_ && this.color_.slice) ? this.color_.slice() : this.color_ || undefined,\n      src: this.getSrc(),\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      opacity: this.getOpacity(),\n      scale: this.getScale(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView()\n    });\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getAnchor() {\n    if (this.normalizedAnchor_) {\n      return this.normalizedAnchor_;\n    }\n    let anchor = this.anchor_;\n    const size = this.getSize();\n    if (this.anchorXUnits_ == IconAnchorUnits.FRACTION ||\n        this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n      if (!size) {\n        return null;\n      }\n      anchor = this.anchor_.slice();\n      if (this.anchorXUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[0] *= size[0];\n      }\n      if (this.anchorYUnits_ == IconAnchorUnits.FRACTION) {\n        anchor[1] *= size[1];\n      }\n    }\n\n    if (this.anchorOrigin_ != IconOrigin.TOP_LEFT) {\n      if (!size) {\n        return null;\n      }\n      if (anchor === this.anchor_) {\n        anchor = this.anchor_.slice();\n      }\n      if (this.anchorOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[0] = -anchor[0] + size[0];\n      }\n      if (this.anchorOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.anchorOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        anchor[1] = -anchor[1] + size[1];\n      }\n    }\n    this.normalizedAnchor_ = anchor;\n    return this.normalizedAnchor_;\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement} Image or Canvas element.\n   * @override\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImageSize() {\n    return this.getImageSize();\n  }\n\n  /**\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @override\n   */\n  getHitDetectionImage(pixelRatio) {\n    return this.iconImage_.getHitDetectionImage(pixelRatio);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != IconOrigin.TOP_LEFT) {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (this.offsetOrigin_ == IconOrigin.TOP_RIGHT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (this.offsetOrigin_ == IconOrigin.BOTTOM_LEFT ||\n          this.offsetOrigin_ == IconOrigin.BOTTOM_RIGHT) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @override\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n}\n\n\nexport default Icon;\n","/**\n * @module ol/render/canvas/hitdetet\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {Icon} from '../../style.js';\nimport IconAnchorUnits from '../../style/IconAnchorUnits.js';\nimport GeometryType from '../../geom/GeometryType.js';\nimport {intersects} from '../../extent.js';\nimport {numberSafeCompareFunction} from '../../array.js';\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(size, transforms, features, styleFunction, extent, resolution, rotation) {\n  const width = size[0] / 2;\n  const height = size[1] / 2;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(context, 0.5, extent, null, rotation);\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.ceil((256 * 256 * 256) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 0; i < featureCount; ++i) {\n    const feature = features[i];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!styleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = '#' + ('000000' + index.toString(16)).slice(-6);\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        const canvas = document.createElement('canvas');\n        canvas.width = imgSize[0];\n        canvas.height = imgSize[1];\n        const imgContext = canvas.getContext('2d', {alpha: false});\n        imgContext.fillStyle = color;\n        const img = imgContext.canvas;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        const width = imgSize ? imgSize[0] : img.width;\n        const height = imgSize ? imgSize[1] : img.height;\n        const iconContext = createCanvasContext2D(width, height);\n        iconContext.drawImage(img, 0, 0);\n        style.setImage(new Icon({\n          img: img,\n          imgSize: imgSize,\n          anchor: image.getAnchor(),\n          anchorXUnits: IconAnchorUnits.PIXELS,\n          anchorYUnits: IconAnchorUnits.PIXELS,\n          offset: image.getOrigin(),\n          size: image.getSize(),\n          opacity: image.getOpacity(),\n          scale: image.getScale(),\n          rotation: image.getRotation(),\n          rotateWithView: image.getRotateWithView()\n        }));\n      }\n      const zIndex = Number(style.getZIndex());\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType[GeometryType.POLYGON] = [];\n        byGeometryType[GeometryType.CIRCLE] = [];\n        byGeometryType[GeometryType.LINE_STRING] = [];\n        byGeometryType[GeometryType.POINT] = [];\n      }\n      const geometry = style.getGeometryFunction()(feature);\n      if (geometry && intersects(extent, geometry.getExtent())) {\n        byGeometryType[geometry.getType().replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(numberSafeCompareFunction);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<import(\"../../Feature\").FeatureLike>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<import(\"../../Feature\").FeatureLike>} features Features.\n */\nexport function hitDetect(pixel, features, imageData) {\n  const resultFeatures = [];\n  if (imageData) {\n    const index = (Math.round(pixel[0] / 2) + Math.round(pixel[1] / 2) * imageData.width) * 4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + (256 * (g + (256 * r)));\n    const indexFactor = Math.ceil((256 * 256 * 256) / features.length);\n    if (i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport {getUid} from '../../util.js';\nimport ViewHint from '../../ViewHint.js';\nimport {buffer, createEmpty, containsExtent, getWidth, intersects as intersectsExtent} from '../../extent.js';\nimport {fromUserExtent, toUserExtent, getUserProjection, getTransformFromProjections} from '../../proj.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {replayDeclutter} from '../../render/canvas/ExecutorGroup.js';\nimport CanvasLayerRenderer from './Layer.js';\nimport {defaultOrder as defaultRenderOrder, getTolerance as getRenderTolerance, getSquaredTolerance as getSquaredRenderTolerance, renderFeature} from '../vector.js';\nimport {toString as transformToString, makeScale, makeInverse, apply} from '../../transform.js';\nimport {createHitDetectionImageData, hitDetect} from '../../render/canvas/hitdetect.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n\n  /**\n   * @param {import(\"../../layer/Vector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.dirty_ = false;\n\n    /**\n     * @type {ImageData}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useContainer(target, transform, opacity) {\n    if (opacity < 1) {\n      target = null;\n    }\n    super.useContainer(target, transform, opacity);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  renderFrame(frameState, target) {\n\n    const pixelRatio = frameState.pixelRatio;\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n\n    // set forward and inverse pixel transforms\n    makeScale(this.pixelTransform, 1 / pixelRatio, 1 / pixelRatio);\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = transformToString(this.pixelTransform);\n\n    this.useContainer(target, canvasTransform, layerState.opacity);\n    const context = this.context;\n    const canvas = context.canvas;\n\n    const replayGroup = this.replayGroup_;\n    if (!replayGroup || replayGroup.isEmpty()) {\n      if (!this.containerReused && canvas.width > 0) {\n        canvas.width = 0;\n      }\n      return this.container;\n    }\n\n    // resize and clear\n    const width = Math.round(frameState.size[0] * pixelRatio);\n    const height = Math.round(frameState.size[1] * pixelRatio);\n    if (canvas.width != width || canvas.height != height) {\n      canvas.width = width;\n      canvas.height = height;\n      if (canvas.style.transform !== canvasTransform) {\n        canvas.style.transform = canvasTransform;\n      }\n    } else if (!this.containerReused) {\n      context.clearRect(0, 0, width, height);\n    }\n\n    this.preRender(context, frameState);\n\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      clipped = !containsExtent(layerExtent, frameState.extent) && intersectsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clip(context, frameState, layerExtent);\n      }\n    }\n\n\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n\n    const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, 0);\n    const declutterReplays = this.getLayer().getDeclutter() ? {} : null;\n    replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n\n    if (vectorSource.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n      let startX = extent[0];\n      const worldWidth = getWidth(projectionExtent);\n      let world = 0;\n      let offsetX;\n      while (startX < projectionExtent[0]) {\n        --world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX += worldWidth;\n      }\n      world = 0;\n      startX = extent[2];\n      while (startX > projectionExtent[2]) {\n        ++world;\n        offsetX = worldWidth * world;\n        const transform = this.getRenderTransform(center, resolution, rotation, pixelRatio, width, height, offsetX);\n        replayGroup.execute(context, transform, rotation, snapToPixel, undefined, declutterReplays);\n        startX -= worldWidth;\n      }\n    }\n    if (declutterReplays) {\n      const viewHints = frameState.viewHints;\n      const hifi = !(viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]);\n      replayDeclutter(declutterReplays, context, rotation, 1, hifi, frameState.declutterItems);\n    }\n\n    if (clipped) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    const opacity = layerState.opacity;\n    const container = this.container;\n    if (opacity !== parseFloat(container.style.opacity)) {\n      container.style.opacity = opacity === 1 ? '' : opacity;\n    }\n\n    return this.container;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getFeatures(pixel) {\n    return new Promise(function(resolve, reject) {\n      if (!this.hitDetectionImageData_ && !this.animatingOrInteracting_) {\n        requestAnimationFrame(function() {\n          const size = [this.context.canvas.width, this.context.canvas.height];\n          apply(this.pixelTransform, size);\n          const center = this.renderedCenter_;\n          const resolution = this.renderedResolution_;\n          const rotation = this.renderedRotation_;\n          const projection = this.renderedProjection_;\n          const extent = this.renderedExtent_;\n          const layer = this.getLayer();\n          const transforms = [];\n          const width = size[0] / 2;\n          const height = size[1] / 2;\n          transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, 0).slice());\n          const source = layer.getSource();\n          const projectionExtent = projection.getExtent();\n          if (source.getWrapX() && projection.canWrapX() && !containsExtent(projectionExtent, extent)) {\n            let startX = extent[0];\n            const worldWidth = getWidth(projectionExtent);\n            let world = 0;\n            let offsetX;\n            while (startX < projectionExtent[0]) {\n              --world;\n              offsetX = worldWidth * world;\n              transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n              startX += worldWidth;\n            }\n            world = 0;\n            startX = extent[2];\n            while (startX > projectionExtent[2]) {\n              ++world;\n              offsetX = worldWidth * world;\n              transforms.push(this.getRenderTransform(center, resolution, rotation, 0.5, width, height, offsetX).slice());\n              startX -= worldWidth;\n            }\n          }\n\n          this.hitDetectionImageData_ = createHitDetectionImageData(size, transforms,\n            this.renderedFeatures_, layer.getStyleFunction(), extent, resolution, rotation);\n          resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n        }.bind(this));\n      } else {\n        resolve(hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_));\n      }\n    }.bind(this));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, declutteredFeatures) {\n    if (!this.replayGroup_) {\n      return undefined;\n    } else {\n      const resolution = frameState.viewState.resolution;\n      const rotation = frameState.viewState.rotation;\n      const layer = this.getLayer();\n      /** @type {!Object<string, boolean>} */\n      const features = {};\n\n      const result = this.replayGroup_.forEachFeatureAtCoordinate(coordinate, resolution, rotation, hitTolerance,\n        /**\n         * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n         * @return {?} Callback result.\n         */\n        function(feature) {\n          const key = getUid(feature);\n          if (!(key in features)) {\n            features[key] = true;\n            return callback(feature, layer);\n          }\n        }, layer.getDeclutter() ? declutteredFeatures : null);\n\n      return result;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (!this.dirty_ && (!updateWhileAnimating && animating) ||\n        (!updateWhileInteracting && interacting)) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(frameStateExtent,\n      vectorLayerRenderBuffer * resolution);\n    const projectionExtent = viewState.projection.getExtent();\n\n    if (vectorSource.getWrapX() && viewState.projection.canWrapX() &&\n        !containsExtent(projectionExtent, frameState.extent)) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      const worldsAway = Math.floor((center[0] - projectionExtent[0]) / worldWidth);\n      center[0] -= (worldsAway * worldWidth);\n    }\n\n    if (!this.dirty_ &&\n        this.renderedResolution_ == resolution &&\n        this.renderedRevision_ == vectorLayerRevision &&\n        this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n        containsExtent(this.renderedExtent_, extent)) {\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    if (this.replayGroup_) {\n      this.replayGroup_.dispose();\n    }\n    this.replayGroup_ = null;\n\n    this.dirty_ = false;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio), extent, resolution,\n      pixelRatio, vectorLayer.getDeclutter());\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      vectorSource.loadFeatures(toUserExtent(extent, projection), resolution, userProjection);\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      vectorSource.loadFeatures(extent, resolution, projection);\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n\n    /**\n     * @param {import(\"../../Feature.js\").default} feature Feature.\n     * @this {CanvasVectorLayerRenderer}\n     */\n    const render = function(feature) {\n      let styles;\n      const styleFunction = feature.getStyleFunction() || vectorLayer.getStyleFunction();\n      if (styleFunction) {\n        styles = styleFunction(feature, resolution);\n      }\n      if (styles) {\n        const dirty = this.renderFeature(feature, squaredTolerance, styles, replayGroup, userTransform);\n        this.dirty_ = this.dirty_ || dirty;\n      }\n    }.bind(this);\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i]);\n    }\n    this.renderedFeatures_ = features;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(extent, resolution,\n      pixelRatio, vectorSource.getOverlaps(),\n      replayGroupInstructions, vectorLayer.getRenderBuffer());\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedExtent_ = extent;\n    this.renderedRotation_ = viewState.rotation;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} opt_transform Transform from user to view projection.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(feature, squaredTolerance, styles, builderGroup, opt_transform) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading = renderFeature(\n          builderGroup, feature, styles[i], squaredTolerance,\n          this.boundHandleStyleImageChange_, opt_transform) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup, feature, styles, squaredTolerance,\n        this.boundHandleStyleImageChange_, opt_transform);\n    }\n    return loading;\n  }\n}\n\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {import(\"./BaseVector.js\").Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super(opt_options);\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {import(\"../renderer/Layer.js\").default} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\n\nexport default VectorLayer;\n","/**\n * @module olgm/herald/Herald\n */\nimport Abstract from '../Abstract.js';\n\n/**\n * @typedef {Object} WatchOptions\n * @property {boolean} [image=true] Whether to watch image layers or not\n * @property {boolean} [tile=true] Whether to watch tile layers or not\n * @property {boolean} [vector=true] Whether to watch vector layers or not\n */\n\nclass Herald extends Abstract {\n  /**\n   * Abstract class for all heralds. When activated, an herald synchronizes\n   * something from the OpenLayers map to the Google Maps one. When deactivated,\n   * it stops doing so.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * @type {module:olgm/AbstractListener~AbstractListener|null}\n     * @protected\n     */\n    this.listener = null;\n  }\n\n\n  /**\n   * Register all event listeners.\n   */\n  activate() {}\n\n\n  /**\n   * Unregister all event listeners.\n   */\n  deactivate() {\n    if (this.listener) {\n      this.listener.unlisten();\n    }\n  }\n}\nexport default Herald;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {containsCoordinate, createEmpty, extend, getHeight, getTopLeft, getWidth} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(sourceProj, targetProj,\n  targetCenter, targetResolution) {\n\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(targetProj, targetResolution, targetCenter);\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor = getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n        sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n\n/**\n * Enlarge the clipping triangle point by 1 pixel to ensure the edges overlap\n * in order to mask gaps caused by antialiasing.\n *\n * @param {number} centroidX Centroid of the triangle (x coordinate in pixels).\n * @param {number} centroidY Centroid of the triangle (y coordinate in pixels).\n * @param {number} x X coordinate of the point (in pixels).\n * @param {number} y Y coordinate of the point (in pixels).\n * @return {import(\"./coordinate.js\").Coordinate} New point 1 px farther from the centroid.\n */\nfunction enlargeClipPoint(centroidX, centroidY, x, y) {\n  const dX = x - centroidX;\n  const dY = y - centroidY;\n  const distance = Math.sqrt(dX * dX + dY * dY);\n  return [Math.round(x + dX / distance), Math.round(y + dY / distance)];\n}\n\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation\n * Calculated triangulation.\n * @param {Array<{extent: import(\"./extent.js\").Extent,\n *                 image: (HTMLCanvasElement|HTMLImageElement|HTMLVideoElement)}>} sources\n * Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean=} opt_renderEdges Render reprojection edges.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(width, height, pixelRatio,\n  sourceResolution, sourceExtent, targetResolution, targetExtent,\n  triangulation, sources, gutter, opt_renderEdges) {\n\n  const context = createCanvasContext2D(Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height));\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function(src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  const canvasWidthInUnits = getWidth(sourceDataExtent);\n  const canvasHeightInUnits = getHeight(sourceDataExtent);\n  const stitchContext = createCanvasContext2D(\n    Math.round(pixelRatio * canvasWidthInUnits / sourceResolution),\n    Math.round(pixelRatio * canvasHeightInUnits / sourceResolution));\n\n  const stitchScale = pixelRatio / sourceResolution;\n\n  sources.forEach(function(src, i, arr) {\n    const xPos = src.extent[0] - sourceDataExtent[0];\n    const yPos = -(src.extent[3] - sourceDataExtent[3]);\n    const srcWidth = getWidth(src.extent);\n    const srcHeight = getHeight(src.extent);\n\n    stitchContext.drawImage(\n      src.image,\n      gutter, gutter,\n      src.image.width - 2 * gutter, src.image.height - 2 * gutter,\n      xPos * stitchScale, yPos * stitchScale,\n      srcWidth * stitchScale, srcHeight * stitchScale);\n  });\n\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function(triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0], y0 = source[0][1];\n    let x1 = source[1][0], y1 = source[1][1];\n    let x2 = source[2][0], y2 = source[2][1];\n    const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n    const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n    const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n    const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n    const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n    const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0]\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n    const centroidX = (u0 + u1 + u2) / 3;\n    const centroidY = (v0 + v1 + v2) / 3;\n    const p0 = enlargeClipPoint(centroidX, centroidY, u0, v0);\n    const p1 = enlargeClipPoint(centroidX, centroidY, u1, v1);\n    const p2 = enlargeClipPoint(centroidX, centroidY, u2, v2);\n\n    context.moveTo(p1[0], p1[1]);\n    context.lineTo(p0[0], p0[1]);\n    context.lineTo(p2[0], p2[1]);\n    context.clip();\n\n    context.transform(\n      affineCoefs[0], affineCoefs[2], affineCoefs[1], affineCoefs[3], u0, v0);\n\n    context.translate(sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY);\n\n    context.scale(sourceResolution / pixelRatio,\n      -sourceResolution / pixelRatio);\n\n    context.drawImage(stitchContext.canvas, 0, 0);\n    context.restore();\n  });\n\n  if (opt_renderEdges) {\n    context.save();\n\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function(triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {boundingExtent, createEmpty, extendCoordinate, getBottomLeft, getBottomRight,\n  getTopLeft, getTopRight, getWidth, intersects} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {getTransform} from '../proj.js';\n\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target\n */\n\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   */\n  constructor(sourceProj, targetProj, targetExtent, maxSourceExtent, errorThreshold) {\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function(c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ = this.sourceProj_.canWrapX() &&\n        !!maxSourceExtent &&\n        !!this.sourceProj_.getExtent() &&\n        (getWidth(maxSourceExtent) == getWidth(this.sourceProj_.getExtent()));\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent() ?\n      getWidth(this.sourceProj_.getExtent()) : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent() ?\n      getWidth(this.targetProj_.getExtent()) : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    this.addQuad_(\n      destinationTopLeft, destinationTopRight,\n      destinationBottomRight, destinationBottomLeft,\n      sourceTopLeft, sourceTopRight, sourceBottomRight, sourceBottomLeft,\n      MAX_SUBDIVISION);\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function(triangle, i, arr) {\n        leftBound = Math.min(leftBound,\n          triangle.source[0][0], triangle.source[1][0], triangle.source[2][0]);\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach(function(triangle) {\n        if (Math.max(triangle.source[0][0], triangle.source[1][0],\n          triangle.source[2][0]) - leftBound > this.sourceWorldWidth_ / 2) {\n          const newTriangle = [[triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]]];\n          if ((newTriangle[0][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[1][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if ((newTriangle[2][0] - leftBound) > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          const maxX = Math.max(\n            newTriangle[0][0], newTriangle[1][0], newTriangle[2][0]);\n          if ((maxX - minX) < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      }.bind(this));\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c]\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_ ?\n      getWidth(sourceQuadExtent) / this.sourceWorldWidth_ : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX = this.sourceProj_.canWrapX() &&\n                 sourceCoverageX > 0.5 && sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX = getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision = targetCoverageX > MAX_TRIANGLE_WIDTH ||\n          needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision = sourceCoverageX > MAX_TRIANGLE_WIDTH ||\n            needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n        // whole quad outside source projection extent -> ignore\n        return;\n      }\n    }\n\n    if (!needsSubdivision) {\n      if (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ||\n          !isFinite(bSrc[0]) || !isFinite(bSrc[1]) ||\n          !isFinite(cSrc[0]) || !isFinite(cSrc[1]) ||\n          !isFinite(dSrc[0]) || !isFinite(dSrc[1])) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          return;\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n              (modulo(aSrc[0], sourceWorldWidth) +\n               modulo(cSrc[0], sourceWorldWidth)) / 2;\n          dx = centerSrcEstimX -\n              modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a, b, bc, da, aSrc, bSrc, bcSrc, daSrc, maxSubdivision - 1);\n          this.addQuad_(\n            da, bc, c, d, daSrc, bcSrc, cSrc, dSrc, maxSubdivision - 1);\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a, ab, cd, d, aSrc, abSrc, cdSrc, dSrc, maxSubdivision - 1);\n          this.addQuad_(\n            ab, b, c, cd, abSrc, bSrc, cSrc, cdSrc, maxSubdivision - 1);\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    this.addTriangle_(a, b, c, aSrc, bSrc, cSrc);\n  }\n\n  /**\n   * Calculates extent of the 'source' coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function(triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Image\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport ImageBase from '../ImageBase.js';\nimport ImageState from '../ImageState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getCenter, getIntersection, getHeight, getWidth} from '../extent.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../ImageBase.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageBase {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   */\n  constructor(sourceProj, targetProj, targetExtent, targetResolution, pixelRatio, getImageFunction) {\n    const maxSourceExtent = sourceProj.getExtent();\n    const maxTargetExtent = targetProj.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../ImageBase.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n\n      this.canvas_ = renderReprojected(width, height, this.sourcePixelRatio_,\n        this.sourceImage_.getResolution(), this.maxSourceExtent_,\n        this.targetResolution_, this.targetExtent_, this.triangulation_, [{\n          extent: this.sourceImage_.getExtent(),\n          image: this.sourceImage_.getImage()\n        }], 0);\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(this.sourceImage_,\n          EventType.CHANGE, function(e) {\n            const sourceState = this.sourceImage_.getState();\n            if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          }, this);\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(/** @type {!import(\"../events.js\").EventsKey} */ (this.sourceListenerKey_));\n    this.sourceListenerKey_ = null;\n  }\n}\n\n\nexport default ReprojImage;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n\n/**\n * Enable automatic reprojection of raster sources. Default is `true`.\n * TODO: decide if we want to expose this as a build flag or remove it\n * @type {boolean}\n */\nexport const ENABLE_RASTER_REPROJECTION = true;\n","/**\n * @module ol/source/Source\n */\nimport {abstract} from '../util.js';\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\nimport SourceState from './State.js';\n\n\n/**\n * A function that returns a string or an array of strings representing source\n * attributions.\n *\n * @typedef {function(import(\"../PluggableMap.js\").FrameState): (string|Array<string>)} Attribution\n */\n\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {SourceState} [state='ready']\n * @property {boolean} [wrapX=false]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible !== undefined ?\n      options.attributionsCollapsible : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {SourceState}\n     */\n    this.state_ = options.state !== undefined ?\n      options.state : SourceState.READY;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * @abstract\n   * @return {Array<number>|undefined} Resolutions.\n   */\n  getResolutions() {\n    return abstract();\n  }\n\n  /**\n   * Get the state of the source, see {@link module:ol/source/State~State} for possible states.\n   * @return {SourceState} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {SourceState} state State.\n   * @protected\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {?Attribution} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function(frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function(frameState) {\n    return [attributionLike];\n  };\n}\n\n\nexport default Source;\n","/**\n * @module ol/source/Image\n */\nimport {abstract} from '../util.js';\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport {equals} from '../extent.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport Source from './Source.js';\n\n\n/**\n * @enum {string}\n */\nconst ImageSourceEventType = {\n\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror'\n\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {Array<number>} [resolutions]\n * @property {import(\"./State.js\").default} [state]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing a single image.\n * @abstract\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.resolutions_ = options.resolutions !== undefined ?\n      options.resolutions : null;\n\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n  }\n\n  /**\n   * @return {Array<number>} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    if (this.resolutions_) {\n      const idx = linearFindNearest(this.resolutions_, resolution, 0);\n      resolution = this.resolutions_[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection ||\n        !projection ||\n        equivalent(sourceProjection, projection)) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    } else {\n      if (this.reprojectedImage_) {\n        if (this.reprojectedRevision_ == this.getRevision() &&\n            equivalent(\n              this.reprojectedImage_.getProjection(), projection) &&\n            this.reprojectedImage_.getResolution() == resolution &&\n            equals(this.reprojectedImage_.getExtent(), extent)) {\n          return this.reprojectedImage_;\n        }\n        this.reprojectedImage_.dispose();\n        this.reprojectedImage_ = null;\n      }\n\n      this.reprojectedImage_ = new ReprojImage(\n        sourceProjection, projection, extent, resolution, pixelRatio,\n        function(extent, resolution, pixelRatio) {\n          return this.getImageInternal(extent, resolution,\n            pixelRatio, sourceProjection);\n        }.bind(this));\n      this.reprojectedRevision_ = this.getRevision();\n\n      return this.reprojectedImage_;\n    }\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../ImageBase.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADSTART,\n            image));\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADEND,\n            image));\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        this.dispatchEvent(\n          new ImageSourceEvent(ImageSourceEventType.IMAGELOADERROR,\n            image));\n        break;\n      default:\n        // pass\n    }\n  }\n}\n\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/WMSServerType\n */\n\n/**\n * Available server types: `'carmentaserver'`, `'geoserver'`, `'mapserver'`,\n *     `'qgis'`. These are servers that have vendor parameters beyond the WMS\n *     specification that OpenLayers can make use of.\n * @enum {string}\n */\nexport default {\n  /**\n   * HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n   * @api\n   */\n  CARMENTA_SERVER: 'carmentaserver',\n  /**\n   * HiDPI support for [GeoServer](https://geoserver.org/)\n   * @api\n   */\n  GEOSERVER: 'geoserver',\n  /**\n   * HiDPI support for [MapServer](https://mapserver.org/)\n   * @api\n   */\n  MAPSERVER: 'mapserver',\n  /**\n   * HiDPI support for [QGIS](https://qgis.org/)\n   * @api\n   */\n  QGIS: 'qgis'\n};\n","/**\n * @module ol/uri\n */\n\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {DEFAULT_WMS_VERSION} from './common.js';\n\nimport ImageWrapper from '../Image.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, getCenter, getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {assign} from '../obj.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport WMSServerType from './WMSServerType.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\n\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./WMSServerType.js\").default|string} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver` or `qgis`. Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or\n * higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} url WMS service URL.\n */\n\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options=} [opt_options] ImageWMS options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      resolutions: options.resolutions\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ = options.imageLoadFunction !== undefined ?\n      options.imageLoadFunction : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = options.params || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n    this.updateV13_();\n\n    /**\n     * @private\n     * @type {import(\"./WMSServerType.js\").default|undefined}\n     */\n    this.serverType_ = /** @type {import(\"./WMSServerType.js\").default|undefined} */ (options.serverType);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(sourceProjectionObj, projectionObj, coordinate, resolution);\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const extent = getForViewAndSize(coordinate, resolution, 0,\n      GETFEATUREINFO_IMAGE_SIZE);\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetFeatureInfo',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true,\n      'QUERY_LAYERS': this.params_['LAYERS']\n    };\n    assign(baseParams, this.params_, params);\n\n    const x = Math.floor((coordinate[0] - extent[0]) / resolution);\n    const y = Math.floor((extent[3] - coordinate[1]) / resolution);\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      extent, GETFEATUREINFO_IMAGE_SIZE,\n      1, sourceProjectionObj || projectionObj, baseParams);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.url_ === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png'\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection() ? this.getProjection().getMetersPerUnit() : 1;\n      const dpi = 25.4 / 0.28;\n      const inchesPerMeter = 39.37;\n      baseParams['SCALE'] = resolution * mpu * inchesPerMeter * dpi;\n    }\n\n    assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.url_), baseParams);\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n\n    if (this.url_ === undefined) {\n      return null;\n    }\n\n    resolution = this.findNearestResolution(resolution);\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const imageResolution = resolution / pixelRatio;\n\n    const center = getCenter(extent);\n    const viewWidth = Math.ceil(getWidth(extent) / imageResolution);\n    const viewHeight = Math.ceil(getHeight(extent) / imageResolution);\n    const viewExtent = getForViewAndSize(center, imageResolution, 0,\n      [viewWidth, viewHeight]);\n    const requestWidth = Math.ceil(this.ratio_ * getWidth(extent) / imageResolution);\n    const requestHeight = Math.ceil(this.ratio_ * getHeight(extent) / imageResolution);\n    const requestExtent = getForViewAndSize(center, imageResolution, 0,\n      [requestWidth, requestHeight]);\n\n    const image = this.image_;\n    if (image &&\n        this.renderedRevision_ == this.getRevision() &&\n        image.getResolution() == resolution &&\n        image.getPixelRatio() == pixelRatio &&\n        containsExtent(image.getExtent(), viewExtent)) {\n      return image;\n    }\n\n    const params = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_WMS_VERSION,\n      'REQUEST': 'GetMap',\n      'FORMAT': 'image/png',\n      'TRANSPARENT': true\n    };\n    assign(params, this.params_);\n\n    this.imageSize_[0] = Math.round(getWidth(requestExtent) / imageResolution);\n    this.imageSize_[1] = Math.round(getHeight(requestExtent) / imageResolution);\n\n    const url = this.getRequestUrl_(requestExtent, this.imageSize_, pixelRatio,\n      projection, params);\n\n    this.image_ = new ImageWrapper(requestExtent, resolution, pixelRatio,\n      url, this.crossOrigin_, this.imageLoadFunction_);\n\n    this.renderedRevision_ = this.getRevision();\n\n    this.image_.addEventListener(EventType.CHANGE, this.handleImageChange.bind(this));\n\n    return this.image_;\n\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../size.js\").Size} size Size.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string} Request URL.\n   * @private\n   */\n  getRequestUrl_(extent, size, pixelRatio, projection, params) {\n\n    assert(this.url_ !== undefined, 9); // `url` must be configured or set using `#setUrl()`\n\n    params[this.v13_ ? 'CRS' : 'SRS'] = projection.getCode();\n\n    if (!('STYLES' in this.params_)) {\n      params['STYLES'] = '';\n    }\n\n    if (pixelRatio != 1) {\n      switch (this.serverType_) {\n        case WMSServerType.GEOSERVER:\n          const dpi = (90 * pixelRatio + 0.5) | 0;\n          if ('FORMAT_OPTIONS' in params) {\n            params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n          } else {\n            params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n          }\n          break;\n        case WMSServerType.MAPSERVER:\n          params['MAP_RESOLUTION'] = 90 * pixelRatio;\n          break;\n        case WMSServerType.CARMENTA_SERVER:\n        case WMSServerType.QGIS:\n          params['DPI'] = 90 * pixelRatio;\n          break;\n        default:\n          assert(false, 8); // Unknown `serverType` configured\n          break;\n      }\n    }\n\n    params['WIDTH'] = size[0];\n    params['HEIGHT'] = size[1];\n\n    const axisOrientation = projection.getAxisOrientation();\n    let bbox;\n    if (this.v13_ && axisOrientation.substr(0, 2) == 'ne') {\n      bbox = [extent[1], extent[0], extent[3], extent[2]];\n    } else {\n      bbox = extent;\n    }\n    params['BBOX'] = bbox.join(',');\n\n    return appendParams(/** @type {string} */ (this.url_), params);\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.image_ = null;\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.image_ = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    assign(this.params_, params);\n    this.updateV13_();\n    this.image_ = null;\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_WMS_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n}\n\n\nexport default ImageWMS;\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number=} opt_precision Precision of the output string (i.e. number of decimal places)\n * @returns {string} Formatted string\n */\nexport function padNumber(number, width, opt_precision) {\n  const numberString = opt_precision !== undefined ? number.toFixed(opt_precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width ? numberString : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @returns {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module olgm/asserts\n */\n/* Based on https://github.com/openlayers/openlayers/blob/master/src/ol/asserts.js */\n/**\n * @param {*} assertion Assertion we expected to be truthy\n * @param {string=} opt_message Error message in case of failure\n */\nexport function assert(assertion, opt_message) {\n  if (!assertion) {\n    let message = 'Assertion failed';\n    if (opt_message) {\n      message += ': ' + opt_message;\n    }\n    throw new Error(message);\n  }\n}\n","/**\n * @module olgm/gm/ImageOverlay\n */\n/**\n * @classdesc\n * @api\n */\nclass ImageOverlay extends ((window.google && window.google.maps && google.maps.OverlayView) || Object) {\n  /**\n   * Creates a new image overlay.\n   * @param {string} src url to the image\n   * @param {Array<number>} size size of the image\n   * @param {google.maps.LatLng} topLeft topLeft corner\n   */\n  constructor(src, size, topLeft) {\n    super();\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.src_ = src;\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.size_ = size;\n\n    /**\n     * @type {google.maps.LatLng}\n     * @private\n     */\n    this.topLeft_ = topLeft;\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.div_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.zIndex_ = 0;\n  }\n\n\n  /**\n   * Note: mark as `@api` to make the minimized version include this method.\n   * @api\n   * @override\n   */\n  onAdd() {\n    const div = document.createElement('div');\n    div.style.borderStyle = 'none';\n    div.style.borderWidth = '0px';\n    div.style.position = 'absolute';\n    div.style.zIndex = this.zIndex_;\n\n    // Create the img element and attach it to the div.\n    const img = document.createElement('img');\n    img.src = this.src_;\n    img.style.width = '100%';\n    img.style.height = '100%';\n    img.style.position = 'absolute';\n    div.appendChild(img);\n\n    this.div_ = div;\n\n    /**\n     * Add the element to the \"mapPane\" pane. Normally we would put it in the\n     * \"overlayLayer\" pane, but we want to be able to show it behind tile layers,\n     * so we place them together in the same pane.\n     */\n    const panes = this.getPanes();\n    panes.mapPane.appendChild(div);\n  }\n\n\n  /**\n   * Note: mark as `@api` to make the minimized version include this method.\n   * @api\n   * @override\n   */\n  draw() {\n    const div = this.div_;\n\n    const sizeX = this.size_[0];\n    const sizeY = this.size_[1];\n\n    div.style.width = sizeX + 'px';\n    div.style.height = sizeY + 'px';\n\n    const overlayProjection = this.getProjection();\n    const topLeftPx = overlayProjection.fromLatLngToDivPixel(this.topLeft_);\n\n    let offsetX = topLeftPx.x;\n    const offsetY = topLeftPx.y;\n\n    // Adjust bad calculations when the view is larger than the world\n    const worldWidth = overlayProjection.getWorldWidth();\n    if (worldWidth < sizeX) {\n      // Overlap of the map on each size\n      const mapOverlap = Math.floor(sizeX / worldWidth) / 2;\n\n      // For when only one map is overlapping\n      const factor = Math.max(mapOverlap, 1);\n\n      offsetX -= worldWidth * factor;\n    }\n\n    div.style.top = offsetY + 'px';\n    div.style.left = offsetX + 'px';\n  }\n\n\n  /**\n   * Set the zIndex for the div containing the image\n   * @param {number} zIndex zIndex to set\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n    if (this.div_) {\n      this.div_.style.zIndex = zIndex;\n    }\n  }\n\n\n  /**\n   * Note: mark as `@api` to make the minimized version include this method.\n   * @api\n   * @override\n   */\n  onRemove() {\n    if (this.div_) {\n      this.div_.parentNode.removeChild(this.div_);\n      this.div_ = null;\n    }\n  }\n}\nexport default ImageOverlay;\n","/**\n * @module olgm/herald/Source\n */\nimport Herald from './Herald.js';\n\nclass SourceHerald extends Herald {\n  /**\n   * This is an abstract class. Children of this class will listen to one or\n   * multiple layers of a specific class to render them using the Google Maps\n   * API whenever a Google Maps layer is active.\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @abstract\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * Flag that determines whether the GoogleMaps map is currently active, i.e.\n     * is currently shown and has the OpenLayers map added as one of its control.\n     * @type {boolean}\n     * @protected\n     */\n    this.googleMapsIsActive_ = false;\n  }\n\n\n  /**\n   * Watch the layer. This adds the layer to the list of layers the herald is\n   * listening to, so that it can display it using Google Maps as soon as the\n   * layer becomes visible.\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @abstract\n   * @api\n   */\n  watchLayer(layer) {}\n\n\n  /**\n   * Stop watching the layer. This removes the layer from the list of layers the\n   * herald is listening to, and restores its original opacity.\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @abstract\n   * @api\n   */\n  unwatchLayer(layer) {}\n\n\n  /**\n   * Set the googleMapsIsActive value to true or false\n   * @param {boolean} active whether or not google maps is active\n   * @api\n   */\n  setGoogleMapsActive(active) {\n    this.googleMapsIsActive = active;\n  }\n\n\n  /**\n   * Find the index of a layer in the ol3 map's layers\n   * @param {module:ol/layer/Base} layer layer to find in ol3's layers array\n   * @returns {number} suggested zIndex for that layer\n   * @api\n   */\n  findIndex(layer) {\n    const layers = this.ol3map.getLayers().getArray();\n    let layerIndex = layers.indexOf(layer);\n    const zIndex = layer.getZIndex();\n\n    if (zIndex != 0) {\n      layerIndex = zIndex;\n    }\n\n    return layerIndex;\n  }\n}\nexport default SourceHerald;\n","/**\n * @module olgm/obj\n */\n/* Based on https://github.com/openlayers/openlayers/blob/master/src/ol/obj.js */\n\n\n/**\n * Polyfill for Object.assign().  Assigns enumerable and own properties from\n * one or more source objects to a target object.\n * See https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Object/assign.\n *\n * @param {!Object} target The target object.\n * @param {...Object} var_sources The source object(s).\n * @return {!Object} The modified target object.\n */\nexport const assign = (typeof Object.assign === 'function') ? Object.assign : function(target, var_sources) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert undefined or null to object');\n  }\n\n  const output = Object(target);\n  for (let i = 1, ii = arguments.length; i < ii; ++i) {\n    const source = arguments[i];\n    if (source !== undefined && source !== null) {\n      for (const key in source) {\n        if (source.hasOwnProperty(key)) {\n          output[key] = source[key];\n        }\n      }\n    }\n  }\n  return output;\n};\n\n\n/**\n * Removes all properties from an object.\n * @param {Object} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n\n/**\n * Get an array of property values from an object.\n * @param {Object<K,V>} object The object from which to get the values.\n * @return {!Array<V>} The property values.\n * @template K,V\n */\nexport function getValues(object) {\n  const values = [];\n  for (const property in object) {\n    values.push(object[property]);\n  }\n  return values;\n}\n\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module olgm/listener/AbstractListener\n */\n/**\n * Interface for things that have listened to something that can be unlistened to.\n */\nclass AbstractListener {\n  /**\n   * Unlisten to what the listener has listened to.\n   */\n  unlisten() {\n    throw new TypeError('not implemented');\n  }\n}\n\nexport default AbstractListener;\n","/**\n * @module olgm/listener/Listener\n */\nimport AbstractListener from './AbstractListener.js';\nimport {unByKey} from 'ol/Observable.js';\n\nclass Listener extends AbstractListener {\n  /**\n   * Listener for OL events.\n   * @param {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>} listenerKey OL events key\n   */\n  constructor(listenerKey) {\n    super();\n\n    /**\n     * @type {module:ol/events~EventsKey|Array<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.listenerKey_ = listenerKey;\n  }\n\n  /**\n   * @inheritdoc\n   */\n  unlisten() {\n    unByKey(this.listenerKey_);\n  }\n}\n\nexport default Listener;\n","/**\n * @module olgm/listener/PropertyListener\n */\nimport Listener from './Listener.js';\n\nclass PropertyListener extends Listener {\n  /**\n   * Listener for OL object properties. Has utilities for listening on the property value.\n   * @param {module:ol/Object~BaseObject} target Object with a property\n   * @param {module:ol/Object~BaseObject=} oldTarget The previous object with a property\n   * @param {string} key Property key\n   * @param {function} listen Takes the current and previous property value as arguments.\n   * Called on initialization and when the property value changes.\n   * On initialization, the previous property value will be taken from the old target, if any.\n   * Can return an AbstractListener or an array of AbstractListeners which will be unlistened when the property value changes.\n   */\n  constructor(target, oldTarget, key, listen) {\n    super(target.on('change:' + key, e => {\n      if (this.innerListener_) {\n        if (Array.isArray(this.innerListener_)) {\n          this.innerListener_.forEach(listener => listener.unlisten());\n        } else {\n          this.innerListener_.unlisten();\n        }\n      }\n      this.innerListener_ = listen(e.target.get(e.key), e.oldValue);\n    }));\n\n    /**\n     * @type {?module:olgm/AbstractListener~AbstractListener|Array<module:olgm/AbstractListener~AbstractListener>}\n     * @private\n     */\n    this.innerListener_ = listen(target.get(key), oldTarget && oldTarget.get(key));\n  }\n\n  /**\n   * @inheritdoc\n   */\n  unlisten() {\n    if (this.innerListener_) {\n      if (Array.isArray(this.innerListener_)) {\n        this.innerListener_.forEach(listener => listener.unlisten());\n      } else {\n        this.innerListener_.unlisten();\n      }\n    }\n    super.unlisten();\n  }\n}\n\nexport default PropertyListener;\n","/**\n * @module olgm/herald/ImageWMSSource\n */\nimport {getTopLeft} from 'ol/extent.js';\nimport {transform} from 'ol/proj.js';\nimport ImageWMS from 'ol/source/ImageWMS.js';\nimport {assert} from '../asserts.js';\nimport ImageOverlay from '../gm/ImageOverlay.js';\nimport SorceHerald from './Source.js';\nimport {assign} from '../obj.js';\nimport {appendParams} from '../uri.js';\nimport PropertyListener from '../listener/PropertyListener.js';\nimport Listener from '../listener/Listener.js';\n\n/**\n * @typedef {Object} LayerCache\n * @property {module:olgm/gm/ImageOverlay} imageOverlay\n * @property {string|null} lastUrl\n * @property {module:ol/layer/Image} layer\n * @property {Array<module:olgm/AbstractListener~AbstractListener>} listeners\n * @property {number} opacity\n * @property {number} zIndex\n */\n\nclass ImageWMSSourceHerald extends SorceHerald {\n  /**\n   * Listen to a Image WMS layer\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n    * @type {Array<module:olgm/herald/ImageWMSSource~LayerCache>}\n    * @private\n    */\n    this.cache_ = [];\n\n    /**\n    * @type {Array<module:ol/layer/Image>}\n    * @private\n    */\n    this.layers_ = [];\n  }\n\n\n  /**\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @override\n   */\n  watchLayer(layer) {\n    const imageLayer = /** @type {module:ol/layer/Image} */ (layer);\n\n    // Source must be ImageWMS\n    const source = imageLayer.getSource();\n    if (!(source instanceof ImageWMS)) {\n      return;\n    }\n\n    // If olgmWatch property is false then render using OL instead\n    if (imageLayer.get('olgmWatch') === false) {\n      return;\n    }\n\n    this.layers_.push(imageLayer);\n\n    // opacity\n    const opacity = imageLayer.getOpacity();\n\n    const cacheItem = /** {@type module:olgm/herald/ImageWMSSource~LayerCache} */ ({\n      imageOverlay: null,\n      lastUrl: null,\n      layer: imageLayer,\n      listeners: [],\n      opacity: opacity,\n      zIndex: 0\n    });\n    cacheItem.listeners.push(\n      // Hide the google layer when the ol3 layer is invisible\n      new Listener(imageLayer.on('change:visible', () => this.handleVisibleChange_(cacheItem))),\n      new Listener(this.ol3map.on('moveend', () => this.handleMoveEnd_(cacheItem))),\n      new PropertyListener(this.ol3map, null, 'view', (view, oldView) => {\n        return new PropertyListener(view, oldView, 'resolution', () => this.handleMoveEnd_(cacheItem));\n      }),\n      // Make sure that any change to the layer source itself also updates the\n      // google maps layer\n      new PropertyListener(imageLayer, null, 'source', source => {\n        if (source) {\n          this.handleMoveEnd_(cacheItem);\n        }\n        return new Listener(source.on('change', () => this.handleMoveEnd_(cacheItem)));\n      })\n    );\n\n    // Activate the cache item\n    this.activateCacheItem_(cacheItem);\n    this.cache_.push(cacheItem);\n  }\n\n\n  /**\n   * Unwatch the WMS Image layer\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @override\n   */\n  unwatchLayer(layer) {\n    const imageLayer = /** @type {module:ol/layer/Image} */ (layer);\n\n    const index = this.layers_.indexOf(imageLayer);\n    if (index !== -1) {\n      this.layers_.splice(index, 1);\n\n      const cacheItem = this.cache_[index];\n      if (cacheItem.listeners) {\n        cacheItem.listeners.forEach(listener => listener.unlisten());\n      }\n\n      // Clean previous overlay\n      this.resetImageOverlay_(cacheItem);\n\n      // opacity\n      imageLayer.setOpacity(cacheItem.opacity);\n\n      this.cache_.splice(index, 1);\n    }\n  }\n\n\n  /**\n   * Activate all cache items\n   * @override\n   */\n  activate() {\n    super.activate();\n    this.cache_.forEach(this.activateCacheItem_, this);\n  }\n\n\n  /**\n   * Activates an image WMS layer cache item.\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem to\n   * activate\n   * @private\n   */\n  activateCacheItem_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n    if (visible && this.googleMapsIsActive) {\n      cacheItem.lastUrl = null;\n      cacheItem.layer.setOpacity(0);\n      this.updateImageOverlay_(cacheItem);\n    }\n  }\n\n\n  /**\n   * Deactivate all cache items\n   * @override\n   */\n  deactivate() {\n    super.deactivate();\n    this.cache_.forEach(this.deactivateCacheItem_, this);\n  }\n\n\n  /**\n   * Deactivates an Image WMS layer cache item.\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem to\n   * deactivate\n   * @private\n   */\n  deactivateCacheItem_(cacheItem) {\n    if (cacheItem.imageOverlay) {\n      cacheItem.imageOverlay.setMap(null);\n      cacheItem.imageOverlay = null;\n    }\n    cacheItem.layer.setOpacity(cacheItem.opacity);\n  }\n\n\n  /**\n   * Generate a wms request url for a single image\n   * @param {module:ol/layer/Image} layer layer to query\n   * @return {string} url to the requested tile\n   * @private\n   */\n  generateImageWMSFunction_(layer) {\n    let key;\n    const source = /** @type {ol.source.ImageWMS} */ (layer.getSource());\n\n    const params = source.getParams();\n    const ol3map = this.ol3map;\n\n    //base WMS URL\n    const baseUrl = /** @type {string} */ (source.getUrl());\n    assert(\n      baseUrl !== undefined, 'Expected the source to have an url');\n    const size = ol3map.getSize();\n\n    assert(\n      size !== undefined, 'Expected the map to have a size');\n\n    const view = ol3map.getView();\n    const bbox = view.calculateExtent(size);\n\n    // Separate original WMS params and custom ones\n    const wmsParamsList = [\n      'CRS',\n      'BBOX',\n      'FORMAT',\n      'HEIGHT',\n      'LAYERS',\n      'REQUEST',\n      'SERVICE',\n      'SRS',\n      'STYLES',\n      'TILED',\n      'TRANSPARENT',\n      'VERSION',\n      'WIDTH'\n    ];\n    const customParams = {};\n    const wmsParams = {};\n    for (key in params) {\n      const upperCaseKey = key.toUpperCase();\n      if (wmsParamsList.indexOf(upperCaseKey) === -1) {\n        if (params[key] !== undefined && params[key] !== null) {\n          customParams[key] = params[key];\n        }\n      } else {\n        wmsParams[upperCaseKey] = params[key];\n      }\n    }\n\n    // Set WMS params\n    const version = wmsParams['VERSION'] ? wmsParams['VERSION'] : '1.3.0';\n    const layers = wmsParams['LAYERS'] ? wmsParams['LAYERS'] : '';\n    const styles = wmsParams['STYLES'] ? wmsParams['STYLES'] : '';\n    const format = wmsParams['FORMAT'] ? wmsParams['FORMAT'] : 'image/png';\n    const transparent = wmsParams['TRANSPARENT'] ?\n      wmsParams['TRANSPARENT'] : 'TRUE';\n    const tiled = wmsParams['TILED'] ? wmsParams['TILED'] : 'FALSE';\n\n    // Check whether or not we're using WMS 1.3.0\n    const versionNumbers = version.split('.');\n    const wms13 = (\n      parseInt(versionNumbers[0], 10) >= 1 &&\n      parseInt(versionNumbers[1], 10) >= 3);\n\n    const queryParams = {\n      'BBOX': bbox,\n      'FORMAT': format,\n      'HEIGHT': size[1],\n      'LAYERS': layers,\n      'REQUEST': 'GetMap',\n      'SERVICE': 'WMS',\n      'STYLES': styles,\n      'TILED': tiled,\n      'TRANSPARENT': transparent,\n      'VERSION': version,\n      'WIDTH': size[0]\n    };\n\n    const epsg3857 = 'EPSG:3857';\n    if (wms13) {\n      queryParams['CRS'] = epsg3857;\n    } else {\n      queryParams['SRS'] = epsg3857;\n    }\n\n    assign(queryParams, customParams);\n\n    const url = appendParams(baseUrl, queryParams);\n\n    return url;\n  }\n\n\n  /**\n   * Clean-up the image overlay\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem\n   * @private\n   */\n  resetImageOverlay_(cacheItem) {\n    // Clean previous overlay\n    if (cacheItem.imageOverlay) {\n      // Remove the overlay from the map\n      cacheItem.imageOverlay.setMap(null);\n\n      // Destroy the overlay\n      cacheItem.imageOverlay = null;\n    }\n  }\n\n\n  /**\n   * Refresh the custom image overlay on google maps\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * layer to update\n   * @param {boolean=} opt_force whether we should refresh even if the\n   * url for the request hasn't changed. Defaults to false.\n   * @private\n   */\n  updateImageOverlay_(cacheItem, opt_force) {\n    const layer = cacheItem.layer;\n\n    if (!layer.getVisible()) {\n      return;\n    }\n\n    let url = this.generateImageWMSFunction_(layer);\n    const forceRefresh = opt_force == true;\n\n    // Force a refresh by setting a new url\n    if (forceRefresh) {\n      url += '&timestamp=' + new Date().getTime();\n    }\n\n    // Check if we're within the accepted resolutions\n    const minResolution = layer.getMinResolution();\n    const maxResolution = layer.getMaxResolution();\n    const currentResolution = this.ol3map.getView().getResolution();\n    if (currentResolution < minResolution || currentResolution > maxResolution) {\n      this.resetImageOverlay_(cacheItem);\n      return;\n    }\n\n    /* We listen to both change:resolution and moveend events. However, changing\n    * resolution eventually sends a moveend event as well. Using only the\n    * moveend event makes zooming in/out look bad. To prevent rendering the\n    * overlay twice when it happens, we save the request url, and if it's the\n    * same as the last time, we don't render it.\n    */\n    if (url == cacheItem.lastUrl) {\n      return;\n    }\n\n    cacheItem.lastUrl = url;\n\n    // Create a new overlay\n    const view = this.ol3map.getView();\n    const size = this.ol3map.getSize();\n\n    assert(\n      size !== undefined, 'Expected the map to have a size');\n\n    const extent = view.calculateExtent(size);\n\n    // First, get the coordinates of the top left corner\n    const topLeft = getTopLeft(extent);\n\n    // Then, convert it to LatLng coordinates for google\n    const lngLat = transform(topLeft, 'EPSG:3857', 'EPSG:4326');\n    const topLeftLatLng = new google.maps.LatLng(lngLat[1], lngLat[0]);\n\n    const overlay = new ImageOverlay(\n      url,\n      /** @type {Array<number>} */ (size),\n      topLeftLatLng);\n    overlay.setZIndex(cacheItem.zIndex);\n\n    // Set the new overlay right away to give it time to render\n    overlay.setMap(this.gmap);\n\n    // Clean previous overlay\n    this.resetImageOverlay_(cacheItem);\n\n    // Save new overlay\n    cacheItem.imageOverlay = overlay;\n  }\n\n\n  /**\n   * Order the layers by index in the ol3 layers array\n   * @api\n   */\n  orderLayers() {\n    for (let i = 0; i < this.cache_.length; i++) {\n      const cacheItem = this.cache_[i];\n      const layer = cacheItem.layer;\n      const zIndex = this.findIndex(layer);\n      cacheItem.zIndex = zIndex;\n\n      // There won't be an imageOverlay while Google Maps isn't visible\n      if (cacheItem.imageOverlay) {\n        cacheItem.imageOverlay.setZIndex(zIndex);\n      }\n    }\n  }\n\n\n  /**\n   * Refresh the image overlay for each cache item\n   * @api\n   */\n  refresh() {\n    for (let i = 0; i < this.cache_.length; i++) {\n      this.updateImageOverlay_(this.cache_[i], true);\n    }\n  }\n\n\n  /**\n   * Deal with the google WMS layer when we enable or disable the OL3 WMS layer\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleVisibleChange_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n\n    if (visible) {\n      this.activateCacheItem_(cacheItem);\n    } else {\n      this.deactivateCacheItem_(cacheItem);\n    }\n  }\n\n\n  /**\n   * Handle the map being panned when an ImageWMS layer is present\n   * @param {module:olgm/herald/ImageWMSSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleMoveEnd_(cacheItem) {\n    if (cacheItem.layer.getVisible() && this.ol3map.getView().getCenter()) {\n      this.updateImageOverlay_(cacheItem);\n    }\n  }\n}\n\n\nexport default ImageWMSSourceHerald;\n","/**\n * @module olgm/uri\n */\n/**\n * Shamelessly borrowed from `ol.uri.appendParams`.\n *\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function(k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri = uri.indexOf('?') === -1 ? uri + '?' : uri + '&';\n  return uri + qs;\n}\n","/**\n * @module ol/easing\n */\n\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing~inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  } else {\n    return 1 - inAndOut(2 * (t - 0.5));\n  }\n}\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {abstract} from './util.js';\n\n\n/**\n * A function that takes an {@link module:ol/Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   var xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     var data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~Tile} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @api\n */\n\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, opt_options) {\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {TileState}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile}\n     */\n    this.interimTile = null;\n\n    /**\n     * The tile is available at the highest possible resolution. Subclasses can\n     * set this to `false` initially. Tile load listeners will not be\n     * unregistered before this is set to `true` and a `#changed()` is called.\n     * @type {boolean}\n     */\n    this.hifi = true;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ = options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setState(TileState.ABORT);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    if (!this.interimTile) {\n      //empty chain\n      return this;\n    }\n    let tile = this.interimTile;\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    if (!this.interimTile) {\n      return;\n    }\n\n    let tile = this.interimTile;\n    let prev = /** @type {Tile} */ (this);\n\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      } else if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {TileState} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {TileState} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + (1000 / 60); // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\n\nclass ImageTile extends Tile {\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options=} opt_options Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, opt_options) {\n\n    super(tileCoord, state, opt_options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenImage_();\n      this.image_ = getBlankImage();\n    }\n    if (this.interimTile) {\n      this.interimTile.dispose();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getKey() {\n    return this.src_;\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this)\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/tilecoord\n */\n\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord=} opt_tileCoord Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, opt_tileCoord) {\n  if (opt_tileCoord !== undefined) {\n    opt_tileCoord[0] = z;\n    opt_tileCoord[1] = x;\n    opt_tileCoord[2] = y;\n    return opt_tileCoord;\n  } else {\n    return [z, x, y];\n  }\n}\n\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const extent = tileGrid.getExtent();\n  let tileRange;\n  if (!extent) {\n    tileRange = tileGrid.getFullTileRange(z);\n  } else {\n    tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n  }\n  if (!tileRange) {\n    return true;\n  } else {\n    return tileRange.containsXY(x, y);\n  }\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n\n  /**\n   * @param {number=} opt_highWaterMark High water mark.\n   */\n  constructor(opt_highWaterMark) {\n\n    super(opt_highWaterMark);\n\n  }\n\n  /**\n   * @param {!Object<string, import(\"./TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().dispose();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach(function(tile) {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.dispose();\n      }\n    }.bind(this));\n  }\n}\n\n\nexport default TileCache;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {getArea, getCenter, getIntersection} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {calculateSourceResolution, render as renderReprojected} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\n\n\n/**\n * @typedef {function(number, number, number, number) : import(\"../Tile.js\").default} FunctionType\n */\n\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number=} opt_errorThreshold Acceptable reprojection error (in px).\n   * @param {boolean=} opt_renderEdges Render reprojection edges.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    opt_errorThreshold,\n    opt_renderEdges\n  ) {\n    super(tileCoord, TileState.IDLE);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = opt_renderEdges !== undefined ? opt_renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<import(\"../Tile.js\").default>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(this.wrappedTileCoord_);\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent ?\n      getIntersection(targetExtent, maxTargetExtent) : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0]);\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj, targetProj, targetCenter, targetResolution);\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels = opt_errorThreshold !== undefined ?\n      opt_errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj, targetProj, limitedTargetExtent, maxSourceExtent,\n      sourceResolution * errorThresholdInPixels);\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1], maxSourceExtent[1], maxSourceExtent[3]);\n        sourceExtent[3] = clamp(\n          sourceExtent[3], maxSourceExtent[1], maxSourceExtent[3]);\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n        sourceExtent, this.sourceZ_);\n\n      for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n        for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n          const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n          if (tile) {\n            this.sourceTiles_.push(tile);\n          }\n        }\n      }\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    if (this.state == TileState.LOADING) {\n      this.unlistenSources_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach(function(tile, i, arr) {\n      if (tile && tile.getState() == TileState.LOADED) {\n        sources.push({\n          extent: this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord),\n          image: tile.getImage()\n        });\n      }\n    }.bind(this));\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(this.sourceZ_);\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_);\n      this.canvas_ = renderReprojected(width, height, this.pixelRatio_,\n        sourceResolution, this.sourceTileGrid_.getExtent(),\n        targetResolution, targetExtent, this.triangulation_, sources,\n        this.gutter_, this.renderEdges_);\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE,\n            function(e) {\n              const state = tile.getState();\n              if (state == TileState.LOADED ||\n                    state == TileState.ERROR ||\n                    state == TileState.EMPTY) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            }, this);\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      }.bind(this));\n\n      this.sourceTiles_.forEach(function(tile, i, arr) {\n        const state = tile.getState();\n        if (state == TileState.IDLE) {\n          tile.load();\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n}\n\n\nexport default ReprojTile;\n","/**\n * @module ol/tileurlfunction\n */\nimport {assert} from './asserts.js';\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        return template.replace(zRegEx, tileCoord[0].toString())\n          .replace(xRegEx, tileCoord[1].toString())\n          .replace(yRegEx, tileCoord[2].toString())\n          .replace(dashYRegEx, function() {\n            const z = tileCoord[0];\n            const range = tileGrid.getFullTileRange(z);\n            assert(range, 55); // The {-y} placeholder requires a tile grid with extent\n            const y = range.getHeight() - tileCoord[2] - 1;\n            return y.toString();\n          });\n      }\n    }\n  );\n}\n\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function(tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      } else {\n        const h = tileCoordHash(tileCoord);\n        const index = modulo(h, tileUrlFunctions.length);\n        return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n      }\n    }\n  );\n}\n\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/size\n */\n\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = size[0] + 2 * num;\n  opt_size[1] = size[1] + 2 * num;\n  return opt_size;\n}\n\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, opt_size) {\n  if (opt_size === undefined) {\n    opt_size = [0, 0];\n  }\n  opt_size[0] = (size[0] * ratio + 0.5) | 0;\n  opt_size[1] = (size[1] * ratio + 0.5) | 0;\n  return opt_size;\n}\n\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size=} opt_size Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, opt_size) {\n  if (Array.isArray(size)) {\n    return size;\n  } else {\n    if (opt_size === undefined) {\n      opt_size = [size, size];\n    } else {\n      opt_size[0] = size;\n      opt_size[1] = size;\n    }\n    return opt_size;\n  }\n}\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport TileRange, {createOrUpdate as createOrUpdateTileRange} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\n\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and upwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and upwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Sizes.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(isSorted(this.resolutions_, function(a, b) {\n      return b - a;\n    }, true), 17); // `resolutions` must be sorted in descending order\n\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(this.origins_.length == this.resolutions_.length,\n        20); // Number of `origins` and `resolutions` must be equal\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined &&\n        !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      18); // Either `origin` or `origins` must be configured, never both\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(this.tileSizes_.length == this.resolutions_.length,\n        19); // Number of `tileSizes` and `resolutions` must be equal\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ = options.tileSize !== undefined ?\n      options.tileSize :\n      !this.tileSizes_ ? DEFAULT_TILE_SIZE : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      22); // Either `tileSize` or `tileSizes` must be configured, never both\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map(function(size, z) {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]), Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]), Math.max(size[1] - 1, -1));\n        return tileRange;\n      }, this);\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(tileCoord, callback, opt_tileRange, opt_extent) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n    }\n    while (z >= this.minZoom) {\n      if (this.zoomFactor_ === 2) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, opt_tileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(tileCoordExtent, z, opt_tileRange);\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    } else {\n      return this.origins_[z];\n    }\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, opt_tileRange, opt_extent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(minX, minX + 1, minY, minY + 1, opt_tileRange);\n      }\n      const tileCoordExtent = this.getTileCoordExtent(tileCoord, opt_extent);\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent, tileCoord[0] + 1, opt_tileRange);\n    }\n    return null;\n  }\n\n  /**\n   * Get the extent for a tile range.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getTileRangeExtent(z, tileRange, opt_extent) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n    const minX = origin[0] + tileRange.minX * tileSize[0] * resolution;\n    const maxX = origin[0] + (tileRange.maxX + 1) * tileSize[0] * resolution;\n    const minY = origin[1] + tileRange.minY * tileSize[1] * resolution;\n    const maxY = origin[1] + (tileRange.maxY + 1) * tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default=} opt_tileRange Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, opt_tileRange) {\n    const tileCoord = tmpTileCoord;\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tileCoord);\n    const minX = tileCoord[1];\n    const minY = tileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tileCoord);\n    return createOrUpdateTileRange(minX, tileCoord[1], minY, tileCoord[2], opt_tileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, opt_extent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, opt_extent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0], coordinate[1], resolution, false, opt_tileCoord);\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(x, y, resolution, reverseIntersectionPolicy, opt_tileCoord) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = scale * xFromOrigin / tileSize[0];\n    let tileCoordY = scale * yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    const adjustX = reverseIntersectionPolicy ? 0.5 : 0;\n    const adjustY = reverseIntersectionPolicy ? 0.5 : 0;\n    const xFromOrigin = Math.floor((x - origin[0]) / resolution + adjustX);\n    const yFromOrigin = Math.floor((origin[1] - y) / resolution + adjustY);\n    let tileCoordX = xFromOrigin / tileSize[0];\n    let tileCoordY = yFromOrigin / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = Math.ceil(tileCoordX) - 1;\n      tileCoordY = Math.ceil(tileCoordY) - 1;\n    } else {\n      tileCoordX = Math.floor(tileCoordX);\n      tileCoordY = Math.floor(tileCoordY);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Zoom level.\n   * @param {import(\"../tilecoord.js\").TileCoord=} opt_tileCoord Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0], coordinate[1], z, false, opt_tileCoord);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an `import(\"../size.js\").Size`, run the result through `import(\"../size.js\").Size.toSize()`.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    } else {\n      return this.tileSizes_[z];\n    }\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return null;\n    } else {\n      return this.fullTileRanges_[z];\n    }\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number=} opt_direction If 0, the nearest resolution will be used.\n   *     If 1, the nearest lower resolution will be used. If -1, the nearest\n   *     higher resolution will be used. Default is 0.\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(this.resolutions_, resolution, opt_direction || 0);\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {toSize} from './size.js';\nimport {containsCoordinate, createOrUpdate, getCorner, getHeight, getWidth} from './extent.js';\nimport Corner from './extent/Corner.js';\nimport {get as getProjection, METERS_PER_UNIT} from './proj.js';\nimport Units from './proj/Units.js';\nimport TileGrid from './tilegrid/TileGrid.js';\n\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil((projectionExtent[0] - center[0]) / worldWidth);\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  } else {\n    return tileCoord;\n  }\n}\n\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner) {\n  const corner = opt_corner !== undefined ? opt_corner : Corner.TOP_LEFT;\n\n  const resolutions = resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: opt_tileSize\n  });\n}\n\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. The zero level of the grid is defined by the resolution at which one tile fits in the\n * provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions=} opt_options Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(opt_options) {\n  const xyzOptions = opt_options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize\n    )\n  };\n  return new TileGrid(gridOptions);\n}\n\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, opt_maxZoom, opt_tileSize) {\n  const maxZoom = opt_maxZoom !== undefined ?\n    opt_maxZoom : DEFAULT_MAX_ZOOM;\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  const tileSize = toSize(opt_tileSize !== undefined ?\n    opt_tileSize : DEFAULT_TILE_SIZE);\n  const maxResolution = Math.max(\n    width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number=} opt_maxZoom Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size=} opt_tileSize Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {Corner=} opt_corner Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, opt_maxZoom, opt_tileSize, opt_corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, opt_maxZoom, opt_tileSize, opt_corner);\n}\n\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half = 180 * METERS_PER_UNIT[Units.DEGREES] / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport {abstract} from '../util.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport Event from '../events/Event.js';\nimport {equivalent} from '../proj.js';\nimport {toSize, scale as scaleSize} from '../size.js';\nimport Source from './Source.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {wrapX, getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {number} [tilePixelRatio]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ = options.tilePixelRatio !== undefined ?\n      options.tilePixelRatio : 1;\n\n    /**\n     * @protected\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    let cacheSize = options.cacheSize;\n    if (cacheSize === undefined) {\n      const tileSize = [256, 256];\n      const tileGrid = options.tileGrid;\n      if (tileGrid) {\n        toSize(tileGrid.getTileSize(tileGrid.getMinZoom()), tileSize);\n      }\n      const canUseScreen = typeof screen !== 'undefined';\n      const width = canUseScreen ? (screen.availWidth || screen.width) : 1920;\n      const height = canUseScreen ? (screen.availHeight || screen.height) : 1080;\n      cacheSize = 4 * Math.ceil(width / tileSize[0]) * Math.ceil(height / tileSize[1]);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(cacheSize);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {transition: options.transition};\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, import(\"../TileRange.js\").default>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (tileCache.get(tileCoordKey));\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = (callback(tile) !== false);\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @protected\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getResolutions() {\n    return this.tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    } else {\n      return this.tileGrid;\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (thisProj && !equivalent(thisProj, projection)) {\n      return null;\n    } else {\n      return this.tileCache;\n    }\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    } else {\n      return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n    }\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, opt_projection) {\n    const projection = opt_projection !== undefined ?\n      opt_projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n\n}\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n\n  }\n\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror'\n\n};\n","/**\n * @module ol/source/UrlTile\n */\nimport {getUid} from '../util.js';\nimport TileState from '../TileState.js';\nimport {expandUrl, createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\nimport {getKeyZXY} from '../tilecoord.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions]\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize]\n * @property {boolean} [opaque]\n * @property {import(\"../proj.js\").ProjectionLike} [projection]\n * @property {import(\"./State.js\").default} [state]\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid]\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction\n * @property {number} [tilePixelRatio]\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction]\n * @property {string} [url]\n * @property {Array<string>} [urls]\n * @property {boolean} [wrapX=true]\n * @property {number} [transition]\n * @property {string} [key]\n * @property {number} [zDirection=0]\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ = !options.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").UrlFunction}\n     */\n    this.tileUrlFunction = options.tileUrlFunction ? options.tileUrlFunction.bind(this) : nullTileUrlFunction;\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type = tileState == TileState.ERROR ? TileEventType.TILELOADERROR :\n        (tileState == TileState.LOADED || tileState == TileState.ABORT) ?\n          TileEventType.TILELOADEND : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string=} key Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileImage\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../reproj/common.js';\nimport {getUid} from '../util.js';\nimport ImageTile from '../ImageTile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport UrlTile from './UrlTile.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Tile cache size. The default depends on the screen size. Will increase if too small.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./State.js\").default} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number} [zDirection=0] Indicate which resolution should be used\n * by a renderer if the view resolution does not match any resolution of the tile source.\n * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n * will be used. If -1, the nearest higher resolution will be used.\n */\n\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction ?\n        options.tileLoadFunction : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n        options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass = options.tileClass !== undefined ?\n      options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  canExpireCache() {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.canExpireCache();\n    }\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    } else {\n      for (const key in this.tileCacheForProjection) {\n        if (this.tileCacheForProjection[key].canExpireCache()) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  expireCache(projection, usedTiles) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      super.expireCache(projection, usedTiles);\n      return;\n    }\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(this.tileCache == usedTileCache ? usedTiles : {});\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getGutterForProjection(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return 0;\n    } else {\n      return this.getGutter();\n    }\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getOpaque(projection) {\n    if (ENABLE_RASTER_REPROJECTION &&\n        this.getProjection() && projection && !equivalent(this.getProjection(), projection)) {\n      return false;\n    } else {\n      return super.getOpaque(projection);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileGridForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileGridForProjection(projection);\n    }\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = getTileGridForProjection(projection);\n      }\n      return (\n        /** @type {!import(\"../tilegrid/TileGrid.js\").default} */ (this.tileGridForProjection[projKey])\n      );\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTileCacheForProjection(projection) {\n    if (!ENABLE_RASTER_REPROJECTION) {\n      return super.getTileCacheForProjection(projection);\n    }\n    const thisProj = this.getProjection(); if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    } else {\n      const projKey = getUid(projection);\n      if (!(projKey in this.tileCacheForProjection)) {\n        this.tileCacheForProjection[projKey] = new TileCache(this.tileCache.highWaterMark);\n      }\n      return this.tileCacheForProjection[projKey];\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord, projection);\n    const tileUrl = urlTileCoord ?\n      this.tileUrlFunction(urlTileCoord, pixelRatio, projection) : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions);\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = /** @type {!import(\"../proj/Projection.js\").default} */ (this.getProjection());\n    if (!ENABLE_RASTER_REPROJECTION ||\n        !sourceProjection || !projection || equivalent(sourceProjection, projection)) {\n      return this.getTileInternal(z, x, y, pixelRatio, sourceProjection || projection);\n    } else {\n      const cache = this.getTileCacheForProjection(projection);\n      const tileCoord = [z, x, y];\n      let tile;\n      const tileCoordKey = getKey(tileCoord);\n      if (cache.containsKey(tileCoordKey)) {\n        tile = /** @type {!import(\"../Tile.js\").default} */ (cache.get(tileCoordKey));\n      }\n      const key = this.getKey();\n      if (tile && tile.key == key) {\n        return tile;\n      } else {\n        const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n        const targetTileGrid = this.getTileGridForProjection(projection);\n        const wrappedTileCoord =\n            this.getTileCoordForTileUrlFunction(tileCoord, projection);\n        const newTile = new ReprojTile(\n          sourceProjection, sourceTileGrid,\n          projection, targetTileGrid,\n          tileCoord, wrappedTileCoord, this.getTilePixelRatio(pixelRatio),\n          this.getGutter(),\n          function(z, x, y, pixelRatio) {\n            return this.getTileInternal(z, x, y, pixelRatio, sourceProjection);\n          }.bind(this), this.reprojectionErrorThreshold_,\n          this.renderReprojectionEdges_);\n        newTile.key = key;\n\n        if (tile) {\n          newTile.interimTile = tile;\n          newTile.refreshInterimChain();\n          cache.replace(tileCoordKey, newTile);\n        } else {\n          cache.set(tileCoordKey, newTile);\n        }\n        return newTile;\n      }\n    }\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (!ENABLE_RASTER_REPROJECTION ||\n        this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    if (ENABLE_RASTER_REPROJECTION) {\n      const proj = getProjection(projection);\n      if (proj) {\n        const projKey = getUid(proj);\n        if (!(projKey in this.tileGridForProjection)) {\n          this.tileGridForProjection[projKey] = tilegrid;\n        }\n      }\n    }\n  }\n}\n\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src = src;\n}\n\nexport default TileImage;\n","/**\n * @module olgm/gm/PanesOverlay\n */\n/**\n * @classdesc\n * @api\n */\nclass PanesOverlay extends ((window.google && window.google.maps && google.maps.OverlayView) || Object) {\n  /**\n   * This overlay doesn't actually do anything, it's only a way to get the map's\n   * panes since Google Maps' API doesn't offer any other way to do so.\n   * @param {google.maps.Map} gmap Google Maps map\n   */\n  constructor(gmap) {\n    super();\n\n    this.setMap(gmap);\n  }\n\n\n  /**\n   * This function is the only reason this class exists. It returns the panes.\n   * @return {google.maps.MapPanes|undefined} array of panes\n   * @api\n   */\n  getMapPanes() {\n    return this.getPanes();\n  }\n\n\n  /**\n   * Override parent function, but do not do anything\n   * @api\n   * @override\n   */\n  onAdd() {\n\n  }\n\n\n  /**\n   * Override parent function, but do not do anything\n   * @api\n   * @override\n   */\n  draw() {\n\n  }\n\n\n  /**\n   * Override parent function, but do not do anything\n   * @api\n   * @override\n   */\n  onRemove() {\n\n  }\n}\nexport default PanesOverlay;\n","/**\n * @module olgm/herald/TileSource\n */\nimport {getIntersection, getSize} from 'ol/extent.js';\nimport {get} from 'ol/proj.js';\nimport TileImage from 'ol/source/TileImage.js';\nimport PanesOverlay from '../gm/PanesOverlay.js';\nimport SourceHerald from './Source.js';\nimport Listener from '../listener/Listener.js';\nimport PropertyListener from '../listener/PropertyListener.js';\n\n/**\n * @typedef {Object} LayerCache\n * @property {Node|null} element\n * @property {google.maps.ImageMapType} googleTileLayer\n * @property {boolean} ignoreNextOpacityChange\n * @property {module:ol/layer/Tile} layer\n * @property {Array<module:olgm/AbstractListener~AbstractListener>} listeners\n * @property {number} opacity\n * @property {number} zIndex\n */\n\nclass TileSourceHerald extends SourceHerald {\n  /**\n   * Listen to a tiled layer\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * @type {Array<module:olgm/herald/TileSource~LayerCache>}\n     * @private\n     */\n    this.cache_ = [];\n\n    /**\n     * @type {Array<module:ol/layer/Tile>}\n     * @private\n     */\n    this.layers_ = [];\n\n    /**\n     * Panes accessor\n     * @type {module:olgm/gm/PanesOverlay}\n     * @private\n     */\n    this.panesOverlay_ = new PanesOverlay(gmap);\n\n    /**\n     * We can only access the mapPane pane after google maps is done loading.\n     * Accessing that pane means we can reorder the div for each tile layer\n     * Google Maps is rendering.\n     */\n    google.maps.event.addListenerOnce(gmap, 'idle', () => {\n      this.orderLayers();\n    });\n  }\n\n  /**\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @override\n   */\n  watchLayer(layer) {\n    const tileLayer = /** @type {module:ol/layer/Tile} */ (layer);\n\n    // Source must be TileImage\n    const source = tileLayer.getSource();\n    if (!(source instanceof TileImage)) {\n      return;\n    }\n\n    // If olgmWatch property is false then render using OL instead\n    if (tileLayer.get('olgmWatch') === false) {\n      return;\n    }\n\n    this.layers_.push(tileLayer);\n\n    // opacity\n    const opacity = tileLayer.getOpacity();\n\n    const cacheItem = /** {@type module:olgm/herald/TileSource~LayerCache} */ ({\n      element: null,\n      ignoreNextOpacityChange: true,\n      layer: tileLayer,\n      listeners: [],\n      opacity: opacity,\n      zIndex: 0\n    });\n\n    const tileGrid = source.getTileGrid();\n    let tileSize = 256;\n\n    if (tileGrid) {\n      const tileGridTileSize = tileGrid.getTileSize(0);\n      if (typeof tileGridTileSize === 'number') {\n        tileSize = tileGridTileSize;\n      }\n    }\n\n    const googleTileSize = new google.maps.Size(tileSize, tileSize);\n\n    const options = {\n      getTileUrl: this.googleGetTileUrlFunction_.bind(this, tileLayer),\n      tileSize: googleTileSize,\n      isPng: true,\n      opacity: opacity\n    };\n\n    // Create the tiled layer on the google layer\n    const googleTileLayer = new google.maps.ImageMapType(options);\n    if (tileLayer.getVisible()) {\n      this.gmap.overlayMapTypes.push(googleTileLayer);\n    }\n    cacheItem.googleTileLayer = googleTileLayer;\n\n    cacheItem.listeners.push(\n      // Hide the google layer when the ol3 layer is invisible\n      new Listener(\n        tileLayer.on('change:visible', () =>\n          this.handleVisibleChange_(cacheItem)\n        )\n      ),\n      new Listener(\n        tileLayer.on('change:opacity', () =>\n          this.handleOpacityChange_(cacheItem)\n        )\n      ),\n      new PropertyListener(tileLayer, null, 'source', (source, oldSource) => {\n        if (oldSource) {\n          this.handleSourceChange_(cacheItem);\n        }\n        return new Listener(\n          source.on('change', () => this.handleSourceChange_(cacheItem))\n        );\n      })\n    );\n\n    // Activate the cache item\n    this.activateCacheItem_(cacheItem);\n    this.cache_.push(cacheItem);\n  }\n\n  /**\n   * This function is used by google maps to get the url for a tile at the given\n   * coordinates and zoom level\n   * @param {module:ol/layer/Tile} tileLayer layer to query\n   * @param {google.maps.Point} coords coordinates of the tile\n   * @param {number} zoom current zoom level\n   * @return {string|undefined} url to the tile\n   * @private\n   */\n  googleGetTileUrlFunction_(tileLayer, coords, zoom) {\n    const source = /** @type {ol.source.TileImage} */ (tileLayer.getSource());\n\n    // Check if we're within the accepted resolutions\n    const minResolution = tileLayer.getMinResolution();\n    const maxResolution = tileLayer.getMaxResolution();\n    const currentResolution = this.ol3map.getView().getResolution();\n    if (\n      currentResolution < minResolution ||\n      currentResolution > maxResolution\n    ) {\n      return;\n    }\n\n    const proj = get('EPSG:3857');\n\n    // Convert the coords from google maps to ol3 tile format\n    const ol3Coords = [zoom, coords.x, coords.y];\n\n    // Save the extent for this layer, default to the one for the projection\n    let extent = tileLayer.getExtent();\n    if (!extent) {\n      extent = proj.getExtent();\n    }\n\n    /* Perform some verifications only possible with a TileGrid:\n     * 1. If the origin for the layer isn't in the upper left corner, we need\n     *    to move the tiles there. Google Maps doesn't support custom origins.\n     * 2. Google Maps checks for tiles which might not exist, for example tiles\n     *    above the world map. We need to filter out these to avoid invalid\n     *    requests.\n     */\n    const tileGrid = source.getTileGrid();\n    if (tileGrid) {\n      /* Google maps always draws the tiles from the top left corner. We need to\n       * adjust for that if our origin isn't at that location\n       * The default origin is at the top left corner, and the default tile size\n       * is 256.\n       */\n      const defaultOrigin = [-20037508.342789244, 20037508.342789244];\n      const defaultTileSize = 256;\n      const origin = tileGrid.getOrigin(0);\n\n      // Skip this step if the origin is at the top left corner\n      if (origin[0] != defaultOrigin[0] || origin[1] != defaultOrigin[1]) {\n        /* Tiles have a size equal to 2^n. Find the difference between the n for\n         * the current tileGrid versus the n for the expected tileGrid.\n         */\n        const tileGridTileSize = /** @type {number} */ (tileGrid.getTileSize(\n          zoom\n        ));\n\n        const defaultTileSizeExponent = Math.log2(defaultTileSize);\n        const tileSizeExponent = Math.log2(tileGridTileSize);\n        const exponentDifference = tileSizeExponent - defaultTileSizeExponent;\n\n        /* Calculate the offset to add to the tile coordinates, assuming the\n         * origin to fix is equal to [0, 0]. TODO: Support different origins\n         */\n        const nbTilesSide = Math.pow(2, zoom - exponentDifference);\n        const offset = nbTilesSide / 2;\n\n        // Add the offset. Move the tiles left (x--) and up (y++)\n        ol3Coords[1] = ol3Coords[1] - offset;\n        ol3Coords[2] = ol3Coords[2] + offset;\n      }\n\n      /* Get the intersection area between the wanted tile's extent and the\n       * layer's extent. If that intersection has an area smaller than 1, it\n       * means it's not part of the map. We do this because a tile directly\n       * above the map but not inside it still counts as an intersection, but\n       * with a size of 0.\n       */\n      const intersection = getIntersection(\n        extent,\n        tileGrid.getTileCoordExtent(ol3Coords)\n      );\n      const intersectionSize = getSize(intersection);\n      const intersectionArea = intersectionSize[0] * intersectionSize[1];\n\n      if (intersectionArea < 1 || intersectionArea == Infinity) {\n        return;\n      }\n    }\n\n    let result = source.tileUrlFunction(ol3Coords, 1, proj);\n\n    // TileJSON sources don't have their url function right away, try again\n    if (result === undefined) {\n      const getTileUrlFunction = source.getTileUrlFunction();\n      result = getTileUrlFunction(ol3Coords, 1, proj);\n    }\n\n    return result;\n  }\n\n  /**\n   * Unwatch the tile layer\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @override\n   */\n  unwatchLayer(layer) {\n    const tileLayer = /** @type {module:ol/layer/Tile} */ (layer);\n\n    const index = this.layers_.indexOf(tileLayer);\n    if (index !== -1) {\n      this.layers_.splice(index, 1);\n\n      const cacheItem = this.cache_[index];\n      cacheItem.listeners.forEach((listener) => listener.unlisten());\n\n      // Remove the layer from google maps\n      const googleTileLayer = cacheItem.googleTileLayer;\n      const googleMapsLayers = this.gmap.overlayMapTypes;\n\n      // Get the position of the google layer so we can remove it\n      const layerIndex = googleMapsLayers.getArray().indexOf(googleTileLayer);\n      if (layerIndex != -1) {\n        googleMapsLayers.removeAt(layerIndex);\n      }\n\n      // opacity\n      tileLayer.setOpacity(cacheItem.opacity);\n\n      this.cache_.splice(index, 1);\n    }\n  }\n\n  /**\n   * Activate all cache items\n   * @api\n   * @override\n   */\n  activate() {\n    super.activate();\n    this.cache_.forEach(this.activateCacheItem_, this);\n  }\n\n  /**\n   * Activates an tile layer cache item.\n   * @param {module:olgm/herald/TileSource~LayerCache} cacheItem cacheItem to activate\n   * @private\n   */\n  activateCacheItem_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n    if (visible && this.googleMapsIsActive) {\n      cacheItem.ignoreNextOpacityChange = true;\n      cacheItem.layer.setOpacity(0);\n    }\n  }\n\n  /**\n   * Deactivate all cache items\n   * @api\n   * @override\n   */\n  deactivate() {\n    super.deactivate();\n    this.cache_.forEach(this.deactivateCacheItem_, this);\n  }\n\n  /**\n   * Deactivates a Tile layer cache item.\n   * @param {module:olgm/herald/TileSource~LayerCache} cacheItem cacheItem to deactivate\n   * @private\n   */\n  deactivateCacheItem_(cacheItem) {\n    cacheItem.ignoreNextOpacityChange = true;\n    cacheItem.layer.setOpacity(cacheItem.opacity);\n  }\n\n  /**\n   * This function finds the div associated to each tile layer we watch, then\n   * it assigns them the correct z-index\n   * @api\n   */\n  orderLayers() {\n    const panes = this.panesOverlay_.getMapPanes();\n\n    if (!panes) {\n      return;\n    }\n    const mapPane = panes.mapPane;\n    const overlayMapTypes = this.gmap.overlayMapTypes;\n\n    // For each tile layer we watch\n    for (let i = 0; i < this.cache_.length; i++) {\n      // Calculate the wanted index\n      const cacheItem = this.cache_[i];\n      const layer = cacheItem.layer;\n      cacheItem.zIndex = this.findIndex(layer);\n\n      // Get the google overlay layer, and its index\n      const googleTileLayer = cacheItem.googleTileLayer;\n      const overlayIndex = overlayMapTypes.getArray().indexOf(googleTileLayer);\n\n      // If the layer is currently rendered by Google Maps\n      if (overlayIndex != -1) {\n        /**\n         * We remove it, look at the divs in the mapPane, then add it back and\n         * compare. This allows us to find which div is associated to that layer.\n         */\n        overlayMapTypes.removeAt(overlayIndex);\n        const childNodes = Array.prototype.slice.call(mapPane.childNodes);\n        overlayMapTypes.push(googleTileLayer);\n        const childNodesWithLayer = mapPane.childNodes;\n\n        /**\n         * Find which layer is missing from the list we created after removing\n         * the appropriate overlay\n         */\n        for (let j = 0; j < childNodesWithLayer.length; j++) {\n          if (childNodes.indexOf(childNodesWithLayer[j]) == -1) {\n            // Set a timeout because otherwise it won't work\n            cacheItem.element = childNodesWithLayer[j];\n            setTimeout(function() {\n              this.element.style.zIndex = this.zIndex;\n            }.bind(cacheItem), 0);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Handle the opacity being changed on the tile layer\n   * @param {module:olgm/herald/TileSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleOpacityChange_(cacheItem) {\n    const layer = cacheItem.layer;\n    const newOpacity = cacheItem.layer.getOpacity();\n\n    /**\n     * Each time the opacity is set on the ol3 layer, we need to set it back to\n     * opacity 0, and apply the opacity to the layer rendered by Google Maps\n     * instead. However, setting the opacity back to 0 generates another opacity\n     * change event, so we need to ignore it\n     */\n    if (cacheItem.ignoreNextOpacityChange) {\n      cacheItem.ignoreNextOpacityChange = false;\n    } else {\n      cacheItem.googleTileLayer.setOpacity(newOpacity);\n      cacheItem.opacity = newOpacity;\n\n      const visible = layer.getVisible();\n      if (visible && this.googleMapsIsActive) {\n        cacheItem.ignoreNextOpacityChange = true;\n        cacheItem.layer.setOpacity(0);\n      }\n    }\n  }\n\n  /**\n   * Deal with the google tile layer when we enable or disable the OL3 tile layer\n   * @param {module:olgm/herald/TileSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleVisibleChange_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n\n    const googleTileLayer = cacheItem.googleTileLayer;\n    const googleMapsLayers = this.gmap.overlayMapTypes;\n\n    // Get the position of the google layer so we can remove it\n    const layerIndex = googleMapsLayers.getArray().indexOf(googleTileLayer);\n\n    if (visible) {\n      // Add the google tile layer only if it's not there already\n      if (layerIndex == -1) {\n        googleMapsLayers.push(googleTileLayer);\n      }\n      this.activateCacheItem_(cacheItem);\n    } else {\n      // Remove the google tile layer from the map if it hasn't been done already\n      if (layerIndex != -1) {\n        googleMapsLayers.removeAt(layerIndex);\n      }\n      this.deactivateCacheItem_(cacheItem);\n    }\n  }\n\n  /**\n   * Called the source of layer fires the 'change' event. Reload the google tile\n   * layer.\n   *\n   * @param {module:olgm/herald/TileSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleSourceChange_(cacheItem) {\n    // Note: The 'changed' method of google.maps.MVCObject requires a param,\n    //       but it's not acutally used here.  It's just to satisfy the compiler.\n    cacheItem.googleTileLayer.changed('foo');\n  }\n}\n\n\nexport default TileSourceHerald;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(flatCoordinates, offset1, offset2, stride, x, y, closestPoint) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i], t);\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(\n      flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(flatCoordinates, offset, endss, stride, max) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(\n      flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(flatCoordinates, offset, end,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x, y, flatCoordinates[offset], flatCoordinates[offset + 1]);\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates, index - stride, index, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index += stride * Math.max(\n        ((Math.sqrt(squaredDistance) -\n            Math.sqrt(minSquaredDistance)) / maxDelta) | 0, 1);\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates, end - stride, offset, stride, x, y, tmpPoint);\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(flatCoordinates, offset, ends,\n  stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates, offset, end, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>=} opt_tmpPoint Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(flatCoordinates, offset,\n  endss, stride, maxDelta, isRing, x, y, closestPoint, minSquaredDistance,\n  opt_tmpPoint) {\n  const tmpPoint = opt_tmpPoint ? opt_tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates, offset, ends, stride,\n      maxDelta, isRing, x, y, closestPoint, minSquaredDistance, tmpPoint);\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(flatCoordinates, offset, coordinates, stride) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>=} opt_ends Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(flatCoordinates, offset, coordinatess, stride, opt_ends) {\n  const ends = opt_ends ? opt_ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates, offset, coordinatess[j], stride);\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>=} opt_endss Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(flatCoordinates, offset, coordinatesss, stride, opt_endss) {\n  const endss = opt_endss ? opt_endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates, offset, coordinatesss[j], stride, endss[i]);\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(flatCoordinates, offset, end, stride, fraction, opt_dest) {\n  let pointX = NaN;\n  let pointY = NaN;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    pointX = flatCoordinates[offset];\n    pointY = flatCoordinates[offset + 1];\n  } else if (n == 2) {\n    pointX = (1 - fraction) * flatCoordinates[offset] +\n        fraction * flatCoordinates[offset + stride];\n    pointY = (1 - fraction) * flatCoordinates[offset + 1] +\n        fraction * flatCoordinates[offset + stride + 1];\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      const t = (target - cumulativeLengths[-index - 2]) /\n          (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      const o = offset + (-index - 2) * stride;\n      pointX = lerp(\n        flatCoordinates[o], flatCoordinates[o + stride], t);\n      pointY = lerp(\n        flatCoordinates[o + 1], flatCoordinates[o + stride + 1], t);\n    } else {\n      pointX = flatCoordinates[offset + index * stride];\n      pointY = flatCoordinates[offset + index * stride + 1];\n    }\n  }\n  if (opt_dest) {\n    opt_dest[0] = pointX;\n    opt_dest[1] = pointY;\n    return opt_dest;\n  } else {\n    return [pointX, pointY];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringCoordinateAtM(flatCoordinates, offset, end, stride, m, extrapolate) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  } else if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(lerp(flatCoordinates[(lo - 1) * stride + i],\n      flatCoordinates[lo * stride + i], t));\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates, offset, ends, stride, m, extrapolate, interpolate) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates, offset, ends[ends.length - 1], stride, m, extrapolate);\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    } else {\n      return null;\n    }\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    } else if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates, offset, end, stride, m, false);\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(flatCoordinates, offset, end, stride, extent) {\n  const outside = forEachCorner(extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function(coordinate) {\n      return !linearRingContainsXY(flatCoordinates, offset, end, stride, coordinate[0], coordinate[1]);\n    });\n  return !outside;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(flatCoordinates, offset, end, stride, x, y) {\n  // http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && ((x2 - x1) * (y - y1)) - ((x - x1) * (y2 - y1)) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)) {\n      return false;\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(flatCoordinates, offset, endss, stride, x, y) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  const point1 = [flatCoordinates[offset], flatCoordinates[offset + 1]];\n  const point2 = [];\n  let ret;\n  for (; (offset + stride) < end; offset += stride) {\n    point2[0] = flatCoordinates[offset + stride];\n    point2[1] = flatCoordinates[offset + stride + 1];\n    ret = callback(point1, point2);\n    if (ret) {\n      return ret;\n    }\n    point1[0] = point2[0];\n    point1[1] = point2[1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {containsExtent, createEmpty, extendFlatCoordinates, intersects, intersectsSegment} from '../../extent.js';\nimport {linearRingContainsXY, linearRingContainsExtent} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(flatCoordinates, offset, end, stride, extent) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] &&\n      coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] &&\n      coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(flatCoordinates, offset, end, stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function(point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    });\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(flatCoordinates, offset, ends, stride, extent) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (intersectsLineString(\n      flatCoordinates, offset, ends[i], stride, extent)) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(flatCoordinates, offset, end, stride, extent) {\n  if (intersectsLineString(\n    flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[0], extent[3])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[1])) {\n    return true;\n  }\n  if (linearRingContainsXY(flatCoordinates, offset, end, stride, extent[2], extent[3])) {\n    return true;\n  }\n  return false;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent) {\n  if (!intersectsLinearRing(\n    flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (linearRingContainsExtent(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n      if (!intersectsLineString(flatCoordinates, ends[i - 1], ends[i], stride, extent)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(flatCoordinates, offset, endss, stride, extent) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (intersectsLinearRingArray(\n      flatCoordinates, offset, ends, stride, extent)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = coordinate.slice();\n    } else {\n      extend(this.flatCoordinates, coordinate);\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LineString(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, callback);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate) {\n    if (this.layout != GeometryLayout.XYM &&\n        this.layout != GeometryLayout.XYZM) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    return lineStringCoordinateAtM(this.flatCoordinates, 0,\n      this.flatCoordinates.length, this.stride, m, extrapolate);\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate=} opt_dest Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, opt_dest) {\n    return interpolatePoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      fraction, opt_dest);\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(0.5, this.flatMidpoint_);\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return this.flatMidpoint_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LineString(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      extent);\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LineString;\n","/**\n * @module ol/geom/Point\n */\nimport {createOrUpdateFromCoordinate, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    this.setCoordinates(coordinates, opt_layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    return point;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(x, y, flatCoordinates[0], flatCoordinates[1]);\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return !this.flatCoordinates ? [] : this.flatCoordinates.slice();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default Point;\n","/**\n * @module ol/geom/flat/area\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (opt_layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(maxSquaredDelta(\n        this.flatCoordinates, 0, this.flatCoordinates.length, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride,\n      squaredTolerance, simplifiedFlatCoordinates, 0);\n    return new LinearRing(simplifiedFlatCoordinates, GeometryLayout.XY);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.LINEAR_RING;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {numberSafeCompareFunction} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>=} opt_dest Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(flatCoordinates, offset,\n  ends, stride, flatCenters, flatCentersOffset, opt_dest) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = (y - y1) / (y2 - y1) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(numberSafeCompareFunction);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (opt_dest) {\n    opt_dest.push(pointX, y, maxSegmentLength);\n    return opt_dest;\n  } else {\n    return [pointX, y, maxSegmentLength];\n  }\n}\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(flatCoordinates, offset, endss, stride, flatCenters) {\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(flatCoordinates,\n      offset, ends, stride, flatCenters, 2 * i, interiorPoints);\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // http://tinyurl.com/clockwise-method\n  // https://github.com/OSGeo/gdal/blob/trunk/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge > 0;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(\n      flatCoordinates, offset, ends, stride, opt_right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(flatCoordinates, offset, ends, stride, opt_right) {\n  const right = opt_right !== undefined ? opt_right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates, offset, end, stride);\n    const reverse = i === 0 ?\n      (right && isClockwise) || (!right && !isClockwise) :\n      (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `opt_right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean=} opt_right Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(flatCoordinates, offset, endss, stride, opt_right) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates, offset, endss[i], stride, opt_right);\n  }\n  return offset;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {modulo} from '../math.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Polygon(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(\n        flatCoordinates, 0, this.ends_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(\n      flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride,\n        flatCenter, 0);\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoint_;\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), GeometryLayout.XYM);\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(flatCoordinates.slice(offset, end), layout);\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(\n        flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRings(\n              this.orientedFlatCoordinates_, 0, this.ends_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new Polygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(), 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default Polygon;\n\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices.\n * @param {number=} opt_n Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number=} opt_sphereRadius Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, opt_n, opt_sphereRadius) {\n  const n = opt_n ? opt_n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(flatCoordinates, sphereOffset(center, radius, 2 * Math.PI * i / n, opt_sphereRadius));\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates =\n      [minX, minY, minX, maxY, maxX, maxY, maxX, minY, minX, minY];\n  return new Polygon(flatCoordinates, GeometryLayout.XY, [flatCoordinates.length]);\n}\n\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number=} opt_sides Number of sides of the polygon. Default is 32.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, opt_sides, opt_angle) {\n  const sides = opt_sides ? opt_sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), opt_angle);\n  return polygon;\n}\n\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number=} opt_angle Start angle for the first vertex of the polygon in\n *     radians. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, opt_angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = opt_angle ? opt_angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI / sides);\n    flatCoordinates[offset] = center[0] + (radius * Math.cos(angle));\n    flatCoordinates[offset + 1] = center[1] + (radius * Math.sin(angle));\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestArrayPoint, arrayMaxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {interpolatePoint, lineStringsCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `opt_layout` and `opt_ends` are also accepted.)\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<number>=} opt_ends Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, opt_layout, opt_ends) {\n\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(/** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (coordinates), opt_layout);\n    } else if (opt_layout !== undefined && opt_ends) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.ends_ = opt_ends;\n    } else {\n      let layout = this.getLayout();\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        if (i === 0) {\n          layout = lineString.getLayout();\n        }\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = lineString.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new MultiLineString(this.flatCoordinates.slice(), this.layout, this.ends_.slice());\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(arrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.ends_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates, 0, this.ends_, this.stride,\n      this.maxDelta_, false, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `opt_extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `opt_extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `opt_interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `opt_interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `opt_interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean=} opt_extrapolate Extrapolate. Default is `false`.\n   * @param {boolean=} opt_interpolate Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, opt_extrapolate, opt_interpolate) {\n    if ((this.layout != GeometryLayout.XYM &&\n         this.layout != GeometryLayout.XYZM) ||\n        this.flatCoordinates.length === 0) {\n      return null;\n    }\n    const extrapolate = opt_extrapolate !== undefined ? opt_extrapolate : false;\n    const interpolate = opt_interpolate !== undefined ? opt_interpolate : false;\n    return lineStringsCoordinateAtM(this.flatCoordinates, 0,\n      this.ends_, this.stride, m, extrapolate, interpolate);\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(this.flatCoordinates.slice(\n      index === 0 ? 0 : this.ends_[index - 1], this.ends_[index]), this.layout);\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(flatCoordinates.slice(offset, end), layout);\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates, offset, end, stride, 0.5);\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, squaredTolerance,\n      simplifiedFlatCoordinates, 0, simplifiedEnds);\n    return new MultiLineString(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEnds);\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_LINE_STRING;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates, 0, this.ends_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.ends_);\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` are also accepted.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(coordinates, opt_layout) {\n    super();\n    if (opt_layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n    } else {\n      this.setCoordinates(/** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (coordinates), opt_layout);\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = point.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, point.getFlatCoordinates());\n    }\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(this.flatCoordinates.slice(), this.layout);\n    return multiPoint;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x, y, flatCoordinates[i], flatCoordinates[i + 1]);\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates, 0, this.flatCoordinates.length, this.stride);\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = !this.flatCoordinates ? 0 : this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(this.flatCoordinates.slice(\n      index * this.stride, (index + 1) * this.stride), this.layout);\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POINT;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates, 0, coordinates, this.stride);\n    this.changed();\n  }\n}\n\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport GeometryLayout from './GeometryLayout.js';\nimport GeometryType from './GeometryType.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {assignClosestMultiArrayPoint, multiArrayMaxSquaredDelta} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {linearRingssAreOriented, orientLinearRingsArray} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `opt_layout` and `opt_endss` are also accepted.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @param {Array<Array<number>>=} opt_endss Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, opt_layout, opt_endss) {\n\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!opt_endss && !Array.isArray(coordinates[0])) {\n      let layout = this.getLayout();\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      const flatCoordinates = [];\n      const endss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        if (i === 0) {\n          layout = polygon.getLayout();\n        }\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        endss.push(ends);\n      }\n      opt_layout = layout;\n      coordinates = flatCoordinates;\n      opt_endss = endss;\n    }\n    if (opt_layout !== undefined && opt_endss) {\n      this.setFlatCoordinates(opt_layout, /** @type {Array<number>} */ (coordinates));\n      this.endss_ = opt_endss;\n    } else {\n      this.setCoordinates(/** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (coordinates),\n        opt_layout);\n    }\n\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    return new MultiPolygon(\n      this.flatCoordinates.slice(), this.layout, newEndss);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(multiArrayMaxSquaredDelta(\n        this.flatCoordinates, 0, this.endss_, this.stride, 0));\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n      this.maxDelta_, true, x, y, closestPoint, minSquaredDistance);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, x, y);\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride);\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean=} opt_right Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @override\n   * @api\n   */\n  getCoordinates(opt_right) {\n    let flatCoordinates;\n    if (opt_right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates, 0, this.endss_, this.stride, opt_right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates, 0, this.endss_, this.stride);\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates, 0, this.endss_, this.stride);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride,\n        flatCenters);\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), GeometryLayout.XYM);\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingssAreOriented(\n        flatCoordinates, 0, this.endss_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length =\n            orientLinearRingsArray(\n              this.orientedFlatCoordinates_, 0, this.endss_, this.stride);\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return this.orientedFlatCoordinates_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    const simplifiedFlatCoordinates = [];\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates, 0, this.endss_, this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates, 0, simplifiedEndss);\n    return new MultiPolygon(simplifiedFlatCoordinates, GeometryLayout.XY, simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(this.flatCoordinates.slice(offset, end), this.layout, ends);\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(flatCoordinates.slice(offset, end), layout, ends);\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.MULTI_POLYGON;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(), 0, this.endss_, this.stride, extent);\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {GeometryLayout=} opt_layout Layout.\n   * @override\n   * @api\n   */\n  setCoordinates(coordinates, opt_layout) {\n    this.setLayout(opt_layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates, 0, coordinates, this.stride, this.endss_);\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length = lastEnds.length === 0 ?\n        0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(flatCoordinates, offset, ends[0], stride);\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/Feature\n */\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\nimport EventType from './events/EventType.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature';\n * import Polygon from 'ol/geom/Polygon';\n * import Point from 'ol/geom/Point';\n *\n * var feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon'\n * });\n *\n * // get the polygon geometry\n * var poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * var point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} Geometry\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|Object<string, *>=} opt_geometryOrProperties\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(opt_geometryOrProperties) {\n\n    super();\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n\n    if (opt_geometryOrProperties) {\n      if (typeof /** @type {?} */ (opt_geometryOrProperties).getSimplifiedGeometry === 'function') {\n        const geometry = /** @type {Geometry} */ (opt_geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = opt_geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature} The clone.\n   * @api\n   */\n  clone() {\n    const clone = new Feature(this.getProperties());\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(geometry.clone());\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return (\n      /** @type {Geometry|undefined} */ (this.get(this.geometryName_))\n    );\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(geometry,\n        EventType.CHANGE, this.handleGeometryChange_, this);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature.  This can be a single style object, an array\n   * of styles, or a function that takes a resolution and returns an array of\n   * styles. If it is `null` the feature has no style (a `null` style).\n   * @param {import(\"./style/Style.js\").StyleLike} style Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addEventListener(getChangeEventType(this.geometryName_), this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  } else {\n    /**\n     * @type {Array<import(\"./style/Style.js\").default>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(typeof /** @type {?} */ (obj).getZIndex === 'function',\n        41); // Expected an `import(\"./style/Style.js\").Style` or an array of `import(\"./style/Style.js\").Style`\n      const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n      styles = [style];\n    }\n    return function() {\n      return styles;\n    };\n  }\n}\nexport default Feature;\n","/**\n * @module olgm/util\n */\nimport Feature from 'ol/Feature.js';\nimport {getCenter} from 'ol/extent.js';\nimport Point from 'ol/geom/Point.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport Vector from 'ol/layer/Vector.js';\nimport Style from 'ol/style/Style.js';\n\n/**\n * @type {!Array<number>}\n */\nexport const RESOLUTIONS = [\n  156543.03390625,\n  78271.516953125,\n  39135.7584765625,\n  19567.87923828125,\n  9783.939619140625,\n  4891.9698095703125,\n  2445.9849047851562,\n  1222.9924523925781,\n  611.4962261962891,\n  305.74811309814453,\n  152.87405654907226,\n  76.43702827453613,\n  38.218514137268066,\n  19.109257068634033,\n  9.554628534317017,\n  4.777314267158508,\n  2.388657133579254,\n  1.194328566789627,\n  0.5971642833948135,\n  0.298582141697,\n  0.14929107084,\n  0.07464553542,\n  0.03732276771\n];\n\n\n/**\n * @param {module:ol/geom/Geometry} geometry the geometry to get the center of\n * @return {module:ol/coordinate~Coordinate} the center coordinates\n */\nexport function getCenterOf(geometry) {\n\n  let center = null;\n\n  if (geometry instanceof Point) {\n    center = geometry.getCoordinates();\n  } else if (geometry instanceof Polygon) {\n    center = geometry.getInteriorPoint().getCoordinates();\n  } else {\n    center = getCenter(geometry.getExtent());\n  }\n\n  return center;\n}\n\n\n/**\n * @param {module:ol/color~Color|module:ol/color~ColorLike} color the color\n * to parse\n * @return {string} the parsed color\n */\nexport function getColor(color) {\n\n  let out = '';\n  let rgba = null;\n\n  if (typeof color === 'string') {\n    // is string\n    if (stringStartsWith(color, 'rgba')) {\n      rgba = parseRGBA(color);\n    } else {\n      out = color;\n    }\n  } else if (Array.isArray(color)) {\n    rgba = color;\n  }\n\n  if (rgba !== null) {\n    out = ['rgb(', rgba[0], ',', rgba[1], ',', rgba[2], ')'].join('');\n  }\n\n  return out;\n}\n\n\n/**\n * @param {module:ol/color~Color|module:ol/color~ColorLike} color the color\n * to check\n * @return {?number} the color's opacity\n */\nexport function getColorOpacity(color) {\n\n  let opacity = null;\n  let rgba = null;\n\n  if (typeof color === 'string') {\n    // is string\n    if (stringStartsWith(color, 'rgba')) {\n      rgba = parseRGBA(color);\n    }\n  } else if (Array.isArray(color)) {\n    rgba = color;\n  }\n\n  if (rgba && rgba[3] !== undefined) {\n    opacity = +rgba[3];\n  }\n\n  return opacity;\n}\n\n\n/**\n * Get the style from the specified object.\n * @param {module:ol/style/Style|module:ol/style/Style~StyleFunction|module:ol/layer/Vector|module:ol/Feature}\n object object from which we get the style\n * @return {?module:ol/style/Style} the style of the object\n */\nexport function getStyleOf(object) {\n\n  let style = null;\n\n  if (object instanceof Style) {\n    style = object;\n  } else if (object instanceof Vector ||\n             object instanceof Feature) {\n    style = object.getStyle();\n    if (style && style instanceof Function) {\n      style = style()[0]; // todo - support multiple styles ?\n    }\n  } else if (object instanceof Function) {\n    style = object()[0]; // todo - support multiple styles ?\n  }\n\n  return style;\n}\n\n\n/**\n * @param {number} resolution the resolution to get the zoom from\n * @param {number} minZoom the minimum zoom value (normally 0)\n * @return {number} the zoom from the resolution, which can be fractional\n */\nexport function getZoomFromResolution(resolution, minZoom) {\n  minZoom = minZoom || 0;\n  return minZoom + Math.log(RESOLUTIONS[0] / resolution) / Math.log(2);\n}\n\n\n/**\n * Source: http://stackoverflow.com/questions/7543818/\\\n *     regex-javascript-to-match-both-rgb-and-rgba\n * @param {string} rgbaString the rgbaString to parse\n * @return {?Array<number>} the rgba color in number array format\n */\nexport function parseRGBA(rgbaString) {\n  let rgba = null;\n  const regex = /^rgba?\\((\\d+),\\s*(\\d+),\\s*(\\d+)(?:,\\s*(\\d+(?:\\.\\d+)?))?\\)$/;\n  const matches = rgbaString.match(regex);\n  if (matches && matches.length) {\n    rgba = [\n      +matches[1],\n      +matches[2],\n      +matches[3],\n      +matches[4]\n    ];\n  }\n  return rgba;\n}\n\n\n/**\n * @param {string} string string to check\n * @param {string} needle string to find\n * @return {boolean} whether or not the needle was found in the string\n */\nexport function stringStartsWith(string, needle) {\n  return (string.indexOf(needle) === 0);\n}\n\n/**\n * OL-Google-Maps version.\n * @type {string}\n */\nexport const VERSION = '0.21.0';\n","/**\n * @module olgm/gm/MapElement\n */\n/**\n * @classdesc\n * This class is a parent for all elements that are drawn manually onto Google\n * Maps. This means drawing elements on a canvas attached to the Google Maps\n * map instead of drawing features on map tiles using their API.\n * This needs to be done for elements that are supported in OpenLayers 3 but\n * not in Google Maps, such as text labels on markers.\n *\n * Some of this code was borrowed from the MapLabel project, whose source code\n * can be found here: https://github.com/googlemaps/js-map-label\n * @api\n */\nclass MapElement extends ((window.google && window.google.maps && google.maps.OverlayView) || Object) {\n  /**\n   * Creates a new Map Element, to be drawn as an OverlayView\n   */\n  constructor() {\n    super();\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.drawn_ = false;\n\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.height_ = 0;\n\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.width_ = 0;\n  }\n\n\n  /**\n   * Draw features to the map (call redraw) and setup canvas if it's the first\n   * time we draw\n   * @api\n   * @override\n   */\n  draw() {\n    if (this.drawn_) {\n      this.redraw_();\n      return;\n    }\n\n    const canvas = this.canvas_;\n    if (!canvas) {\n      // onAdd has not been called yet.\n      return;\n    }\n\n    const ctx = canvas.getContext('2d');\n    const height = ctx.canvas.height;\n    const width = ctx.canvas.width;\n    this.width_ = width;\n    this.height_ = height;\n\n    if (!this.redraw_()) {\n      return;\n    }\n\n    this.drawn_ = true;\n  }\n\n\n  /**\n   * Redraw features to the map\n   * @return {boolean} whether or not the function ran successfully\n   * @private\n   */\n  redraw_() {\n    const latLng = /** @type {google.maps.LatLng} */ (this.get('position'));\n    if (!latLng) {\n      return false;\n    }\n\n    const projection = this.getProjection();\n    if (!projection) {\n      // The map projection is not ready yet so do nothing\n      return false;\n    }\n\n    const pos = projection.fromLatLngToDivPixel(latLng);\n    const height = this.height_;\n    const width = this.width_;\n\n    const offsetX = this.get('offsetX') || 0;\n    const offsetY = this.get('offsetY') || 0;\n\n    const style = this.canvas_.style;\n    style['top'] = (pos.y - (height / 2) + offsetY) + 'px';\n    style['left'] = (pos.x - (width / 2) + offsetX) + 'px';\n\n    style['visibility'] = this.getVisible_();\n\n    return true;\n  }\n\n\n  /**\n   * Get the visibility of the element.\n   * @private\n   * @return {string} blank string if visible, 'hidden' if invisible.\n   */\n  getVisible_() {\n    const minZoom = /** @type {number} */ (this.get('minZoom'));\n    const maxZoom = /** @type {number} */ (this.get('maxZoom'));\n\n    if (minZoom === undefined && maxZoom === undefined) {\n      return '';\n    }\n\n    const map = this.getMap();\n    if (!map) {\n      return '';\n    }\n\n    const mapZoom = map.getZoom();\n    if (mapZoom < minZoom || mapZoom > maxZoom) {\n      return 'hidden';\n    }\n    return '';\n  }\n\n\n  /**\n   * Delete canvas when removing the element\n   * @api\n   * @override\n   */\n  onRemove() {\n    const canvas = this.canvas_;\n    if (canvas && canvas.parentNode) {\n      canvas.parentNode.removeChild(canvas);\n    }\n  }\n}\nexport default MapElement;\n","/**\n * @module olgm/gm/MapLabel\n */\n/**\n * The following file was borrowed from the MapLabel project, which original\n * source code is available at:\n *\n *     https://github.com/googlemaps/js-map-label\n *\n * Here's a copy of its license:\n *\n * Copyright 2011 Google Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Map Label.\n *\n * @author lukem@google.com (Luke Mahe)\n * @author cbro@google.com (Chris Broadfoot)\n *\n * Integration to OL3-Google-Maps:\n * @author adube@mapgears.com (Alexandre Dubé)\n */\n\nimport MapElement from './MapElement.js';\n\n/**\n * @classdesc\n * @api\n */\nclass MapLabel extends MapElement {\n  /**\n   * Creates a new Map Label\n   * @param {Object<string, *>=} opt_options Optional properties to set.\n   */\n  constructor(opt_options) {\n    super();\n\n    this.set('font', 'normal 10px sans-serif');\n    this.set('textAlign', 'center');\n    this.set('textBaseline', 'middle');\n\n    this.set('zIndex', 1e3);\n\n    this.setValues(opt_options);\n  }\n\n\n  /**\n   * Note: mark as `@api` to make the minimized version include this method.\n   * @param {string} prop property\n   * @api\n   * @override\n   */\n  changed(prop) {\n    switch (prop) {\n      case 'fontColor':\n      case 'fontFamily':\n      case 'fontSize':\n      case 'fontWeight':\n      case 'strokeColor':\n      case 'strokeWeight':\n      case 'text':\n      case 'textAlign':\n      case 'textBaseline':\n        this.drawCanvas_();\n        break;\n      case 'maxZoom':\n      case 'minZoom':\n      case 'offsetX':\n      case 'offsetY':\n      case 'position':\n        this.draw();\n        break;\n      default:\n        break;\n    }\n  }\n\n\n  /**\n   * Draws the label to the canvas 2d context.\n   * @private\n   */\n  drawCanvas_() {\n    const canvas = this.canvas_;\n    if (!canvas) {\n      return;\n    }\n\n    const style = canvas.style;\n\n    const fillStyle = this.get('fontColor');\n    if (!fillStyle) {\n      return;\n    }\n\n    style.zIndex = /** @type {number} */ (this.get('zIndex'));\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.textBaseline = this.get('textBaseline');\n    ctx.strokeStyle = this.get('strokeColor');\n    ctx.fillStyle = fillStyle;\n    ctx.font = this.get('font');\n    ctx.textAlign = this.get('textAlign');\n\n    const text = this.get('text');\n    if (text) {\n      const x = canvas.width / 2;\n      const y = canvas.height / 2;\n\n      const strokeWeight = Number(this.get('strokeWeight'));\n      if (strokeWeight) {\n        ctx.lineWidth = strokeWeight;\n        ctx.strokeText(text, x, y);\n      }\n      this.wrapText(ctx, text, x, y);\n    }\n  }\n\n  /**\n   * Adjust the canvas default size based on the text.\n   * @private\n   */\n  adjustCanvasSize() {\n    const canvas = document.createElement('canvas');\n    canvas.width = canvas.height = 1;\n    const words = this.get('text').split('\\r\\n');\n    const lineHeight = this.measureTextHeight(this.get('font'));\n\n    const context = canvas.getContext('2d');\n    context.font = this.get('font');\n    for (let i = 0; i < words.length; i++) {\n      const metrics = context.measureText(words[i]);\n      if (metrics.width > this.canvas_.width) {\n        this.canvas_.width += metrics.width;\n      }\n    }\n    const renderHeight = (lineHeight * words.length) * 2;\n    if (renderHeight > this.canvas_.height) {\n      this.canvas_.height = renderHeight;\n    }\n    // make canvas 2 pixels wider to account for italic text width\n    const width = (this.canvas_.width + 2) * 2;\n    this.canvas_.width = width;\n  }\n\n  /**\n   * Measure line height for provided font\n   * @private\n   * @param {string} font font style\n   * @returns {number} line height for given font style\n   */\n  measureTextHeight(font) {\n    let height = 0;\n    if (font) {\n      const div = document.createElement('div');\n      div.innerHTML = 'M';\n      div.style.margin = div.style.padding = '0 !important';\n      div.style.position = 'absolute !important';\n      div.style.left = '-99999px !important';\n      div.style.font = font;\n      document.body.appendChild(div);\n      height = div.offsetHeight;\n      document.body.removeChild(div);\n    }\n    return height;\n  }\n\n  /**\n   * Handle newline character to support multiline\n   * @private\n   * @param {CanvasRenderingContext2D} context Canvas context to fill text\n   * @param {string} text label text\n   * @param {number} x canvas relative x coordinate for the text to start\n   * @param {number} y canvas relative y coordinate for the text to start\n   */\n  wrapText(context, text, x, y) {\n    const words = text.split('\\r\\n');\n    let lineHeight = 0;\n    for (let i = 0; i < words.length; i++) {\n      const metrics = context.measureText(words[i]);\n      lineHeight =\n        1.2 *\n        (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      context.fillText(words[i], x, y);\n      y += lineHeight;\n    }\n  }\n\n  /**\n   * Note: mark as `@api` to make the minimized version include this method.\n   * @api\n   * @override\n   */\n  onAdd() {\n    const canvas = this.canvas_ = document.createElement('canvas');\n    this.adjustCanvasSize();\n    const style = canvas.style;\n    style.position = 'absolute';\n\n    const ctx = canvas.getContext('2d');\n    ctx.lineJoin = 'round';\n\n    this.drawCanvas_();\n\n    const panes = this.getPanes();\n    if (panes) {\n      let pane = this.get('olgm_pane');\n      if (pane) {\n        pane = panes[pane];\n      }\n      if (!pane) {\n        pane = panes.markerLayer;\n      }\n\n      pane.appendChild(canvas);\n    }\n  }\n}\nexport default MapLabel;\n","/**\n * @module olgm/gm/MapIcon\n */\nimport MapElement from './MapElement.js';\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [useCanvas] Whether or not we should draw on canvases when we can, instead of using the Google Maps API. This fixes z-index issues with labels on margers\n */\n\n/**\n * @classdesc\n * @api\n */\nclass MapIcon extends MapElement {\n  /**\n   * Creates a new map icon\n   * @param {module:ol/style/Icon} imageStyle ol3 style properties\n   * @param {Object<string, *>=} opt_options Optional properties to set.\n   */\n  constructor(imageStyle, opt_options) {\n    super();\n\n    /**\n     * This object contains the ol3 style properties for the icon. We keep\n     * it as an object because its properties can change, for example the size\n     * is only defined after the image is done loading.\n     * @type {module:ol/style/Icon}\n     * @private\n     */\n    this.imageStyle_ = imageStyle;\n\n    this.setValues(opt_options);\n  }\n\n\n  /**\n   * Listen to property changes and react accordingly\n   * @param {string} prop property\n   * @api\n   * @override\n   */\n  changed(prop) {\n    switch (prop) {\n      case 'maxZoom':\n      case 'minZoom':\n      case 'offsetX':\n      case 'offsetY':\n      case 'position':\n        this.draw();\n        break;\n      default:\n        break;\n    }\n  }\n\n  /**\n   * Rotate a point around the origin by a given angle expressed as a (cos, sin) pair.\n   * @private\n   */\n\n  rotate_(cosTheta, sinTheta, x, y) {\n    return [x * cosTheta - y * sinTheta, x * sinTheta + y * cosTheta];\n  }\n\n  /**\n   * Draws the icon to the canvas 2d context.\n   * @private\n   */\n  drawCanvas_() {\n    const canvas = this.canvas_;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.imageStyle_.getImage(1);\n    if (!image) {\n      return;\n    }\n\n    const style = canvas.style;\n\n    style.zIndex = /** @type {number} */ (this.get('zIndex'));\n\n    const scale = this.imageStyle_.getScale() || 1;\n    const anchor = this.imageStyle_.getAnchor() || [0, 0];\n    const rotation = this.imageStyle_.getRotation() || 0;\n    const opacity = this.imageStyle_.getOpacity() || 1;\n\n    const offsetX = anchor[0] * scale;\n    const offsetY = anchor[1] * scale;\n\n    let w_2 = image.width * scale * 0.5;\n    let h_2 = image.height * scale * 0.5;\n\n    w_2 += Math.abs(w_2 - offsetX);\n    h_2 += Math.abs(h_2 - offsetY);\n\n    const cosTheta = Math.cos(rotation);\n    const sinTheta = Math.sin(rotation);\n\n    const p1 = this.rotate_(cosTheta, sinTheta, -w_2, -h_2);\n    const p2 = this.rotate_(cosTheta, sinTheta, +w_2, -h_2);\n    const p3 = this.rotate_(cosTheta, sinTheta, -w_2, +h_2);\n    const p4 = this.rotate_(cosTheta, sinTheta, +w_2, +h_2);\n\n    const minX = Math.min(p1[0], p2[0], p3[0], p4[0]);\n    const maxX = Math.max(p1[0], p2[0], p3[0], p4[0]);\n    const minY = Math.min(p1[1], p2[1], p3[1], p4[1]);\n    const maxY = Math.max(p1[1], p2[1], p3[1], p4[1]);\n\n    canvas.width = Math.round(maxX - minX);\n    canvas.height = Math.round(maxY - minY);\n\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    const x = canvas.width / 2 - offsetX;\n    const y = canvas.height / 2 - offsetY;\n\n    ctx.translate(x + offsetX, y + offsetY);\n    ctx.rotate(rotation);\n    ctx.translate(-x - offsetX, -y - offsetY);\n    ctx.globalAlpha = opacity;\n\n    ctx.drawImage(image, x, y,\n      image.width * scale, image.height * scale);\n  }\n\n  /**\n   * Manage feature being added to the map\n   * @api\n   * @override\n   */\n  onAdd() {\n    const canvas = this.canvas_ = document.createElement('canvas');\n    const style = canvas.style;\n    style.position = 'absolute';\n\n    this.drawCanvas_();\n\n    const panes = this.getPanes();\n    if (panes) {\n      let pane = this.get('olgm_pane');\n      if (pane) {\n        pane = panes[pane];\n      }\n      if (!pane) {\n        pane = panes.markerLayer;\n      }\n\n      pane.appendChild(canvas);\n    }\n  }\n}\nexport default MapIcon;\n","/**\n * @module olgm/gm\n */\nimport LineString from 'ol/geom/LineString.js';\nimport Point from 'ol/geom/Point.js';\nimport Polygon from 'ol/geom/Polygon.js';\nimport MultiLineString from 'ol/geom/MultiLineString.js';\nimport MultiPolygon from 'ol/geom/MultiPolygon.js';\nimport MultiPoint from 'ol/geom/MultiPoint.js';\nimport {transform} from 'ol/proj.js';\nimport Circle from 'ol/style/Circle.js';\nimport Icon from 'ol/style/Icon.js';\nimport RegularShape from 'ol/style/RegularShape.js';\nimport {getStyleOf, getColor, getColorOpacity} from './util.js';\nimport {assert} from './asserts.js';\nimport MapLabel from './gm/MapLabel.js';\nimport MapIcon from './gm/MapIcon.js';\n\n\n/**\n * Create a Google Maps feature using an OpenLayers one.\n * @param {module:ol/Feature} feature feature to create\n * @param {module:ol/PluggableMap=} opt_ol3map For reprojection purpose. If undefined, then\n *     `EPSG:3857` is used.\n * @return {google.maps.Data.Feature} google Feature\n */\nexport function createFeature(feature, opt_ol3map) {\n  const geometry = /** @type {module:ol/geom/Geometry} */ (feature.getGeometry());\n  const gmapGeometry = createFeatureGeometry(geometry, opt_ol3map);\n  return new google.maps.Data.Feature({\n    geometry: gmapGeometry\n  });\n}\n\n\n/**\n * Create a Google Maps geometry using an OpenLayers one.\n * @param {module:ol/geom/Geometry} geometry geometry to create\n * @param {module:ol/PluggableMap=} opt_ol3map For reprojection purpose. If undefined, then\n *     `EPSG:3857` is used.\n * @return {google.maps.Data.Geometry|google.maps.LatLng}\n * google Geometry or LatLng\n */\nexport function createFeatureGeometry(geometry, opt_ol3map) {\n\n  let gmapGeometry = null;\n\n  if (geometry instanceof Point) {\n    gmapGeometry = createLatLng(geometry, opt_ol3map);\n  } else if (geometry instanceof MultiPoint ||\n             geometry instanceof LineString ||\n             geometry instanceof MultiLineString ||\n             geometry instanceof Polygon ||\n             geometry instanceof MultiPolygon) {\n    gmapGeometry = createGeometry(geometry, opt_ol3map);\n  }\n\n  assert(gmapGeometry !== null,\n    'Expected geometry to be module:ol/geom/Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon');\n\n  return gmapGeometry;\n}\n\n\n/**\n * Create a Google Maps LatLng object using an OpenLayers Point.\n * @param {module:ol/geom/Point|module:ol/coordinate~Coordinate} object coordinate to create\n * @param {module:ol/PluggableMap=} opt_ol3map For reprojection purpose. If undefined, then\n *     `EPSG:3857` is used.\n * @return {google.maps.LatLng} google LatLng object\n */\nexport function createLatLng(object, opt_ol3map) {\n  const inProj = (opt_ol3map !== undefined) ?\n    opt_ol3map.getView().getProjection() : 'EPSG:3857';\n  let coordinates;\n  if (object instanceof Point) {\n    coordinates = object.getCoordinates();\n  } else {\n    coordinates = object;\n  }\n  const lonLatCoords = transform(coordinates, inProj, 'EPSG:4326');\n  return new google.maps.LatLng(lonLatCoords[1], lonLatCoords[0]);\n}\n\n\n/**\n * Create a Google Maps LineString or Polygon object using an OpenLayers one.\n * @param {module:ol/geom/MultiPoint|module:ol/geom/LineString|module:ol/geom/Polygon|module:ol/geom/MultiLineString|module:ol/geom/MultiPolygon} geometry geometry to create\n * @param {module:ol/PluggableMap=} opt_ol3map For reprojection purpose. If undefined, then\n *     `EPSG:3857` is used.\n * @return {google.maps.Data.MultiPoint|google.maps.Data.LineString|google.maps.Data.MultiLineString|google.maps.Data.Polygon|google.maps.Data.MultiPolygon} google\n * LineString or Polygon\n */\nexport function createGeometry(geometry, opt_ol3map) {\n  const inProj = (opt_ol3map !== undefined) ?\n    opt_ol3map.getView().getProjection() : 'EPSG:3857';\n\n  let gmapGeometry = null;\n\n  if (geometry instanceof LineString) {\n    const lineStringlatLngs = genLatLngs_(\n      geometry.getCoordinates(),\n      inProj\n    );\n    gmapGeometry = new google.maps.Data.LineString(lineStringlatLngs);\n  } else if (geometry instanceof Polygon) {\n    const polygonlatLngs = genLatLngs_(\n      geometry.getCoordinates()[0],\n      inProj\n    );\n    gmapGeometry = new google.maps.Data.Polygon([polygonlatLngs]);\n  } else if (geometry instanceof MultiLineString) {\n    const multiLineStringlatLngs = genMultiLatLngs_(\n      geometry.getCoordinates(),\n      inProj\n    );\n    gmapGeometry = new google.maps.Data.MultiLineString(multiLineStringlatLngs);\n  } else if (geometry instanceof MultiPolygon) {\n    const multiPolygons = genMultiPolygon_(\n      geometry.getPolygons(),\n      inProj\n    );\n    gmapGeometry = new google.maps.Data.MultiPolygon(multiPolygons);\n  } else if (geometry instanceof MultiPoint) {\n    const multiPoints = genLatLngs_(\n      geometry.getCoordinates(),\n      inProj\n    );\n    gmapGeometry = new google.maps.Data.MultiPoint(multiPoints);\n  }\n\n  return gmapGeometry;\n}\n\n\n/**\n * Convert a list of OpenLayers coordinates to a list of google maps LatLng.\n *\n * @param {Array<module:ol/coordinate~Coordinate>} coordinates List of coordinate\n * @param {module:ol/proj~ProjectionLike=} opt_inProj Projection of the features.\n * @return {Array<google.maps.LatLng>} List of lat lng.\n * @private\n */\nexport function genLatLngs_(coordinates, opt_inProj) {\n  const inProj = opt_inProj || 'EPSG:3857';\n  const latLngs = [];\n  let lonLatCoords;\n  for (let i = 0, ii = coordinates.length; i < ii; i++) {\n    lonLatCoords = transform(coordinates[i], inProj, 'EPSG:4326');\n    latLngs.push(new google.maps.LatLng(lonLatCoords[1], lonLatCoords[0]));\n  }\n  return latLngs;\n}\n\n\n/**\n * Convert a list of OpenLayers multi-coordinates to a list of multi\n * google maps LatLng.\n *\n * @param {Array<Array<module:ol/coordinate~Coordinate>>} coordinates List of multi coordinate\n * @param {module:ol/proj~ProjectionLike=} opt_inProj Projection of the features.\n * @return {Array<Array<google.maps.LatLng>>} List of multi lat lng.\n * @private\n */\nexport function genMultiLatLngs_(coordinates, opt_inProj) {\n  const inProj = opt_inProj || 'EPSG:3857';\n  const multiLatLngs = [];\n  for (let i = 0, len = coordinates.length; i < len; i++) {\n    multiLatLngs.push(genLatLngs_(coordinates[i], inProj));\n  }\n  return multiLatLngs;\n}\n\n\n/**\n * Convert a list of OpenLayers polygons to a list of google maps polygons.\n *\n * @param {Array<module:ol/geom/Polygon>} polygons List of polygons.\n * @param {module:ol/proj~ProjectionLike=} opt_inProj Projection of the features.\n * @return {Array<google.maps.Data.Polygon>} List of polygons.\n * @private\n */\nexport function genMultiPolygon_(polygons, opt_inProj) {\n  const mutliPolygons = [];\n  for (let i = 0, len = polygons.length; i < len; i++) {\n    const latLgns = genMultiLatLngs_(polygons[i].getCoordinates(), opt_inProj);\n    const multiPolygon = new google.maps.Data.Polygon(latLgns);\n    mutliPolygons.push(multiPolygon);\n  }\n  return mutliPolygons;\n}\n\n\n// === Style ===\n\n\n/**\n * Create a Google Maps data style options from an OpenLayers object.\n * @param {module:ol/style/Style|module:ol/style/Style~StyleFunction|module:ol/layer/Vector|module:ol/Feature}\n * object style object\n * @param {module:olgm/gm/MapIcon~Options} mapIconOptions map icon options\n * @param {number=} opt_index index for the object\n * @return {?google.maps.Data.StyleOptions} google style options\n */\nexport function createStyle(object, mapIconOptions, opt_index) {\n  let gmStyle = null;\n  const style = getStyleOf(object);\n  if (style) {\n    gmStyle = createStyleInternal(style, mapIconOptions, opt_index);\n  }\n  return gmStyle;\n}\n\n\n/**\n * Create a Google Maps data style options from an OpenLayers style object.\n * @param {module:ol/style/Style} style style object\n * @param {module:olgm/gm/MapIcon~Options} mapIconOptions map icon options\n * @param {number=} opt_index index for the object\n * @return {google.maps.Data.StyleOptions} google style options\n */\nexport function createStyleInternal(style, mapIconOptions, opt_index) {\n\n  const gmStyle = /** @type {google.maps.Data.StyleOptions} */ ({});\n\n  // strokeColor\n  // strokeOpacity\n  // strokeWeight\n  const stroke = style.getStroke();\n  if (stroke) {\n    const strokeColor = stroke.getColor();\n    if (strokeColor) {\n      gmStyle['strokeColor'] = getColor(strokeColor);\n      const strokeOpacity = getColorOpacity(strokeColor);\n      if (strokeOpacity !== null) {\n        gmStyle['strokeOpacity'] = strokeOpacity;\n      }\n    }\n\n    const strokeWidth = stroke.getWidth();\n    if (strokeWidth) {\n      gmStyle['strokeWeight'] = strokeWidth;\n    }\n  }\n\n  // fillColor\n  // fillOpacity\n  const fill = style.getFill();\n  if (fill) {\n    const fillColor = fill.getColor();\n    if (fillColor) {\n      gmStyle['fillColor'] = getColor(fillColor);\n      const fillOpacity = getColorOpacity(fillColor);\n      if (fillOpacity !== null) {\n        gmStyle['fillOpacity'] = fillOpacity;\n      }\n    }\n  }\n\n  const image = style.getImage();\n  if (image) {\n\n    const gmIcon = {};\n    const gmSymbol = {};\n    const useCanvas = mapIconOptions.useCanvas !== undefined ?\n      mapIconOptions.useCanvas : false;\n\n    if (image instanceof Circle || image instanceof RegularShape) {\n      // --- module:ol/style/Circle ---\n      if (image instanceof Circle) {\n        gmSymbol['path'] = google.maps.SymbolPath.CIRCLE;\n      } else if (image instanceof RegularShape) {\n        // Google Maps support SVG Paths. We'll build one manually.\n        let path = 'M ';\n\n        // Get a few variables from the image style;\n        let nbPoints = image.getPoints();\n        const outerRadius = image.getRadius();\n        const innerRadius = image.getRadius2() !== undefined ?\n          image.getRadius2() : image.getRadius();\n        const size = 0.1;\n        const rotation = image.getRotation() + image.getAngle();\n\n        if (innerRadius == 0 && image.getRadius2() === undefined) {\n          nbPoints = nbPoints / 2;\n        }\n\n        if (innerRadius !== outerRadius) {\n          nbPoints = nbPoints * 2;\n        }\n\n        for (let i = 0; i < nbPoints; i++) {\n          const radius = i % 2 == 0 ? outerRadius : innerRadius;\n          const angle = (i * 2 * Math.PI / nbPoints) - (Math.PI / 2) + rotation;\n\n          const x = size * radius * Math.cos(angle);\n          const y = size * radius * Math.sin(angle);\n          path += x + ',' + y + ' ';\n        }\n\n        // Close the path\n        path += 'Z';\n        gmSymbol['path'] = path;\n      }\n\n      const imageStroke = image.getStroke();\n      if (imageStroke) {\n        const imageStrokeColor = imageStroke.getColor();\n        if (imageStrokeColor) {\n          gmSymbol['strokeColor'] = getColor(imageStrokeColor);\n        }\n\n        gmSymbol['strokeWeight'] = imageStroke.getWidth();\n      }\n\n      const imageFill = image.getFill();\n      if (imageFill) {\n        const imageFillColor = imageFill.getColor();\n        if (imageFillColor) {\n          gmSymbol['fillColor'] = getColor(imageFillColor);\n\n          const imageFillOpacity = getColorOpacity(imageFillColor);\n          if (imageFillOpacity !== null) {\n            gmSymbol['fillOpacity'] = imageFillOpacity;\n          } else {\n            // Google Maps default fill opacity of images is `0`. In ol3,\n            // it's `1`.\n            gmSymbol['fillOpacity'] = 1;\n          }\n        }\n      }\n\n      const imageRadius = image.getRadius();\n      if (imageRadius) {\n        gmSymbol['scale'] = imageRadius;\n      }\n    } else if (image instanceof Icon && !useCanvas) {\n      // --- module:ol/style/Icon ---\n\n      const imageSrc = image.getSrc();\n      if (imageSrc) {\n        gmSymbol['url'] = imageSrc;\n      }\n\n      const imageScale = image.getScale();\n\n      const imageAnchor = image.getAnchor();\n      if (imageAnchor) {\n        if (imageScale !== undefined) {\n          gmSymbol['anchor'] = new google.maps.Point(\n            imageAnchor[0] * imageScale, imageAnchor[1] * imageScale);\n        } else {\n          gmSymbol['anchor'] = new google.maps.Point(\n            imageAnchor[0], imageAnchor[1]);\n        }\n      }\n\n      const imageOrigin = image.getOrigin();\n      if (imageOrigin) {\n        gmSymbol['origin'] = new google.maps.Point(\n          imageOrigin[0], imageOrigin[1]);\n      }\n\n      const imageSize = image.getSize();\n      if (imageSize) {\n        gmSymbol['size'] = new google.maps.Size(imageSize[0], imageSize[1]);\n\n        if (imageScale !== undefined) {\n          gmSymbol['scaledSize'] = new google.maps.Size(\n            imageSize[0] * imageScale, imageSize[1] * imageScale);\n        }\n      }\n\n      // NOTE - google.maps.Icon does not support opacity\n    }\n\n    if (Object.keys(gmIcon).length) {\n      gmStyle['icon'] = /** @type {google.maps.Icon} */ (gmIcon);\n    } else if (Object.keys(gmSymbol).length) {\n      gmStyle['icon'] = /** @type {google.maps.Symbol} */ (gmSymbol);\n    }\n  }\n\n  // if, at this very last point, there aren't any style options that have\n  // been set, then tell Google Maps to render the feature invisible because\n  // we're dealing with an empty `module:ol/style/Style` object.\n  if (Object.keys(/** @type {!Object} */ (gmStyle)).length === 0) {\n    gmStyle['visible'] = false;\n  } else if (opt_index !== undefined) {\n    const zIndex = opt_index * 2;\n    gmStyle['zIndex'] = zIndex;\n  }\n\n  return gmStyle;\n}\n\n\n// === Label ===\n\n\n/**\n * Create a MapLabel object from a text style and Lat/Lng location.\n * @param {module:ol/style/Text} textStyle style for the text\n * @param {google.maps.LatLng} latLng position of the label\n * @param {number} index index for the label\n * @param {string=} opt_pane name of Google Maps pane to use (defaults to 'markerLayer' if not specified)\n * @return {module:olgm/gm/MapLabel} map label\n */\nexport function createLabel(textStyle, latLng, index, opt_pane) {\n\n  const labelOptions = {\n    align: 'center',\n    position: latLng,\n    olgm_pane: opt_pane,\n    zIndex: index * 2 + 1\n  };\n\n  const text = textStyle.getText();\n  if (text) {\n    labelOptions['text'] = text;\n  }\n\n  const font = textStyle.getFont();\n  if (font) {\n    labelOptions['font'] = font;\n  }\n\n  const fill = textStyle.getFill();\n  if (fill) {\n    const fillColor = fill.getColor();\n    if (fillColor) {\n      labelOptions['fontColor'] = fillColor;\n    }\n  }\n\n  const stroke = textStyle.getStroke();\n  if (stroke) {\n    const strokeColor = stroke.getColor();\n    if (strokeColor) {\n      labelOptions['strokeColor'] = strokeColor;\n    }\n\n    const strokeWidth = stroke.getWidth();\n    if (strokeWidth) {\n      labelOptions['strokeWeight'] = strokeWidth;\n    }\n  }\n\n  const offsetX = textStyle.getOffsetX();\n  if (offsetX) {\n    labelOptions['offsetX'] = offsetX;\n  }\n\n  const offsetY = textStyle.getOffsetY();\n  if (offsetY) {\n    labelOptions['offsetY'] = offsetY;\n  }\n\n  const textAlign = textStyle.getTextAlign();\n  if (textAlign) {\n    labelOptions['textAlign'] = textAlign;\n  }\n\n  const textBaseline = textStyle.getTextBaseline();\n  if (textBaseline) {\n    labelOptions['textBaseline'] = textBaseline;\n  }\n\n  return new MapLabel(labelOptions);\n}\n\n\n/**\n * Create a mapIcon object from an image style and Lat/Lng location\n * @param {module:ol/style/Icon} iconStyle style for the icon\n * @param {google.maps.LatLng} latLng position of the label\n * @param {number} index index for the label\n * @param {string=} opt_pane name of Google Maps pane to use (defaults to 'markerLayer' if not specified)\n * @return {module:olgm/gm/MapIcon} map icon\n */\nexport function createMapIcon(iconStyle, latLng, index, opt_pane) {\n\n  const iconOptions = {\n    align: 'center',\n    position: latLng,\n    olgm_pane: opt_pane,\n    zIndex: index * 2 + 1\n  };\n\n  return new MapIcon(iconStyle, iconOptions);\n}\n","/**\n * @module olgm/herald/Feature\n */\nimport Icon from 'ol/style/Icon.js';\nimport {getCenterOf, getStyleOf} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {createFeature, createStyle, createLatLng, createMapIcon,\n  createLabel, createFeatureGeometry} from '../gm.js';\nimport Herald from './Herald.js';\nimport PropertyListener from '../listener/PropertyListener.js';\nimport Listener from '../listener/Listener.js';\n\nclass FeatureHerald extends Herald {\n  /**\n   * The Feature Herald is responsible of synchronizing a single ol3 vector\n   * feature to a gmap feature. Here's what synchronized within the feature:\n   *\n   * - its geometry\n   * - its style\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @param {olgmx.herald.FeatureOptions} options options\n   */\n  constructor(ol3map, gmap, options) {\n    super(ol3map, gmap);\n\n    /**\n     * @type {module:ol/Feature}\n     * @private\n     */\n    this.feature_ = options.feature;\n\n    /**\n     * @type {module:olgm/AbstractListener~AbstractListener|null}\n     * @protected\n     */\n    this.featureListener_ = null;\n\n    /**\n     * @type {!google.maps.Data}\n     * @private\n     */\n    this.data_ = options.data;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.index_ = options.index;\n\n    /**\n     * @type {module:olgm/gm/MapIcon~Options}\n     * @private\n     */\n    this.mapIconOptions_ = options.mapIconOptions;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = options.visible !== undefined ? options.visible : true;\n\n    /**\n     * @type {google.maps.Data.Feature}\n     * @private\n     */\n    this.gmapFeature_ = null;\n\n    /**\n     * @type {module:olgm/gm/MapLabel}\n     * @private\n     */\n    this.label_ = null;\n\n    /**\n     * The marker object contains a marker to draw on a canvas instead of using\n     * the Google Maps API. If useCanvas_ is set to false, this variable won't\n     * be used.\n     * @type {module:olgm/gm/MapIcon}\n     * @private\n     */\n    this.marker_ = null;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  activate() {\n    super.activate();\n\n    // create gmap feature\n    this.gmapFeature_ = createFeature(this.feature_);\n\n    if (this.visible_) {\n      this.data_.add(this.gmapFeature_);\n    }\n\n    this.updateStyle_();\n\n    this.featureListener_ = new Listener(this.feature_.on('change', () => this.handleFeatureChange_()));\n\n    this.listener = new PropertyListener(this.feature_, null, this.feature_.getGeometryName(), (geometry, oldGeometry) => {\n      if (oldGeometry) {\n        this.handleGeometryChange_();\n      }\n      return new Listener(geometry.on('change', () => this.handleGeometryChange_()));\n    });\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  deactivate() {\n    if (this.featureListener_) {\n      this.featureListener_.unlisten();\n    }\n\n    // remove gmap feature\n    this.data_.remove(this.gmapFeature_);\n    this.gmapFeature_ = null;\n\n    // remove feature\n    if (this.marker_) {\n      this.marker_.setMap(null);\n      this.marker_ = null;\n    }\n\n    // remove label\n    if (this.label_) {\n      this.label_.setMap(null);\n      this.label_ = null;\n    }\n\n    super.deactivate();\n  }\n\n\n  /**\n   * Set visible or invisible, without deleting the feature object\n   * @param {boolean} value true to set visible, false to set invisible\n   */\n  setVisible(value) {\n    if (value && !this.visible_) {\n      this.data_.add(this.gmapFeature_);\n\n      if (this.marker_) {\n        this.marker_.setMap(this.gmap);\n      }\n\n      if (this.label_) {\n        this.label_.setMap(this.gmap);\n      }\n\n      this.visible_ = true;\n    } else if (!value && this.visible_) {\n\n      this.data_.remove(this.gmapFeature_);\n\n      if (this.marker_) {\n        this.marker_.setMap(null);\n      }\n\n      if (this.label_) {\n        this.label_.setMap(null);\n      }\n\n      this.visible_ = false;\n    }\n  }\n\n  /**\n   * @private\n   * @return {module:ol/geom/Geometry} the feature's geometry\n   */\n  getGeometry_() {\n    const geometry = this.feature_.getGeometry();\n    assert(\n      geometry !== undefined, 'Expected feature to have geometry');\n    return /** @type {module:ol/geom/Geometry} */ (geometry);\n  }\n\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    const geometry = this.getGeometry_();\n    this.gmapFeature_.setGeometry(createFeatureGeometry(geometry));\n\n    let latLng;\n\n    if (this.label_) {\n      latLng = createLatLng(getCenterOf(geometry));\n      this.label_.set('position', latLng);\n    }\n\n    if (this.marker_) {\n      latLng = createLatLng(getCenterOf(geometry));\n      this.marker_.set('position', latLng);\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleFeatureChange_() {\n    this.updateStyle_();\n  }\n\n  /**\n   * @private\n   */\n  updateStyle_() {\n\n    // override style if a style is defined at the feature level\n    const mapIconOptions = {useCanvas: this.feature_.useCanvas || this.mapIconOptions_.useCanvas};\n\n    const gmStyle = createStyle(\n      this.feature_, mapIconOptions, this.index_);\n\n    this.data_.overrideStyle(this.gmapFeature_, gmStyle);\n\n    const prevMarker = this.marker_;\n    const prevLabel = this.label_;\n\n    const style = getStyleOf(this.feature_);\n    if (style) {\n      const latLng = createLatLng(getCenterOf(this.getGeometry_()));\n\n      const zIndex = style.getZIndex();\n      const index = zIndex !== undefined ? zIndex : this.index_;\n\n      const image = style.getImage();\n      if (image && image instanceof Icon && mapIconOptions.useCanvas) {\n        this.marker_ = createMapIcon(image, latLng, index, this.feature_.get('olgm_pane'));\n        if (this.visible_) {\n          this.marker_.setMap(this.gmap);\n        }\n      }\n\n      const text = style.getText();\n      if (text) {\n        this.label_ = createLabel(text, latLng, index, this.feature_.get('olgm_pane'));\n        if (this.visible_) {\n          this.label_.setMap(this.gmap);\n        }\n      }\n    }\n\n    if (prevMarker) {\n      prevMarker.setMap(null);\n    }\n    if (prevLabel) {\n      prevLabel.setMap(null);\n    }\n  }\n}\nexport default FeatureHerald;\n","/**\n * @module olgm/herald/VectorFeature\n */\nimport FeatureHerald from './Feature.js';\nimport Herald from './Herald.js';\nimport Listener from '../listener/Listener.js';\n\n/**\n * @typedef {Object} Cache\n * @property {module:ol/Feature} feature\n * @property {module:olgm/herald/Feature} herald\n */\n\nclass VectorFeatureHerald extends Herald {\n  /**\n   * The VectorFeature Herald is responsible of sychronizing the features from\n   * an ol3 vector source. The existing features in addition of those that are\n   * added and removed are all managed. Each existing or added feature is bound\n   * to a `olgm.herald.Feature` object. It gets unbound when removed.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @param {ol.source.Vector} source vector source\n   * @param {google.maps.Data} data google maps data object\n   * @param {module:olgm/gm/MapIcon~Options} mapIconOptions map icon options\n   */\n  constructor(ol3map, gmap, source, data, mapIconOptions) {\n    super(ol3map, gmap);\n\n    /**\n     * @type {Array<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = [];\n\n    /**\n     * @type {Array<olgm.herald.VectorFeature.Cache>}\n     * @private\n     */\n    this.cache_ = [];\n\n    /**\n     * @type {!google.maps.Data}\n     * @private\n     */\n    this.data_ = data;\n\n    /**\n     * @type {ol.source.Vector}\n     * @private\n     */\n    this.source_ = source;\n\n    /**\n     * @type {module:olgm/gm/MapIcon~Options}\n     * @private\n     */\n    this.mapIconOptions_ = mapIconOptions;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.visible_ = true;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  activate() {\n    super.activate();\n\n    // watch existing features...\n    this.source_.getFeatures().forEach((feature) => this.watchFeature_(feature));\n\n    // event listeners\n    this.listener = new Listener([\n      this.source_.on('addfeature', (event) => this.handleAddFeature_(event)),\n      this.source_.on('removefeature', (event) => this.handleRemoveFeature_(event))\n    ]);\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  deactivate() {\n    // unwatch existing features...\n    this.source_.getFeatures().forEach((feature) => this.unwatchFeature_(feature));\n\n    super.deactivate();\n  }\n\n\n  /**\n   * Set each feature visible or invisible\n   * @param {boolean} value true for visible, false for invisible\n   */\n  setVisible(value) {\n    this.visible_ = value;\n    for (let i = 0; i < this.cache_.length; i++) {\n      this.cache_[i].herald.setVisible(value);\n    }\n  }\n\n\n  /**\n   * @param {ol.source.Vector.Event} event addFeature event\n   * @private\n   */\n  handleAddFeature_(event) {\n    const feature = /** @type {module:ol/Feature} */ (event.feature);\n    this.watchFeature_(feature);\n  }\n\n\n  /**\n   * @param {ol.source.Vector.Event} event removeFeature event\n   * @private\n   */\n  handleRemoveFeature_(event) {\n    const feature = /** @type {module:ol/Feature} */ (event.feature);\n    this.unwatchFeature_(feature);\n  }\n\n\n  /**\n   * @param {module:ol/Feature} feature feature to watch\n   * @private\n   */\n  watchFeature_(feature) {\n\n    const ol3map = this.ol3map;\n    const gmap = this.gmap;\n    const data = this.data_;\n\n    // push to features (internal)\n    this.features_.push(feature);\n\n    const index = this.features_.indexOf(feature);\n\n    // create and activate feature herald\n    const options = {\n      feature: feature,\n      data: data,\n      index: index,\n      mapIconOptions: this.mapIconOptions_,\n      visible: this.visible_\n    };\n    const herald = new FeatureHerald(ol3map, gmap, options);\n    herald.activate();\n\n    // push to cache\n    this.cache_.push({\n      feature: feature,\n      herald: herald\n    });\n  }\n\n\n  /**\n   * @param {module:ol/Feature} feature feature to unwatch\n   * @private\n   */\n  unwatchFeature_(feature) {\n    const index = this.features_.indexOf(feature);\n    if (index !== -1) {\n      // remove from features (internal)\n      this.features_.splice(index, 1);\n      // deactivate feature herald\n      this.cache_[index].herald.deactivate();\n      // remove from cache\n      this.cache_.splice(index, 1);\n    }\n  }\n}\n\n\nexport default VectorFeatureHerald;\n","/**\n * @module olgm/herald/VectorSource\n */\nimport {createStyle} from '../gm.js';\nimport SourceHerald from './Source.js';\nimport VectorFeatureHerald from './VectorFeature.js';\nimport PropertyListener from '../listener/PropertyListener.js';\n\n/**\n * @typedef {Object} LayerCache\n * @property {google.maps.Data} data\n * @property {module:olgm/herald/VectorFeature} herald\n * @property {module:ol/layer/Vector} layer\n * @property {?module:olgm/AbstractListener~AbstractListener} listeners\n * @property {number} opacity\n */\n\nclass VectorSourceHerald extends SourceHerald {\n  /**\n   * Listen to a Vector layer\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @param {module:olgm/gm/MapIcon~Options} mapIconOptions map icon options\n   */\n  constructor(ol3map, gmap, mapIconOptions) {\n    super(ol3map, gmap);\n\n    /**\n    * @type {Array<module:olgm/herald/VectorSource~LayerCache>}\n    * @private\n    */\n    this.cache_ = [];\n\n    /**\n    * @type {Array<module:ol/layer/Vector>}\n    * @private\n    */\n    this.layers_ = [];\n\n    /**\n     * @type {module:olgm/gm/MapIcon~Options}\n     * @private\n     */\n    this.mapIconOptions_ = mapIconOptions;\n  }\n\n\n  /**\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @override\n   */\n  watchLayer(layer) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (layer);\n\n    // Source required\n    const source = vectorLayer.getSource();\n    if (!source) {\n      return;\n    }\n\n    // If olgmWatch property is false then render using OL instead\n    if (vectorLayer.get('olgmWatch') === false) {\n      return;\n    }\n\n    this.layers_.push(vectorLayer);\n\n    // Data\n    const data = new google.maps.Data({\n      'map': this.gmap\n    });\n\n    // Style\n    const gmStyle = createStyle(vectorLayer, this.mapIconOptions_);\n    if (gmStyle) {\n      data.setStyle(gmStyle);\n    }\n\n    // herald\n    const herald = new VectorFeatureHerald(\n      this.ol3map, this.gmap, source, data, this.mapIconOptions_);\n\n    // opacity\n    const opacity = vectorLayer.getOpacity();\n\n    const cacheItem = /** {@type module:olgm/herald/VectorSource~LayerCache} */ ({\n      data: data,\n      herald: herald,\n      layer: vectorLayer,\n      listeners: [],\n      opacity: opacity\n    });\n\n    cacheItem.listeners.push(\n      new PropertyListener(this.ol3map, null, 'view', (view, oldView) => {\n        return [\n          new PropertyListener(view, oldView, 'resolution', () => this.handleResolutionChange_(cacheItem)),\n          new PropertyListener(view, oldView, 'visible', () => this.handleVisibleChange_(cacheItem))\n        ];\n      })\n    );\n\n    this.activateCacheItem_(cacheItem);\n\n    this.cache_.push(cacheItem);\n  }\n\n\n  /**\n   * Unwatch the vector layer\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @override\n   */\n  unwatchLayer(layer) {\n    const vectorLayer = /** @type {module:ol/layer/Vector} */ (layer);\n\n    const index = this.layers_.indexOf(vectorLayer);\n    if (index !== -1) {\n      this.layers_.splice(index, 1);\n\n      const cacheItem = this.cache_[index];\n      cacheItem.listeners.forEach(listener => listener.unlisten());\n\n      // data - unset\n      cacheItem.data.setMap(null);\n\n      // herald\n      cacheItem.herald.deactivate();\n\n      // opacity\n      vectorLayer.setOpacity(cacheItem.opacity);\n\n      this.cache_.splice(index, 1);\n    }\n\n  }\n\n\n  /**\n   * Activate all cache items\n   * @api\n   * @override\n   */\n  activate() {\n    super.activate();\n    this.cache_.forEach(this.activateCacheItem_, this);\n  }\n\n\n  /**\n   * Activates an image WMS layer cache item.\n   * @param {module:olgm/herald/VectorSource~LayerCache} cacheItem cacheItem to activate\n   * @private\n   */\n  activateCacheItem_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n    if (visible && this.googleMapsIsActive) {\n      cacheItem.herald.activate();\n      cacheItem.layer.setOpacity(0);\n    }\n  }\n\n\n  /**\n   * Deactivate all cache items\n   * @api\n   * @override\n   */\n  deactivate() {\n    super.deactivate();\n    this.cache_.forEach(this.deactivateCacheItem_, this);\n  }\n\n\n  /**\n   * Deactivates a Tile WMS layer cache item.\n   * @param {module:olgm/herald/VectorSource~LayerCache} cacheItem cacheItem to\n   * deactivate\n   * @private\n   */\n  deactivateCacheItem_(cacheItem) {\n    cacheItem.herald.deactivate();\n    cacheItem.layer.setOpacity(cacheItem.opacity);\n  }\n\n\n  handleResolutionChange_(cacheItem) {\n    const layer = cacheItem.layer;\n\n    const minResolution = layer.getMinResolution();\n    const maxResolution = layer.getMaxResolution();\n    const currentResolution = this.ol3map.getView().getResolution();\n    if (currentResolution < minResolution || currentResolution > maxResolution) {\n      cacheItem.herald.setVisible(false);\n    } else {\n      cacheItem.herald.setVisible(true);\n    }\n  }\n\n\n  /**\n   * Deal with the google WMS layer when we enable or disable the OL3 WMS layer\n   * @param {module:olgm/herald/VectorSource~LayerCache} cacheItem cacheItem for the\n   * watched layer\n   * @private\n   */\n  handleVisibleChange_(cacheItem) {\n    const layer = cacheItem.layer;\n    const visible = layer.getVisible();\n    if (visible) {\n      this.activateCacheItem_(cacheItem);\n    } else {\n      this.deactivateCacheItem_(cacheItem);\n    }\n  }\n}\n\n\nexport default VectorSourceHerald;\n","/* Based on https://github.com/openlayers/openlayers/blob/master/src/ol/events.js */\n/**\n * @module olgm/events\n */\nimport {clear} from './obj.js';\n\n\n/**\n * @param {module:ol/events~EventsKey} listenerObj Listener object.\n * @return {module:ol/events~ListenerFunction} Bound listener.\n */\nexport function bindListener(listenerObj) {\n  const boundListener = function(evt) {\n    const listener = listenerObj.listener;\n    const bindTo = listenerObj.bindTo || listenerObj.target;\n    if (listenerObj.callOnce) {\n      unlistenByKey(listenerObj);\n    }\n    return listener.call(bindTo, evt);\n  };\n  listenerObj.boundListener = boundListener;\n  return boundListener;\n}\n\n\n/**\n * Finds the matching {@link module:ol/events~EventsKey} in the given listener\n * array.\n *\n * @param {Array<module:ol/events~EventsKey>} listeners Array of listeners.\n * @param {Function} listener The listener function.\n * @param {Object=} opt_this The `this` value inside the listener.\n * @param {boolean=} opt_setDeleteIndex Set the deleteIndex on the matching\n *     listener, for {@link module:ol/events~unlistenByKey}.\n * @return {module:ol/events~EventsKey|undefined} The matching listener object.\n */\nexport function findListener(listeners, listener, opt_this, opt_setDeleteIndex) {\n  let listenerObj;\n  for (let i = 0, ii = listeners.length; i < ii; ++i) {\n    listenerObj = listeners[i];\n    if (listenerObj.listener === listener &&\n        listenerObj.bindTo === opt_this) {\n      if (opt_setDeleteIndex) {\n        listenerObj.deleteIndex = i;\n      }\n      return listenerObj;\n    }\n  }\n  return undefined;\n}\n\n\n/**\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n * @return {Array<module:ol/events~EventsKey>|undefined} Listeners.\n */\nexport function getListeners(target, type) {\n  const listenerMap = target.ol_lm;\n  return listenerMap ? listenerMap[type] : undefined;\n}\n\n\n/**\n * Get the lookup of listeners.  If one does not exist on the target, it is\n * created.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @return {!Object<string, Array<module:ol/events~EventsKey>>} Map of\n *     listeners by event type.\n */\nfunction getListenerMap(target) {\n  let listenerMap = target.ol_lm;\n  if (!listenerMap) {\n    listenerMap = target.ol_lm = {};\n  }\n  return listenerMap;\n}\n\n\n/**\n * Clean up all listener objects of the given type.  All properties on the\n * listener objects will be removed, and if no listeners remain in the listener\n * map, it will be removed from the target.\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n * @param {string} type Type.\n */\nfunction removeListeners(target, type) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      target.removeEventListener(type, listeners[i].boundListener);\n      clear(listeners[i]);\n    }\n    listeners.length = 0;\n    const listenerMap = target.ol_lm;\n    if (listenerMap) {\n      delete listenerMap[type];\n      if (Object.keys(listenerMap).length === 0) {\n        delete target.ol_lm;\n      }\n    }\n  }\n}\n\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events~unlistenByKey}.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean=} opt_once If true, add the listener as one-off listener.\n * @return {module:ol/events~EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, opt_this, opt_once) {\n  const listenerMap = getListenerMap(target);\n  let listeners = listenerMap[type];\n  if (!listeners) {\n    listeners = listenerMap[type] = [];\n  }\n  let listenerObj = findListener(listeners, listener, opt_this, false);\n  if (listenerObj) {\n    if (!opt_once) {\n      // Turn one-off listener into a permanent one.\n      listenerObj.callOnce = false;\n    }\n  } else {\n    listenerObj = /** @type {module:ol/events~EventsKey} */ ({\n      bindTo: opt_this,\n      callOnce: !!opt_once,\n      listener: listener,\n      target: target,\n      type: type\n    });\n    target.addEventListener(type, bindListener(listenerObj));\n    listeners.push(listenerObj);\n  }\n\n  return listenerObj;\n}\n\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events~unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events~listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {module:ol/events~EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, opt_this) {\n  return listen(target, type, listener, opt_this, true);\n}\n\n\n/**\n * Unregisters an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * To return a listener, this function needs to be called with the exact same\n * arguments that were used for a previous {@link module:ol/events~listen} call.\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {module:ol/events~ListenerFunction} listener Listener.\n * @param {Object=} opt_this Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n */\nexport function unlisten(target, type, listener, opt_this) {\n  const listeners = getListeners(target, type);\n  if (listeners) {\n    const listenerObj = findListener(listeners, listener, opt_this, true);\n    if (listenerObj) {\n      unlistenByKey(listenerObj);\n    }\n  }\n}\n\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events~listen} or {@link module:ol/events~listenOnce}.\n *\n * @param {module:ol/events~EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.boundListener);\n    const listeners = getListeners(key.target, key.type);\n    if (listeners) {\n      const i = 'deleteIndex' in key ? key.deleteIndex : listeners.indexOf(key);\n      if (i !== -1) {\n        listeners.splice(i, 1);\n      }\n      if (listeners.length === 0) {\n        removeListeners(key.target, key.type);\n      }\n    }\n    clear(key);\n  }\n}\n\n\n/**\n * Unregisters all event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * @param {module:ol/events/EventTarget~EventTargetLike} target Target.\n */\nexport function unlistenAll(target) {\n  const listenerMap = getListenerMap(target);\n  for (const type in listenerMap) {\n    removeListeners(target, type);\n  }\n}\n","/**\n * @module olgm/herald/View\n */\nimport {transform} from 'ol/proj.js';\nimport {getZoomFromResolution} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Herald from './Herald.js';\nimport PropertyListener from '../listener/PropertyListener.js';\nimport Listener from '../listener/Listener.js';\n\nclass ViewHerald extends Herald {\n  /**\n   * The View Herald is responsible of synchronizing the view (center/zoom)\n   * of boths maps together. The ol3 map view is the master here, i.e. changes\n   * from the ol3 map view are given to the gmap map, but not vice-versa.\n   *\n   * When the browser window gets resized, the gmap map is also updated.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   */\n  constructor(ol3map, gmap) {\n    super(ol3map, gmap);\n\n    /**\n     * On window resize, the GoogleMaps map gets recentered. To avoid doing this\n     * too often, a timeout is set.\n     * @type {?number}\n     * @private\n     */\n    this.windowResizeTimerId_ = null;\n\n    /**\n     * @type {?module:ol/events~EventsKey}\n     * @private\n     */\n    this.windowListenerKey_ = null;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  activate() {\n    super.activate();\n\n    this.ol3map.getView().setConstrainResolution(true);\n\n    this.listener = new PropertyListener(this.ol3map, null, 'view', (view, oldView) => {\n      if (oldView) {\n        this.setRotation();\n        this.setZoomAndCenter();\n      }\n\n      return new Listener([\n        // listen to center change\n        view.on('change:center', () => this.setCenter()),\n        // listen to resolution change\n        view.on('change:resolution', () => this.setZoomAndCenter()),\n        // listen to rotation change\n        view.on('change:rotation', () => this.setRotation())\n      ]);\n    });\n\n    // listen to browser window resize\n    this.windowListenerKey_ = listen(\n      window,\n      'resize',\n      this.handleWindowResize_,\n      this,\n      false);\n\n    // Rotate and recenter the map after it's ready\n    google.maps.event.addListenerOnce(this.gmap, 'idle', () => {\n      this.setRotation();\n      this.setZoomAndCenter();\n    });\n  }\n\n\n  deactivate() {\n    super.deactivate();\n\n    this.ol3map.getView().setConstrainResolution(false);\n\n    unlistenByKey(this.windowListenerKey_);\n  }\n\n\n  /**\n   * Recenter the gmap map at the ol3 map center location.\n   */\n  setCenter() {\n    const view = this.ol3map.getView();\n    const projection = view.getProjection();\n    const center = view.getCenter();\n    if (Array.isArray(center)) {\n      const [lng, lat] = transform(center, projection, 'EPSG:4326');\n      this.gmap.setCenter(new google.maps.LatLng(lat, lng));\n    }\n  }\n\n\n  /**\n   * Rotate the gmap map like the ol3 map. The first time it is ran, the map\n   * will be resized to be a square.\n   */\n  setRotation() {\n    const view = this.ol3map.getView();\n    const rotation = view.getRotation();\n\n    const mapDiv = this.gmap.getDiv();\n    let childDiv;\n    for (let i = 0; i < mapDiv.childNodes.length; i++) {\n      const child = mapDiv.childNodes[i];\n      if (child.nodeName === 'DIV') {\n        childDiv = child;\n        break;\n      }\n    }\n    const tilesDiv = childDiv.childNodes[0];\n\n    // If googlemaps is fully loaded\n    if (tilesDiv) {\n\n      // Rotate the div containing the map tiles\n      const tilesDivStyle = tilesDiv.style;\n      tilesDivStyle.transform = 'rotate(' + rotation + 'rad)';\n\n      if (!this.ol3map.getSize()) {\n        return;\n      }\n\n      const width = this.ol3map.getSize()[0];\n      const height = this.ol3map.getSize()[1];\n\n      // Change the size of the rendering area to a square\n      if (width != height && rotation != 0) {\n        const sideSize = Math.max(width, height);\n        const mapDivStyle = mapDiv.style;\n        mapDivStyle.width = sideSize + 'px';\n        mapDivStyle.height = sideSize + 'px';\n\n        // Hide the overflow\n        this.ol3map.getTargetElement().style.overflow = 'hidden';\n\n        // Adjust the map's center to offset with the new size\n        const diffX = width - sideSize;\n        const diffY = height - sideSize;\n\n        tilesDivStyle.top = (diffY / 2) + 'px';\n        tilesDivStyle.left = (diffX / 2) + 'px';\n\n        // Trigger a resize event\n        google.maps.event.trigger(this.gmap, 'resize');\n\n        // Replace the map\n        this.setZoomAndCenter();\n\n        // Move up the elements at the bottom of the map\n        const childNodes = childDiv.childNodes;\n        for (let i = 0; i < childNodes.length; i++) {\n          // Set the bottom to where the overflow starts being hidden\n          const style = childNodes[i].style;\n          if (style.bottom == '0px') {\n            style.bottom = Math.abs(diffY) + 'px';\n          }\n        }\n\n        // Set the ol3map's viewport size to px instead of 100%\n        const viewportStyle = this.ol3map.getViewport().style;\n        if (viewportStyle.height == '100%') {\n          viewportStyle.height = height + 'px';\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Set the gmap map zoom level at the ol3 map view zoom level and the same for the center\n   */\n  setZoomAndCenter() {\n    const resolution = this.ol3map.getView().getResolution();\n    if (typeof resolution === 'number') {\n      const zoom = getZoomFromResolution(resolution, this.ol3map.getView().getMinZoom());\n      this.gmap.setZoom(zoom);\n    }\n\n    this.setCenter();\n  }\n\n\n  /**\n   * Called when the browser window is resized. Set the center of the GoogleMaps\n   * map after a slight delay.\n   * @private\n   */\n  handleWindowResize_() {\n    if (this.windowResizeTimerId_) {\n      window.clearTimeout(this.windowResizeTimerId_);\n    }\n    this.windowResizeTimerId_ = window.setTimeout(\n      this.setCenterAfterResize_.bind(this),\n      100);\n  }\n\n\n  /**\n   * Called after the browser window got resized, after a small delay.\n   * Set the center of the GoogleMaps map and reset the timeout.\n   * @private\n   */\n  setCenterAfterResize_() {\n    this.setCenter();\n    this.windowResizeTimerId_ = null;\n  }\n}\nexport default ViewHerald;\n","/**\n * @module olgm/layer/Google\n */\nimport TileLayer from 'ol/layer/Tile.js';\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [visible=true] Visibility.\n * @property {google.maps.MapTypeId<(number|string)>|string|undefined} [mapTypeId=google.maps.MapTypeId.ROADMAP] The type of google map\n * @property {Array<google.maps.MapTypeStyle>|undefined} [styles] Google map styling\n */\n\n/**\n * @classdesc\n * An ol3 layer object serving the purpose of being added to the ol3 map\n * as dummy layer. The `mapTypeId` defines which Google Maps map type the\n * layer represents.\n * @api\n */\nclass GoogleLayer extends TileLayer {\n  /**\n   * @param {module:olgm/layer/Google~Options} opt_options Layer options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n    super(options);\n\n    /**\n     * @type {google.maps.MapTypeId<(number|string)>|string}\n     * @private\n     */\n    this.mapTypeId_ = options.mapTypeId !== undefined ? options.mapTypeId :\n      google.maps.MapTypeId.ROADMAP;\n\n    /**\n     * @type {?Array<google.maps.MapTypeStyle>}\n     * @private\n     */\n    this.styles_ = options.styles ? options.styles : null;\n  }\n\n\n  /**\n   * @return {google.maps.MapTypeId<(number|string)>|string} map type id\n   * @api\n   */\n  getMapTypeId() {\n    return this.mapTypeId_;\n  }\n\n\n  /**\n   * @return {?Array<google.maps.MapTypeStyle>} map styles\n   */\n  getStyles() {\n    return this.styles_;\n  }\n}\nexport default GoogleLayer;\n","/**\n * @module olgm/herald/Layers\n */\nimport ImageLayer from 'ol/layer/Image.js';\nimport TileLayer from 'ol/layer/Tile.js';\nimport VectorLayer from 'ol/layer/Vector.js';\nimport Herald from './Herald.js';\nimport ImageWMSSourceHerald from './ImageWMSSource.js';\nimport TileSourceHerald from './TileSource.js';\nimport VectorSourceHerald from './VectorSource.js';\nimport ViewHerald from './View.js';\nimport GoogleLayer from '../layer/Google.js';\nimport PropertyListener from '../listener/PropertyListener.js';\nimport Listener from '../listener/Listener.js';\n\n/**\n * @typedef {Object} GoogleLayerCache\n * @property {module:olgm/layer/Google} layer\n * @property {Array<module:olgm/AbstractListener~AbstractListener>} listeners\n */\n\nclass LayersHerald extends Herald {\n  /**\n   * The Layers Herald is responsible of synchronizing the layers from the\n   * OpenLayers map to the Google Maps one. It listens to layers added and\n   * removed, and also takes care of existing layers when activated.\n   *\n   * It is also responsible of the activation and deactivation of the\n   * Google Maps map. When activated, it is rendered in the OpenLayers map\n   * target element, and the OpenLayers map is put inside the Google Maps map\n   * as a control that takes 100% of the size. The original state is restored\n   * when deactivated.\n   *\n   * The supported layers are:\n   *\n   * * {@link module:olgm/layer/Google~GoogleLayer}:\n   * When a google layer is added, the process of enabling the\n   * Google Maps  map is activated (if it is the first and if it's visible).\n   * If there is an existing and visible {@link module:olgm/layer/Google~GoogleLayer} in the map,\n   * then the top-most is used to define the map type id Google Maps has to\n   * switch to. **Limitation** The Google Maps map is always below the\n   * OpenLayers map, which means that the other OpenLayers layers are always\n   * on top of Google Maps.\n   *\n   * * {@link module:ol/layer/Vector~VectorLayer}:\n   * When a vector layers is added, a {@link module:olgm/herald/VectorFeature~VectorFeatureHerald} is created\n   * to manage its `ol.source.Vector`. The layer is immediately rendered\n   * fully transparent, making the interactions still possible over it\n   * while being invisible.\n   *\n   * @param {module:ol/PluggableMap} ol3map openlayers map\n   * @param {google.maps.Map} gmap google maps map\n   * @param {module:olgm/gm/MapIcon~Options} mapIconOptions map icon options\n   * @param {module:olgm/herald/Herald~WatchOptions} watchOptions for each layer,\n   * whether we should watch that type of layer or not\n   */\n  constructor(ol3map, gmap, mapIconOptions, watchOptions) {\n\n    super(ol3map, gmap);\n\n    /**\n     * @type {Array<module:olgm/layer/Google>}\n     * @private\n     */\n    this.googleLayers_ = [];\n\n    /**\n     * @type {Array<module:olgm/herald/Layers~GoogleLayerCache>}\n     * @private\n     */\n    this.googleCache_ = [];\n\n    /**\n     * @type {module:olgm/herald/ImageWMSSource}\n     * @private\n     */\n    this.imageWMSSourceHerald_ = new ImageWMSSourceHerald(ol3map, gmap);\n\n    /**\n     * @type {module:olgm/herald/TileSource}\n     * @private\n     */\n    this.tileSourceHerald_ = new TileSourceHerald(ol3map, gmap);\n\n    /**\n     * @type {module:olgm/herald/VectorSource}\n     * @private\n     */\n    this.vectorSourceHerald_ = new VectorSourceHerald(\n      ol3map, gmap, mapIconOptions);\n\n    /**\n     * @type {module:olgm/herald/View}\n     * @private\n     */\n    this.viewHerald_ = new ViewHerald(ol3map, gmap);\n\n    /**\n     * @type {module:olgm/herald/Herald~WatchOptions}\n     * @private\n     */\n    this.watchOptions_ = watchOptions;\n\n\n    // === Elements  === //\n\n    /**\n     * @type {Node}\n     * @private\n     */\n    this.gmapEl_ = gmap.getDiv();\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.ol3mapEl_ = ol3map.getViewport();\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.targetEl_ = ol3map.getTargetElement();\n\n    /**\n     * Flag that determines whether the GoogleMaps map is currently active, i.e.\n     * is currently shown and has the OpenLayers map added as one of its control.\n     * @type {boolean}\n     * @private\n     */\n    this.googleMapsIsActive_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.ol3mapIsRenderered_ = false;\n\n\n    // some controls, like the ol.control.ZoomSlider, require the map div\n    // to have a size. While activating Google Maps, the size of the ol3 map\n    // becomes moot. The code below fixes that.\n    const center = this.ol3map.getView().getCenter();\n    if (!center) {\n      this.ol3map.getView().once('change:center', () => {\n        this.ol3map.once('postrender', () => {\n          this.ol3mapIsRenderered_ = true;\n          this.toggleGoogleMaps_();\n        });\n        this.toggleGoogleMaps_();\n      });\n    } else {\n      this.ol3map.once('postrender', () => {\n        this.ol3mapIsRenderered_ = true;\n        this.toggleGoogleMaps_();\n      });\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  activate() {\n    super.activate();\n\n    this.listener = new PropertyListener(this.ol3map, null, 'layergroup', (layerGroup, oldLayerGroup) => {\n      return new PropertyListener(layerGroup, oldLayerGroup, 'layers', (layers, oldLayers) => {\n        if (oldLayers) {\n          oldLayers.forEach(layer => this.unwatchLayer_(layer));\n        }\n        layers.forEach(layer => this.watchLayer_(layer));\n\n        return new Listener([\n          // watch existing layers\n          layers.on('add', event => this.handleLayersAdd_(event)),\n          layers.on('remove', event => this.handleLayersRemove_(event))\n        ]);\n      });\n    });\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  deactivate() {\n    // unwatch existing layers\n    this.ol3map.getLayers().forEach((layer) => this.unwatchLayer_(layer));\n\n    super.deactivate();\n  }\n\n\n  /**\n   * @return {boolean} whether google maps is active or not\n   */\n  getGoogleMapsActive() {\n    return this.googleMapsIsActive_;\n  }\n\n\n  /**\n   * Set the googleMapsIsActive value and spread the change to the heralds\n   * @param {boolean} active value to update the google maps active flag with\n   * @private\n   */\n  setGoogleMapsActive_(active) {\n    this.googleMapsIsActive_ = active;\n    this.imageWMSSourceHerald_.setGoogleMapsActive(active);\n    this.tileSourceHerald_.setGoogleMapsActive(active);\n    this.vectorSourceHerald_.setGoogleMapsActive(active);\n  }\n\n\n  /**\n   * Set the watch options\n   * @param {module:olgm/herald/Herald~WatchOptions} watchOptions whether each layer type\n   * should be watched\n   * @api\n   */\n  setWatchOptions(watchOptions) {\n    this.watchOptions_ = watchOptions;\n\n    // Re-watch the appropriate layers\n    this.deactivate();\n    this.activate();\n  }\n\n\n  /**\n   * Callback method fired when a new layer is added to the map.\n   * @param {module:ol/Collection~CollectionEvent} event Collection event.\n   * @private\n   */\n  handleLayersAdd_(event) {\n    const layer = /** @type {module:ol/layer/Base} */ (event.element);\n    this.watchLayer_(layer);\n    this.orderLayers();\n  }\n\n\n  /**\n   * Callback method fired when a layer is removed from the map.\n   * @param {module:ol/Collection~CollectionEvent} event Collection event.\n   * @private\n   */\n  handleLayersRemove_(event) {\n    const layer = /** @type {module:ol/layer/Base} */ (event.element);\n    this.unwatchLayer_(layer);\n    this.orderLayers();\n  }\n\n\n  /**\n   * Watch the layer\n   * @param {module:ol/layer/Base} layer layer to watch\n   * @private\n   */\n  watchLayer_(layer) {\n    if (layer instanceof GoogleLayer) {\n      this.watchGoogleLayer_(layer);\n    } else if (layer instanceof VectorLayer &&\n          this.watchOptions_.vector !== false) {\n      this.vectorSourceHerald_.watchLayer(layer);\n    } else if (layer instanceof TileLayer &&\n          this.watchOptions_.tile !== false) {\n      this.tileSourceHerald_.watchLayer(layer);\n    } else if (layer instanceof ImageLayer &&\n          this.watchOptions_.image !== false) {\n      this.imageWMSSourceHerald_.watchLayer(layer);\n    }\n  }\n\n\n  /**\n   * Watch the google layer\n   * @param {module:olgm/layer/Google} layer google layer to watch\n   * @private\n   */\n  watchGoogleLayer_(layer) {\n    this.googleLayers_.push(layer);\n    this.googleCache_.push(/** @type {module:olgm/herald/Layers~GoogleLayerCache} */ ({\n      layer: layer,\n      listener: new PropertyListener(layer, null, 'visible', () => this.toggleGoogleMaps_())\n    }));\n  }\n\n\n  /**\n   * Unwatch the layer\n   * @param {module:ol/layer/Base} layer layer to unwatch\n   * @private\n   */\n  unwatchLayer_(layer) {\n    if (layer instanceof GoogleLayer) {\n      this.unwatchGoogleLayer_(layer);\n    } else if (layer instanceof VectorLayer) {\n      this.vectorSourceHerald_.unwatchLayer(layer);\n    } else if (layer instanceof TileLayer) {\n      this.tileSourceHerald_.unwatchLayer(layer);\n    } else if (layer instanceof ImageLayer) {\n      this.imageWMSSourceHerald_.unwatchLayer(layer);\n    }\n  }\n\n\n  /**\n   * Unwatch the google layer\n   * @param {module:olgm/layer/Google} layer google layer to unwatch\n   * @private\n   */\n  unwatchGoogleLayer_(layer) {\n    const index = this.googleLayers_.indexOf(layer);\n    if (index !== -1) {\n      this.googleLayers_.splice(index, 1);\n\n      const cacheItem = this.googleCache_[index];\n      cacheItem.listener.unlisten();\n\n      this.googleCache_.splice(index, 1);\n\n      this.toggleGoogleMaps_();\n    }\n  }\n\n\n  /**\n   * Activates the GoogleMaps map, i.e. put it in the ol3 map target and put\n   * the ol3 map inside the gmap controls.\n   * @private\n   */\n  activateGoogleMaps_() {\n\n    const center = this.ol3map.getView().getCenter();\n    if (this.googleMapsIsActive_ || !this.ol3mapIsRenderered_ || !center) {\n      return;\n    }\n\n    this.targetEl_.removeChild(this.ol3mapEl_);\n    this.targetEl_.appendChild(this.gmapEl_);\n    const index = parseInt(google.maps.ControlPosition.TOP_LEFT, 10);\n    this.gmap.controls[index].push(\n      this.ol3mapEl_);\n\n    this.viewHerald_.activate();\n\n    // the map div of GoogleMaps doesn't like being tossed aroud. The line\n    // below fixes the UI issue of wrong size of the tiles of GoogleMaps\n    google.maps.event.trigger(this.gmap, 'resize');\n\n    // it's also possible that the google maps map is not exactly at the\n    // correct location. Fix this manually here\n    this.viewHerald_.setRotation();\n    this.viewHerald_.setZoomAndCenter();\n\n    this.setGoogleMapsActive_(true);\n\n    // activate all cache items\n    this.imageWMSSourceHerald_.activate();\n    this.tileSourceHerald_.activate();\n    this.vectorSourceHerald_.activate();\n\n    this.orderLayers();\n  }\n\n\n  /**\n   * Deactivates the GoogleMaps map, i.e. put the ol3 map back in its target\n   * and remove the gmap map.\n   * @private\n   */\n  deactivateGoogleMaps_() {\n\n    if (!this.googleMapsIsActive_) {\n      return;\n    }\n\n    const index = parseInt(google.maps.ControlPosition.TOP_LEFT, 10);\n    this.gmap.controls[index].removeAt(0);\n    this.targetEl_.removeChild(this.gmapEl_);\n    this.targetEl_.appendChild(this.ol3mapEl_);\n\n    this.viewHerald_.deactivate();\n\n    this.ol3mapEl_.style.position = 'relative';\n\n    // deactivate all cache items\n    this.imageWMSSourceHerald_.deactivate();\n    this.tileSourceHerald_.deactivate();\n    this.vectorSourceHerald_.deactivate();\n\n    this.setGoogleMapsActive_(false);\n  }\n\n\n  /**\n   * This method takes care of activating or deactivating the GoogleMaps map.\n   * It is activated if at least one visible Google layer is currently in the\n   * ol3 map (and vice-versa for deactivation). The top-most layer is used\n   * to determine that. It is also used to change the GoogleMaps mapTypeId\n   * accordingly too to fit the top-most ol3 Google layer.\n   * @private\n   */\n  toggleGoogleMaps_() {\n\n    let found = null;\n\n    // find top-most Google layer\n    this.ol3map.getLayers().getArray().slice(0).reverse().every(\n      function(layer) {\n        if (layer instanceof GoogleLayer &&\n              layer.getVisible() &&\n              this.googleLayers_.indexOf(layer) !== -1) {\n          found = layer;\n          return false;\n        } else {\n          return true;\n        }\n      },\n      this);\n\n    if (found) {\n      // activate before changing mapTypeId/styles\n      this.activateGoogleMaps_();\n\n      // set mapTypeId\n      this.gmap.setMapTypeId(found.getMapTypeId());\n      // set styles\n      const styles = found.getStyles();\n      if (styles) {\n        this.gmap.setOptions({'styles': styles});\n      } else {\n        this.gmap.setOptions({'styles': null});\n      }\n    } else {\n      // deactivate\n      this.deactivateGoogleMaps_();\n    }\n  }\n\n\n  /**\n   * Order the layers for each herald that supports it\n   * @api\n   */\n  orderLayers() {\n    this.imageWMSSourceHerald_.orderLayers();\n    this.tileSourceHerald_.orderLayers();\n  }\n\n\n  /**\n   * For each layer type that support refreshing, tell them to refresh\n   * @api\n   */\n  refresh() {\n    this.imageWMSSourceHerald_.refresh();\n  }\n}\n\n\nexport default LayersHerald;\n","/**\n * @module olgm/OLGoogleMaps\n */\nimport Abstract from './Abstract.js';\nimport LayersHerald from './herald/Layers.js';\nimport {assign} from './obj.js';\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/PluggableMap} map The OpenLayers map.\n * @property {module:olgm/gm/MapIcon~Options} [mapIconOptions] Options for the MapIcon object if it exists\n * @property {module:olgm/herald/Herald~WatchOptions} [watch] For each layer type, a boolean indicating whether the library should watch and let layers of that type should be rendered by Google Maps or not. Defaults to `true` for each option.\n * @property {google.maps.MapOptions} [gmapOptions] Options for the gmap to override the defaults\n */\n\n/**\n * @classdesc\n * The main component of this library. It binds an existing OpenLayers map to\n * a Google Maps map it creates through the use of `herald` objects. Each\n * herald is responsible of synchronizing something from the OpenLayers map\n * to the Google Maps one, which makes OpenLayers the master source of\n * interactions. This allows the development of applications without having\n * to worry about writing code that uses the Google Maps API.\n *\n * Here's an architecture overview of what the different heralds, where they\n * are created and on what they act:\n *\n *     olgm.OLGoogleMaps <-- ol.Map\n *      |\n *      |__olgm.herald.Layers <-- ol.Collection<ol.layer.Base>\n *         |                      |\n *         |                      |__olgm.layer.Google\n *         |                      |\n *         |                      |__ol.layer.Vector\n *         |                      |\n *         |                      |__ol.layer.TileLayer\n *         |                      |\n *         |                      |__ol.layer.ImageLayer\n *         |\n *         |__olgm.herald.View <-- ol.View\n *         |\n *         |__olgm.herald.TileSource <-- ol.source.Tile\n *         |\n *         |__olgm.herald.ImageWMSSource <-- ol.source.ImageWMS\n *         |\n *         |__olgm.herald.VectorSource <-- ol.source.Vector\n *            |\n *            |__olgm.herald.Feature <-- ol.Feature\n *\n * @api\n */\nclass OLGoogleMaps extends Abstract {\n  /**\n   * @param {module:olgm/OLGoogleMaps~Options} options Options.\n   */\n  constructor(options) {\n    const gmapEl = document.createElement('div');\n    gmapEl.style.height = 'inherit';\n    gmapEl.style.width = 'inherit';\n\n    const gmapOptions = assign({\n      disableDefaultUI: true,\n      disableDoubleClickZoom: true,\n      draggable: false,\n      keyboardShortcuts: false,\n      mapTypeId: google.maps.MapTypeId.ROADMAP,\n      scrollwheel: false,\n      streetViewControl: false\n    }, options.gmapOptions);\n\n    const gmap = new google.maps.Map(gmapEl, gmapOptions);\n\n    super(options.map, gmap);\n\n    /**\n     * @type {Array<module:olgm/herald/Herald>}\n     * @private\n     */\n    this.heralds_ = [];\n\n    const watchOptions = options.watch !== undefined ?\n      options.watch : {};\n\n    const mapIconOptions = options.mapIconOptions !== undefined ?\n      options.mapIconOptions : {};\n\n    /**\n     * @type {module:olgm/herald/Layers}\n     * @private\n     */\n    this.layersHerald_ = new LayersHerald(\n      this.ol3map, this.gmap, mapIconOptions, watchOptions);\n    this.heralds_.push(this.layersHerald_);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.active_ = false;\n  }\n\n  /**\n   * @api\n   */\n  activate() {\n\n    if (this.active_) {\n      return;\n    }\n\n    // activate heralds\n    for (let i = 0, len = this.heralds_.length; i < len; i++) {\n      this.heralds_[i].activate();\n    }\n\n    this.active_ = true;\n  }\n\n\n  /**\n   * @api\n   */\n  deactivate() {\n\n    if (!this.active_) {\n      return;\n    }\n\n    // deactivate heralds\n    for (let i = 0, len = this.heralds_.length; i < len; i++) {\n      this.heralds_[i].deactivate();\n    }\n\n    this.active_ = false;\n  }\n\n\n  /**\n   * @return {boolean} whether or not google maps is active\n   * @api\n   */\n  getGoogleMapsActive() {\n    return this.active_ && this.layersHerald_.getGoogleMapsActive();\n  }\n\n\n  /**\n   * @return {google.maps.Map} the google maps map\n   * @api\n   */\n  getGoogleMapsMap() {\n    return this.gmap;\n  }\n\n\n  /**\n   * Set the watch options\n   * @param {module:olgm/herald/Herald~WatchOptions} watchOptions whether each layer type\n   * should be watched\n   * @api\n   */\n  setWatchOptions(watchOptions) {\n    const newWatchOptions = watchOptions !== undefined ? watchOptions : {};\n    this.layersHerald_.setWatchOptions(newWatchOptions);\n  }\n\n\n  /**\n   * @api\n   */\n  toggle() {\n    if (this.active_) {\n      this.deactivate();\n    } else {\n      this.activate();\n    }\n  }\n\n\n  /**\n   * Trigger the layer ordering functions in the heralds. We listen for layers\n   * added and removed, which usually happens when we change the order of the\n   * layers in OL3, but this function allows refreshing it manually in case\n   * the order is being change in another way.\n   * @api\n   */\n  orderLayers() {\n    this.layersHerald_.orderLayers();\n  }\n\n\n  /**\n   * Refresh layers and features that might need it (only ImageWMS so far)\n   * @api\n   */\n  refresh() {\n    this.layersHerald_.refresh();\n  }\n}\n\n\nexport default OLGoogleMaps;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove'\n};\n","/**\n * @module ol/Collection\n */\nimport AssertionError from './AssertionError.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n */\nexport class CollectionEvent extends Event {\n\n  /**\n   * @param {CollectionEventType} type Type.\n   * @param {*=} opt_element Element.\n   * @param {number} opt_index The index of the added or removed element.\n   */\n  constructor(type, opt_element, opt_index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {*}\n     * @api\n     */\n    this.element = opt_element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = opt_index;\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n\n  /**\n   * @param {Array<T>=} opt_array Array.\n   * @param {Options=} opt_options Collection options.\n   */\n  constructor(opt_array, opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = opt_array ? opt_array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index));\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index < n) {\n      if (this.unique_) {\n        this.assertUnique_(elem, index);\n      }\n      const prev = this.array_[index];\n      this.array_[index] = elem;\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index));\n      this.dispatchEvent(\n        new CollectionEvent(CollectionEventType.ADD, elem, index));\n    } else {\n      for (let j = n; j < index; ++j) {\n        this.insertAt(j, undefined);\n      }\n      this.insertAt(index, elem);\n    }\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number=} opt_except Optional index to ignore.\n   */\n  assertUnique_(elem, opt_except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== opt_except) {\n        throw new AssertionError(58);\n      }\n    }\n  }\n}\n\n\nexport default Collection;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel'\n};\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active'\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} options Options.\n   */\n  constructor(options) {\n    super();\n\n    if (options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../PluggableMap.js\").default} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number=} opt_duration Duration.\n */\nexport function pan(view, delta, opt_duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: opt_duration !== undefined ? opt_duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center)\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate=} opt_anchor Anchor coordinate in the user projection.\n * @param {number=} opt_duration Duration.\n */\nexport function zoomByDelta(view, delta, opt_anchor, opt_duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: opt_anchor,\n    duration: opt_duration !== undefined ? opt_duration : 250,\n    easing: easeOut\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a\n * doubleclick) and eventually zooms the map.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {DoubleClickZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n    const browserEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n    const map = mapBrowserEvent.map;\n    const anchor = mapBrowserEvent.coordinate;\n    const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n    const view = map.getView();\n    zoomByDelta(view, delta, anchor, this.duration_);\n    mapBrowserEvent.preventDefault();\n    stopEvent = true;\n  }\n  return !stopEvent;\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/coordinate\n */\nimport {modulo} from './math.js';\nimport {padNumber} from './string.js';\n\n\n/**\n * An array of numbers representing an xy coordinate. Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + r * dx / d;\n  const y = y0 + r * dy / d;\n\n  return [x, y];\n}\n\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along = (dx === 0 && dy === 0) ? 0 :\n    ((dx * (x0 - x1)) + (dy * (y0 - y1))) / ((dx * dx + dy * dy) || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY();\n *     var out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var stringifyFunc = createStringXY(2);\n *     var out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(opt_fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function(coordinate) {\n      return toStringXY(coordinate, opt_fractionDigits);\n    }\n  );\n}\n\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, opt_fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const dflPrecision = opt_fractionDigits || 0;\n  const precision = Math.pow(10, dflPrecision);\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = x - (deg * 3600) - (min * 60);\n  sec = Math.ceil(sec * precision) / precision;\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  return deg + '\\u00b0 ' + padNumber(min, 2) + '\\u2032 ' +\n    padNumber(sec, 2, dflPrecision) + '\\u2033' +\n    (normalizedDegrees == 0 ? '' : ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0));\n}\n\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var template = 'Coordinate is ({x}|{y}).';\n *     var out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, opt_fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(opt_fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(opt_fractionDigits));\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate,\n    closestOnSegment(coordinate, segment));\n}\n\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, opt_fractionDigits) {\n  if (coordinate) {\n    return degreesToStringHDMS('NS', coordinate[1], opt_fractionDigits) + ' ' +\n        degreesToStringHDMS('EW', coordinate[0], opt_fractionDigits);\n  } else {\n    return '';\n  }\n}\n\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate';\n *\n *     var coord = [7.85, 47.983333];\n *     var out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number=} opt_fractionDigits The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, opt_fractionDigits) {\n  return format(coordinate, '{x}, {y}', opt_fractionDigits);\n}\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {assert} from '../asserts.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport {WEBKIT, MAC} from '../has.js';\n\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function(event) {\n  return event.target.getTargetElement() === document.activeElement;\n};\n\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function(mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (mapBrowserEvent.originalEvent);\n  return originalEvent.button == 0 &&\n      !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function(mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      !originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey;\n};\n\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function(mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (mapBrowserEvent.originalEvent);\n  return (\n    !originalEvent.altKey &&\n      !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n      originalEvent.shiftKey);\n};\n\n\n/**\n * Return `true` if the target element is not editable, i.e. not a `<input>`-,\n * `<select>`- or `<textarea>`-element, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function(mapBrowserEvent) {\n  const target = mapBrowserEvent.target;\n  const tagName = /** @type {Element} */ (target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n      tagName !== 'SELECT' &&\n      tagName !== 'TEXTAREA');\n};\n\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function(mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvt !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  // see http://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See http://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function(mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserPointerEvent\").default} */ (mapBrowserEvent).pointerEvent;\n  assert(pointerEvent !== undefined, 56); // mapBrowserEvent must originate from a pointer event\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\nimport {getValues} from '../obj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default)} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserPointerEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {!Object<string, PointerEvent>}\n     * @private\n     */\n    this.trackedPointers_ = {};\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @override\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        if (handled) {\n          mapBrowserEvent.preventDefault();\n        }\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (isPointerDraggingEvent(mapBrowserEvent)) {\n      const event = mapBrowserEvent.pointerEvent;\n\n      const id = event.pointerId.toString();\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        delete this.trackedPointers_[id];\n      } else if (mapBrowserEvent.type ==\n          MapBrowserEventType.POINTERDOWN) {\n        this.trackedPointers_[id] = event;\n      } else if (id in this.trackedPointers_) {\n        // update only when there was a pointerdown event for this pointer\n        this.trackedPointers_[id] = event;\n      }\n      this.targetPointers = getValues(this.trackedPointers_);\n    }\n  }\n\n}\n\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {import(\"../pixel.js\").Pixel} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return [clientX / length, clientY / length];\n}\n\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Event.\n * @return {boolean} Whether the event is a pointerdown, pointerdrag\n *     or pointerup event.\n */\nfunction isPointerDraggingEvent(mapBrowserEvent) {\n  const type = mapBrowserEvent.type;\n  return type === MapBrowserEventType.POINTERDOWN ||\n    type === MapBrowserEventType.POINTERDRAG ||\n    type === MapBrowserEventType.POINTERUP;\n}\n\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {scale as scaleCoordinate, rotate as rotateCoordinate} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {noModifierKeys, primaryAction} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~noModifierKeys} and {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : defaultCondition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.panning_) {\n      this.panning_ = true;\n      this.getMap().getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = centroidFromPointers(targetPointers);\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1]\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle)\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    } else {\n      if (this.kinetic_) {\n        // reset so we don't overestimate the kinetic energy after\n        // after one finger up, tiny drag, second finger up\n        this.kinetic_.begin();\n      }\n      this.lastCentroid = null;\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n/**\n * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserEvent Browser event.\n * @return {boolean} Combined condition result.\n */\nfunction defaultCondition(mapBrowserEvent) {\n  return noModifierKeys(mapBrowserEvent) && primaryAction(mapBrowserEvent);\n}\n\nexport default DragPan;\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  } else {\n    return undefined;\n  }\n}\n\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = 2 * Math.PI / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean=} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      } else {\n        return undefined;\n      }\n    });\n}\n\n\n/**\n * @param {number=} opt_tolerance Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(opt_tolerance) {\n  const tolerance = opt_tolerance || toRadians(5);\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} opt_isMoving True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function(rotation, opt_isMoving) {\n      if (opt_isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        if (Math.abs(rotation) <= tolerance) {\n          return 0;\n        } else {\n          return rotation;\n        }\n      } else {\n        return undefined;\n      }\n    });\n}\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {disable} from '../rotationconstraint.js';\nimport {altShiftKeysOnly, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      stopDown: FALSE\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta =\n        Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../PluggableMap.js\").default}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]]\n    ];\n    const coordinates = pixels.map(this.map_.getCoordinateFromPixelInternal, this.map_);\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {always, mouseOnly, mouseActionButton} from '../events/condition.js';\nimport {VOID} from '../functions.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\n\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~always}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default)} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nclass DragBoxEvent extends Event {\n\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom}).\n *\n * This interaction is only supported for mouse devices.\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    /**\n     * Function to execute just before `onboxend` is fired\n     * @type {function(this:DragBox, import(\"../MapBrowserEvent.js\").default): void}\n     * @private\n     */\n    this.onBoxEnd_ = options.onBoxEnd ? options.onBoxEnd : VOID;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition ?\n      options.boxEndCondition : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXDRAG,\n      mapBrowserEvent.coordinate, mapBrowserEvent));\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    this.box_.setMap(null);\n\n    if (this.boxEndCondition_(mapBrowserEvent, this.startPixel_, mapBrowserEvent.pixel)) {\n      this.onBoxEnd_(mapBrowserEvent);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXEND,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (mouseActionButton(mapBrowserEvent) &&\n        this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(new DragBoxEvent(DragBoxEventType.BOXSTART,\n        mapBrowserEvent.coordinate, mapBrowserEvent));\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport {createOrUpdateFromCoordinates, getBottomLeft, getCenter, getTopRight, scaleFromCenter} from '../extent.js';\nimport DragBox from './DragBox.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n      onBoxEnd: onBoxEnd\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n}\n\n\n/**\n * @this {DragZoom}\n */\nfunction onBoxEnd() {\n  const map = this.getMap();\n  const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n  const size = /** @type {!import(\"../size.js\").Size} */ (map.getSize());\n  let extent = this.getGeometry().getExtent();\n\n  if (this.out_) {\n    const mapExtent = view.calculateExtentInternal(size);\n    const boxPixelExtent = createOrUpdateFromCoordinates([\n      map.getPixelFromCoordinateInternal(getBottomLeft(extent)),\n      map.getPixelFromCoordinateInternal(getTopRight(extent))]);\n    const factor = view.getResolutionForExtentInternal(boxPixelExtent, size);\n\n    scaleFromCenter(mapExtent, 1 / factor);\n    extent = mapExtent;\n  }\n\n  const resolution = view.getConstrainedResolution(view.getResolutionForExtentInternal(extent, size));\n  const center = view.getConstrainedCenter(getCenter(extent), resolution);\n\n  view.animateInternal({\n    resolution: resolution,\n    center: center,\n    duration: this.duration_,\n    easing: easeOut\n  });\n}\n\n\nexport default DragZoom;\n","/**\n * @module ol/events/KeyCode\n */\n\n/**\n * @enum {number}\n * @const\n */\nexport default {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport KeyCode from '../events/KeyCode.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~noModifierKeys} and\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function(mapBrowserEvent) {\n      return noModifierKeys(mapBrowserEvent) &&\n        targetNotEditable(mapBrowserEvent);\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition !== undefined ?\n      options.condition : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ = options.pixelDelta !== undefined ?\n      options.pixelDelta : 128;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n * pressed).\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardPan}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const keyCode = keyEvent.keyCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (keyCode == KeyCode.DOWN ||\n        keyCode == KeyCode.LEFT ||\n        keyCode == KeyCode.RIGHT ||\n        keyCode == KeyCode.UP)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n      let deltaX = 0, deltaY = 0;\n      if (keyCode == KeyCode.DOWN) {\n        deltaY = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.LEFT) {\n        deltaX = -mapUnitsDelta;\n      } else if (keyCode == KeyCode.RIGHT) {\n        deltaX = mapUnitsDelta;\n      } else {\n        deltaY = mapUnitsDelta;\n      }\n      const delta = [deltaX, deltaY];\n      rotateCoordinate(delta, view.getRotation());\n      pan(view, delta, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~targetNotEditable}.\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : targetNotEditable;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n  }\n\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} if it was a\n * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n * key pressed was '+' or '-').\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {KeyboardZoom}\n */\nfunction handleEvent(mapBrowserEvent) {\n  let stopEvent = false;\n  if (mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS) {\n    const keyEvent = /** @type {KeyboardEvent} */ (mapBrowserEvent.originalEvent);\n    const charCode = keyEvent.charCode;\n    if (this.condition_(mapBrowserEvent) &&\n        (charCode == '+'.charCodeAt(0) || charCode == '-'.charCodeAt(0))) {\n      const map = mapBrowserEvent.map;\n      const delta = (charCode == '+'.charCodeAt(0)) ? this.delta_ : -this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, undefined, this.duration_);\n      mapBrowserEvent.preventDefault();\n      stopEvent = true;\n    }\n  }\n  return !stopEvent;\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport {always} from '../events/condition.js';\nimport EventType from '../events/EventType.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {clamp} from '../math.js';\n\n\n/**\n * @enum {string}\n */\nexport const Mode = {\n  TRACKPAD: 'trackpad',\n  WHEEL: 'wheel'\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition~always}.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Interaction.js\").InteractionOptions} */ (options));\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ = options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {?}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @type {?}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.trackpadDeltaPerZoom_ = 300;\n\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const view = this.getMap().getView();\n    view.endInteraction(undefined, Math.sign(this.lastDelta_), this.lastAnchor_);\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    mapBrowserEvent.preventDefault();\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (mapBrowserEvent.originalEvent);\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX &&\n          wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    } else {\n      this.lastDelta_ = delta;\n    }\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ?\n        Mode.TRACKPAD :\n        Mode.WHEEL;\n    }\n\n    if (this.mode_ === Mode.TRACKPAD) {\n      const view = map.getView();\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(this.endInteraction_.bind(this), this.trackpadEventGap_);\n      view.adjustZoom(-delta / this.trackpadDeltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(this.handleWheelZoom_.bind(this, map), timeLeft);\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    const delta = clamp(this.totalDelta_, -this.maxDelta_, this.maxDelta_);\n    zoomByDelta(view, -delta, this.lastAnchor_, this.duration_);\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX);\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ &&\n          Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    const viewportPosition = map.getViewport().getBoundingClientRect();\n    const centroid = centroidFromPointers(this.targetPointers);\n    centroid[0] -= viewportPosition.left;\n    centroid[1] -= viewportPosition.top;\n    this.anchor_ = map.getCoordinateFromPixelInternal(centroid);\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/interaction/DragAndDrop\n */\n// FIXME should handle all geo-referenced data, not just vector data\n\nimport {TRUE} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport Interaction from './Interaction.js';\nimport {get as getProjection} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {Array<typeof import(\"../format/Feature.js\").default>} [formatConstructors] Format constructors.\n * @property {import(\"../source/Vector.js\").default} [source] Optional vector source where features will be added.  If a source is provided\n * all existing features will be removed and new features will be added when\n * they are dropped on the target.  If you want to add features to a vector\n * source without removing the existing features (append only), instead of\n * providing the source option listen for the \"addfeatures\" event.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Target projection. By default, the map's view's projection is used.\n * @property {HTMLElement} [target] The element that is used as the drop target, default is the viewport element.\n */\n\n\n/**\n * @enum {string}\n */\nconst DragAndDropEventType = {\n  /**\n   * Triggered when features are added\n   * @event DragAndDropEvent#addfeatures\n   * @api\n   */\n  ADD_FEATURES: 'addfeatures'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragAndDrop~DragAndDrop} instances are instances\n * of this type.\n */\nclass DragAndDropEvent extends Event {\n\n  /**\n   * @param {DragAndDropEventType} type Type.\n   * @param {File} file File.\n   * @param {Array<import(\"../Feature.js\").default>=} opt_features Features.\n   * @param {import(\"../proj/Projection.js\").default=} opt_projection Projection.\n   */\n  constructor(type, file, opt_features, opt_projection) {\n\n    super(type);\n\n    /**\n     * The features parsed from dropped data.\n     * @type {Array<import(\"../Feature.js\").FeatureLike>|undefined}\n     * @api\n     */\n    this.features = opt_features;\n\n    /**\n     * The dropped file.\n     * @type {File}\n     * @api\n     */\n    this.file = file;\n\n    /**\n     * The feature projection.\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     * @api\n     */\n    this.projection = opt_projection;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Handles input of vector data by drag and drop.\n * @api\n *\n * @fires DragAndDropEvent\n */\nclass DragAndDrop extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super({\n      handleEvent: TRUE\n    });\n\n    /**\n     * @private\n     * @type {Array<typeof import(\"../format/Feature.js\").default>}\n     */\n    this.formatConstructors_ = options.formatConstructors ?\n      options.formatConstructors : [];\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.projection_ = options.projection ?\n      getProjection(options.projection) : null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.dropListenKeys_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../source/Vector.js\").default}\n     */\n    this.source_ = options.source || null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target = options.target ? options.target : null;\n\n  }\n\n  /**\n   * @param {File} file File.\n   * @param {Event} event Load event.\n   * @private\n   */\n  handleResult_(file, event) {\n    const result = event.target.result;\n    const map = this.getMap();\n    let projection = this.projection_;\n    if (!projection) {\n      const view = map.getView();\n      projection = view.getProjection();\n    }\n\n    const formatConstructors = this.formatConstructors_;\n    let features = [];\n    for (let i = 0, ii = formatConstructors.length; i < ii; ++i) {\n      const format = new formatConstructors[i]();\n      features = this.tryReadFeatures_(format, result, {\n        featureProjection: projection\n      });\n      if (features && features.length > 0) {\n        break;\n      }\n    }\n    if (this.source_) {\n      this.source_.clear();\n      this.source_.addFeatures(features);\n    }\n    this.dispatchEvent(\n      new DragAndDropEvent(\n        DragAndDropEventType.ADD_FEATURES, file,\n        features, projection));\n  }\n\n  /**\n   * @private\n   */\n  registerListeners_() {\n    const map = this.getMap();\n    if (map) {\n      const dropArea = this.target ? this.target : map.getViewport();\n      this.dropListenKeys_ = [\n        listen(dropArea, EventType.DROP, handleDrop, this),\n        listen(dropArea, EventType.DRAGENTER, handleStop, this),\n        listen(dropArea, EventType.DRAGOVER, handleStop, this),\n        listen(dropArea, EventType.DROP, handleStop, this)\n      ];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (!this.getActive() && active) {\n      this.registerListeners_();\n    }\n    if (this.getActive() && !active) {\n      this.unregisterListeners_();\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.unregisterListeners_();\n    super.setMap(map);\n    if (this.getActive()) {\n      this.registerListeners_();\n    }\n  }\n\n  /**\n   * @param {import(\"../format/Feature.js\").default} format Format.\n   * @param {string} text Text.\n   * @param {import(\"../format/Feature.js\").ReadOptions} options Read options.\n   * @private\n   * @return {Array<import(\"../Feature.js\").FeatureLike>} Features.\n   */\n  tryReadFeatures_(format, text, options) {\n    try {\n      return format.readFeatures(text, options);\n    } catch (e) {\n      return null;\n    }\n  }\n\n  /**\n   * @private\n   */\n  unregisterListeners_() {\n    if (this.dropListenKeys_) {\n      this.dropListenKeys_.forEach(unlistenByKey);\n      this.dropListenKeys_ = null;\n    }\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n * @this {DragAndDrop}\n */\nfunction handleDrop(event) {\n  const files = event.dataTransfer.files;\n  for (let i = 0, ii = files.length; i < ii; ++i) {\n    const file = files.item(i);\n    const reader = new FileReader();\n    reader.addEventListener(EventType.LOAD, this.handleResult_.bind(this, file));\n    reader.readAsText(file);\n  }\n}\n\n\n/**\n * @param {DragEvent} event Event.\n */\nfunction handleStop(event) {\n  event.stopPropagation();\n  event.preventDefault();\n  event.dataTransfer.dropEffect = 'copy';\n}\n\n\nexport default DragAndDrop;\n","/**\n * @module ol/interaction/DragRotateAndZoom\n */\nimport {shiftKeyOnly, mouseOnly} from '../events/condition.js';\nimport PointerInteraction from './Pointer.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition~shiftKeyOnly}.\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n\n/**\n * @classdesc\n * Allows the user to zoom and rotate the map by clicking and dragging\n * on the map.  By default, this interaction is limited to when the shift\n * key is held down.\n *\n * This interaction is only supported for mouse devices.\n *\n * And this interaction is not included in the default interactions.\n * @api\n */\nclass DragRotateAndZoom extends PointerInteraction {\n\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastMagnitude_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const deltaX = offset[0] - size[0] / 2;\n    const deltaY = size[1] / 2 - offset[1];\n    const theta = Math.atan2(deltaY, deltaX);\n    const magnitude = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n    const view = map.getView();\n    if (this.lastAngle_ !== undefined) {\n      const angleDelta = this.lastAngle_ - theta;\n      view.adjustRotationInternal(angleDelta);\n    }\n    this.lastAngle_ = theta;\n    if (this.lastMagnitude_ !== undefined) {\n      view.adjustResolutionInternal(this.lastMagnitude_ / magnitude);\n    }\n    if (this.lastMagnitude_ !== undefined) {\n      this.lastScaleDelta_ = this.lastMagnitude_ / magnitude;\n    }\n    this.lastMagnitude_ = magnitude;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n    view.endInteraction(this.duration_, direction);\n    this.lastScaleDelta_ = 0;\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (this.condition_(mapBrowserEvent)) {\n      mapBrowserEvent.map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      this.lastMagnitude_ = undefined;\n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n\nexport default DragRotateAndZoom;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, opt_frameState) {\n\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./PluggableMap.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./PluggableMap.js\").FrameState}\n     * @api\n     */\n    this.frameState = opt_frameState !== undefined ? opt_frameState : null;\n\n  }\n\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/PluggableMap~PluggableMap} for which events trigger a map browser event.\n */\nclass MapBrowserEvent extends MapEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {Event} browserEvent Browser event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, browserEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, opt_frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {Event}\n     * @api\n     */\n    this.originalEvent = browserEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = opt_dragging !== undefined ? opt_dragging : false;\n\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original browser event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @override\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    this.originalEvent.preventDefault();\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @override\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    this.originalEvent.stopPropagation();\n  }\n}\n\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserPointerEvent\n */\nimport MapBrowserEvent from './MapBrowserEvent.js';\n\nclass MapBrowserPointerEvent extends MapBrowserEvent {\n\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./PluggableMap.js\").default} map Map.\n   * @param {PointerEvent} pointerEvent Pointer event.\n   * @param {boolean=} opt_dragging Is the map currently being dragged?\n   * @param {?import(\"./PluggableMap.js\").FrameState=} opt_frameState Frame state.\n   */\n  constructor(type, map, pointerEvent, opt_dragging, opt_frameState) {\n\n    super(type, map, pointerEvent, opt_dragging, opt_frameState);\n\n    /**\n     * @const\n     * @type {PointerEvent}\n     */\n    this.pointerEvent = pointerEvent;\n\n  }\n\n}\n\nexport default MapBrowserPointerEvent;\n","/**\n * @module ol/geom/Circle\n */\nimport {createOrUpdate, forEachCorner, intersects} from '../extent.js';\nimport GeometryType from './GeometryType.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {rotate, translate} from './flat/transform.js';\n\n\n/**\n * @classdesc\n * Circle geometry.\n *\n * @api\n */\nclass Circle extends SimpleGeometry {\n\n  /**\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   *     For internal use, flat coordinates in combination with `opt_layout` and no\n   *     `opt_radius` are also accepted.\n   * @param {number=} opt_radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   */\n  constructor(center, opt_radius, opt_layout) {\n    super();\n    if (opt_layout !== undefined && opt_radius === undefined) {\n      this.setFlatCoordinates(opt_layout, center);\n    } else {\n      const radius = opt_radius ? opt_radius : 0;\n      this.setCenterAndRadius(center, radius, opt_layout);\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Circle} Clone.\n   * @override\n   * @api\n   */\n  clone() {\n    return new Circle(this.flatCoordinates.slice(), undefined, this.layout);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    const squaredDistance = dx * dx + dy * dy;\n    if (squaredDistance < minSquaredDistance) {\n      if (squaredDistance === 0) {\n        for (let i = 0; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      } else {\n        const delta = this.getRadius() / Math.sqrt(squaredDistance);\n        closestPoint[0] = flatCoordinates[0] + delta * dx;\n        closestPoint[1] = flatCoordinates[1] + delta * dy;\n        for (let i = 2; i < this.stride; ++i) {\n          closestPoint[i] = flatCoordinates[i];\n        }\n      }\n      closestPoint.length = this.stride;\n      return squaredDistance;\n    } else {\n      return minSquaredDistance;\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  containsXY(x, y) {\n    const flatCoordinates = this.flatCoordinates;\n    const dx = x - flatCoordinates[0];\n    const dy = y - flatCoordinates[1];\n    return dx * dx + dy * dy <= this.getRadiusSquared_();\n  }\n\n  /**\n   * Return the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @return {import(\"../coordinate.js\").Coordinate} Center.\n   * @api\n   */\n  getCenter() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  computeExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const radius = flatCoordinates[this.stride] - flatCoordinates[0];\n    return createOrUpdate(\n      flatCoordinates[0] - radius, flatCoordinates[1] - radius,\n      flatCoordinates[0] + radius, flatCoordinates[1] + radius,\n      extent);\n  }\n\n  /**\n   * Return the radius of the circle.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return Math.sqrt(this.getRadiusSquared_());\n  }\n\n  /**\n   * @private\n   * @return {number} Radius squared.\n   */\n  getRadiusSquared_() {\n    const dx = this.flatCoordinates[this.stride] - this.flatCoordinates[0];\n    const dy = this.flatCoordinates[this.stride + 1] - this.flatCoordinates[1];\n    return dx * dx + dy * dy;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  getType() {\n    return GeometryType.CIRCLE;\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  intersectsExtent(extent) {\n    const circleExtent = this.getExtent();\n    if (intersects(extent, circleExtent)) {\n      const center = this.getCenter();\n\n      if (extent[0] <= center[0] && extent[2] >= center[0]) {\n        return true;\n      }\n      if (extent[1] <= center[1] && extent[3] >= center[1]) {\n        return true;\n      }\n\n      return forEachCorner(extent, this.intersectsCoordinate.bind(this));\n    }\n    return false;\n\n  }\n\n  /**\n   * Set the center of the circle as {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} center Center.\n   * @api\n   */\n  setCenter(center) {\n    const stride = this.stride;\n    const radius = this.flatCoordinates[stride] - this.flatCoordinates[0];\n    const flatCoordinates = center.slice();\n    flatCoordinates[stride] = flatCoordinates[0] + radius;\n    for (let i = 1; i < stride; ++i) {\n      flatCoordinates[stride + i] = center[i];\n    }\n    this.setFlatCoordinates(this.layout, flatCoordinates);\n    this.changed();\n  }\n\n  /**\n   * Set the center (as {@link module:ol/coordinate~Coordinate coordinate}) and the radius (as\n   * number) of the circle.\n   * @param {!import(\"../coordinate.js\").Coordinate} center Center.\n   * @param {number} radius Radius.\n   * @param {import(\"./GeometryLayout.js\").default=} opt_layout Layout.\n   * @api\n   */\n  setCenterAndRadius(center, radius, opt_layout) {\n    this.setLayout(opt_layout, center, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    /** @type {Array<number>} */\n    const flatCoordinates = this.flatCoordinates;\n    let offset = deflateCoordinate(\n      flatCoordinates, 0, center, this.stride);\n    flatCoordinates[offset++] = flatCoordinates[0] + radius;\n    for (let i = 1, ii = this.stride; i < ii; ++i) {\n      flatCoordinates[offset++] = flatCoordinates[i];\n    }\n    flatCoordinates.length = offset;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   */\n  getCoordinates() {\n    return null;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setCoordinates(coordinates, opt_layout) {}\n\n  /**\n   * Set the radius of the circle. The radius is in the units of the projection.\n   * @param {number} radius Radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.flatCoordinates[this.stride] = this.flatCoordinates[0] + radius;\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  rotate(angle, anchor) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(rotate(center, 0, center.length, stride, angle, anchor, center));\n    this.changed();\n  }\n\n  /**\n   * @inheritDoc\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const center = this.getCenter();\n    const stride = this.getStride();\n    this.setCenter(translate(center, 0, center.length, stride, deltaX, deltaY, center));\n    this.changed();\n  }\n\n}\n\n\n/**\n * Transform each coordinate of the circle from one coordinate reference system\n * to another. The geometry is modified in place.\n * If you do not want the geometry modified in place, first clone() it and\n * then use this function on the clone.\n *\n * Internally a circle is currently represented by two points: the center of\n * the circle `[cx, cy]`, and the point to the right of the circle\n * `[cx + r, cy]`. This `transform` function just transforms these two points.\n * So the resulting geometry is also a circle, and that circle does not\n * correspond to the shape that would be obtained by transforming every point\n * of the original circle.\n *\n * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n * @return {Circle} This geometry.  Note that original geometry is\n *     modified in place.\n * @function\n * @api\n */\nCircle.prototype.transform;\nexport default Circle;\n","/**\n * @module ol/format/FormatType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ARRAY_BUFFER: 'arraybuffer',\n  JSON: 'json',\n  TEXT: 'text',\n  XML: 'xml'\n};\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\nimport FormatType from './format/FormatType.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * load features.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area to be loaded,\n * a `{number}` representing the resolution (map units per pixel) and an\n * {@link module:ol/proj/Projection} for the projection  as\n * arguments. `this` within the function is bound to the\n * {@link module:ol/source/Vector} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default), import(\"./extent.js\").Extent, number,\n *                    import(\"./proj/Projection.js\").default): void} FeatureLoader\n * @api\n */\n\n\n/**\n * {@link module:ol/source/Vector} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n\n/**\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @param {function(this:import(\"./VectorTile.js\").default, Array<import(\"./Feature.js\").default>, import(\"./proj/Projection.js\").default, import(\"./extent.js\").Extent): void|function(this:import(\"./source/Vector\").default, Array<import(\"./Feature.js\").default>): void} success\n *     Function called with the loaded features and optionally with the data\n *     projection. Called with the vector tile or source as `this`.\n * @param {function(this:import(\"./VectorTile.js\").default): void|function(this:import(\"./source/Vector\").default): void} failure\n *     Function called when loading failed. Called with the vector tile or\n *     source as `this`.\n * @return {FeatureLoader} The feature loader.\n */\nexport function loadFeaturesXhr(url, format, success, failure) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(extent, resolution, projection) {\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET',\n        typeof url === 'function' ? url(extent, resolution, projection) : url,\n        true);\n      if (format.getType() == FormatType.ARRAY_BUFFER) {\n        xhr.responseType = 'arraybuffer';\n      }\n      xhr.withCredentials = withCredentials;\n      /**\n       * @param {Event} event Event.\n       * @private\n       */\n      xhr.onload = function(event) {\n        // status will be 0 for file:// urls\n        if (!xhr.status || xhr.status >= 200 && xhr.status < 300) {\n          const type = format.getType();\n          /** @type {Document|Node|Object|string|undefined} */\n          let source;\n          if (type == FormatType.JSON || type == FormatType.TEXT) {\n            source = xhr.responseText;\n          } else if (type == FormatType.XML) {\n            source = xhr.responseXML;\n            if (!source) {\n              source = new DOMParser().parseFromString(xhr.responseText, 'application/xml');\n            }\n          } else if (type == FormatType.ARRAY_BUFFER) {\n            source = /** @type {ArrayBuffer} */ (xhr.response);\n          }\n          if (source) {\n            success.call(this, format.readFeatures(source, {\n              extent: extent,\n              featureProjection: projection\n            }),\n            format.readProjection(source));\n          } else {\n            failure.call(this);\n          }\n        } else {\n          failure.call(this);\n        }\n      }.bind(this);\n      /**\n       * @private\n       */\n      xhr.onerror = function() {\n        failure.call(this);\n      }.bind(this);\n      xhr.send();\n    }\n  );\n}\n\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default} format Feature format.\n * @return {FeatureLoader} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  return loadFeaturesXhr(url, format,\n    /**\n     * @param {Array<import(\"./Feature.js\").default>} features The loaded features.\n     * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n     * projection.\n     * @this {import(\"./source/Vector\").default|import(\"./VectorTile.js\").default}\n     */\n    function(features, dataProjection) {\n      const sourceOrTile = /** @type {?} */ (this);\n      if (typeof sourceOrTile.addFeatures === 'function') {\n        /** @type {import(\"./source/Vector\").default} */ (sourceOrTile).addFeatures(features);\n      }\n    }, /* FIXME handle error */ VOID);\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function(extent, resolution) {\n      const z = tileGrid.getZForResolution(resolution);\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (tileCoord[1] = tileRange.minX; tileCoord[1] <= tileRange.maxX; ++tileCoord[1]) {\n        for (tileCoord[2] = tileRange.minY; tileCoord[2] <= tileRange.maxY; ++tileCoord[2]) {\n          extents.push(tileGrid.getTileCoordExtent(tileCoord));\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature'\n};\n","/**\n * @module ol/structs/RBush\n */\nimport {getUid} from '../util.js';\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX\n * @property {number} minY\n * @property {number} maxX\n * @property {number} maxY\n * @property {Object} [value]\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number=} opt_maxEntries Max entries.\n   */\n  constructor(opt_maxEntries) {\n\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(opt_maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3]\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function(item) {\n      return item.value;\n    });\n  }\n\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent=} opt_extent Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(opt_extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, opt_extent);\n  }\n\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n\n}\n\n\nexport default RBush;\n","/**\n * @module ol/source/Vector\n */\n\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {containsExtent, equals} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty, getValues} from '../obj.js';\nimport Source from './Source.js';\nimport SourceState from './State.js';\nimport VectorEventType from './VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector} instances are instances of this\n * type.\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nexport class VectorSourceEvent extends Event {\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Feature.js\").default<Geometry>=} opt_feature Feature.\n   */\n  constructor(type, opt_feature) {\n\n    super(type);\n\n    /**\n     * The feature being added or removed.\n     * @type {import(\"../Feature.js\").default<Geometry>|undefined}\n     * @api\n     */\n    this.feature = opt_feature;\n\n  }\n\n}\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<import(\"../Feature.js\").default>|Collection<import(\"../Feature.js\").default>} [features]\n * Features. If provided as {@link module:ol/Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader.\n *\n * Example:\n *\n * ```js\n * import {Vector} from 'ol/source';\n * import {GeoJSON} from 'ol/format';\n * import {bbox} from 'ol/loadingstrategy';\n *\n * var vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection) {\n *      var proj = projection.getCode();\n *      var url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      var xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      var onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          vectorSource.addFeatures(\n *              vectorSource.getFormat().readFeatures(xhr.responseText));\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy~all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader~xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy~all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../geom/Geometry.js\").default} Geometry\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options=} opt_options Vector source options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super({\n      attributions: options.attributions,\n      projection: undefined,\n      state: SourceState.READY,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true\n    });\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps == undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, 7); // `format` must be set when `url` is set\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, /** @type {import(\"../format/Feature.js\").default} */ (this.format_));\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ = options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n        options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<import(\"../Feature.js\").default<Geometry>>}\n     */\n    this.featuresCollection_ = null;\n\n    let collection, features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature));\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE,\n        this.handleFeatureChange_, this),\n      listen(feature, ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_, this)\n    ];\n  }\n\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    const id = feature.getId();\n    if (id !== undefined) {\n      if (!(id.toString() in this.idIndex_)) {\n        this.idIndex_[id.toString()] = feature;\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(!(featureKey in this.uidIndex_),\n        30); // The passed `feature` was already added to the source\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<import(\"../Feature.js\").default<Geometry>>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    const newFeatures = [];\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      this.dispatchEvent(new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]));\n    }\n  }\n\n\n  /**\n   * @param {!Collection<import(\"../Feature.js\").default<Geometry>>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    this.addEventListener(VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<Geometry>} evt The vector source event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      });\n    collection.addEventListener(CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    collection.addEventListener(CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent} evt The collection event\n       */\n      function(evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(/** @type {import(\"../Feature.js\").default<Geometry>} */ (evt.element));\n          modifyingCollection = false;\n        }\n      }.bind(this));\n    this.featuresCollection_ = collection;\n  }\n\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean=} opt_fast Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#removefeature} events.\n   * @api\n   */\n  clear(opt_fast) {\n    if (opt_fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach(this.removeFeatureInternal.bind(this));\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function(feature) {\n      const geometry = feature.getGeometry();\n      if (geometry.intersectsCoordinate(coordinate)) {\n        return callback(feature);\n      } else {\n        return undefined;\n      }\n    });\n  }\n\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    } else if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(import(\"../Feature.js\").default<Geometry>): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function(feature) {\n        const geometry = feature.getGeometry();\n        if (geometry.intersectsExtent(extent)) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      });\n  }\n\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection} as `features`.\n   * @return {Collection<import(\"../Feature.js\").default<Geometry>>} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n\n  /**\n   * Get all features on the source in random order.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray();\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, getValues(this.nullGeometryFeatures_));\n      }\n    }\n    return (\n      /** @type {Array<import(\"../Feature.js\").default<Geometry>>} */ (features)\n    );\n  }\n\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function(feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<import(\"../Feature.js\").default<Geometry>>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.getInExtent(extent);\n    } else if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray();\n    } else {\n      return [];\n    }\n  }\n\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(import(\"../Feature.js\").default<Geometry>):boolean=} opt_filter Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {import(\"../Feature.js\").default<Geometry>} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, opt_filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    const filter = opt_filter ? opt_filter : TRUE;\n    this.featuresRtree_.forEachInExtent(extent,\n      /**\n       * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n       */\n      function(feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance = geometry.closestPointXY(\n            x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      });\n    return closestFeature;\n  }\n\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent=} opt_extent Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(opt_extent) {\n    return this.featuresRtree_.getExtent(opt_extent);\n  }\n\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()).\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {import(\"../Feature.js\").default<Geometry>} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {import(\"../Feature.js\").default<Geometry>} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.CHANGEFEATURE, feature));\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    } else {\n      return getUid(feature) in this.uidIndex_;\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_);\n  }\n\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution);\n    this.loading = false;\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function(object) {\n          return containsExtent(object.extent, extentToLoad);\n        });\n      if (!alreadyLoaded) {\n        this.loader_.call(this, extentToLoad, resolution, projection);\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n        this.loading = this.loader_ !== VOID;\n      }\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function(object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n\n  /**\n   * Remove a single feature from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    const featureKey = getUid(feature);\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n    this.removeFeatureInternal(feature);\n    this.changed();\n  }\n\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature Feature.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    this.featureChangeKeys_[featureKey].forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n    const id = feature.getId();\n    if (id !== undefined) {\n      delete this.idIndex_[id.toString()];\n    }\n    delete this.uidIndex_[featureKey];\n    this.dispatchEvent(new VectorSourceEvent(\n      VectorEventType.REMOVEFEATURE, feature));\n  }\n\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {import(\"../Feature.js\").default<Geometry>} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, 7); // `format` must be set when `url` is set\n    this.setLoader(xhr(url, this.format_));\n  }\n\n}\n\n\nexport default VectorSource;\n","/**\n * @module ol/interaction/Draw\n */\nimport EventType from '../events/EventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport MapBrowserPointerEvent from '../MapBrowserPointerEvent.js';\nimport {getChangeEventType} from '../Object.js';\nimport {squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {noModifierKeys, always, shiftKeyOnly} from '../events/condition.js';\nimport {boundingExtent, getBottomLeft, getBottomRight, getTopLeft, getTopRight} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport Circle from '../geom/Circle.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport LineString from '../geom/LineString.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon, {fromCircle, makeRegular} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {GeometryType} type Geometry type of\n * the geometries being drawn with this instance.\n * @property {number} [clickTolerance=6] The maximum distance in pixels between\n * \"down\" and \"up\" for a \"up\" event to be considered a \"click\" event and\n * actually add a point/vertex to the geometry being drawn.  The default of `6`\n * was chosen for the draw interaction to behave correctly on mouse as well as\n * on touch devices.\n * @property {import(\"../Collection.js\").default<Feature>} [features]\n * Destination collection for the drawn features.\n * @property {VectorSource} [source] Destination source for\n * the drawn features.\n * @property {number} [dragVertexDelay=500] Delay in milliseconds after pointerdown\n * before the current vertex can be dragged to its exact position.\n * @property {number} [snapTolerance=12] Pixel distance for snapping to the\n * drawing finish.\n * @property {boolean} [stopClick=false] Stop click, singleclick, and\n * doubleclick events from firing during drawing.\n * @property {number} [maxPoints] The number of points that can be drawn before\n * a polygon ring or line string is finished. By default there is no\n * restriction.\n * @property {number} [minPoints] The number of points that must be drawn\n * before a polygon ring or line string can be finished. Default is `3` for\n * polygon rings and `2` for line strings.\n * @property {import(\"../events/condition.js\").Condition} [finishCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether the drawing can be finished.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for sketch features.\n * @property {GeometryFunction} [geometryFunction]\n * Function that is called when a geometry's coordinates are updated.\n * @property {string} [geometryName] Geometry name to use for features created\n * by the draw interaction.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default {@link module:ol/events/condition~noModifierKeys}, i.e. a click,\n * adds a vertex or deactivates freehand drawing.\n * @property {boolean} [freehand=false] Operate in freehand mode for lines,\n * polygons, and circles.  This makes the interaction always operate in freehand\n * mode and takes precedence over any `freehandCondition` option.\n * @property {import(\"../events/condition.js\").Condition} [freehandCondition]\n * Condition that activates freehand drawing for lines and polygons. This\n * function takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether that event should be handled. The\n * default is {@link module:ol/events/condition~shiftKeyOnly}, meaning that the\n * Shift key activates freehand drawing.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * Coordinate type when drawing points.\n * @typedef {import(\"../coordinate.js\").Coordinate} PointCoordType\n */\n\n\n/**\n * Coordinate type when drawing lines.\n * @typedef {Array<import(\"../coordinate.js\").Coordinate>} LineCoordType\n */\n\n\n/**\n * Coordinate type when drawing polygons.\n * @typedef {Array<Array<import(\"../coordinate.js\").Coordinate>>} PolyCoordType\n */\n\n\n/**\n * Types used for drawing coordinates.\n * @typedef {PointCoordType|LineCoordType|PolyCoordType} SketchCoordType\n */\n\n\n/**\n * Function that takes an array of coordinates and an optional existing geometry as\n * arguments, and returns a geometry. The optional existing geometry is the\n * geometry that is returned when the function is called without a second\n * argument.\n * @typedef {function(!SketchCoordType, import(\"../geom/SimpleGeometry.js\").default=):\n *     import(\"../geom/SimpleGeometry.js\").default} GeometryFunction\n */\n\n\n/**\n * Draw mode.  This collapses multi-part geometry types with their single-part\n * cousins.\n * @enum {string}\n */\nconst Mode = {\n  POINT: 'Point',\n  LINE_STRING: 'LineString',\n  POLYGON: 'Polygon',\n  CIRCLE: 'Circle'\n};\n\n\n/**\n * @enum {string}\n */\nconst DrawEventType = {\n  /**\n   * Triggered upon feature draw start\n   * @event DrawEvent#drawstart\n   * @api\n   */\n  DRAWSTART: 'drawstart',\n  /**\n   * Triggered upon feature draw end\n   * @event DrawEvent#drawend\n   * @api\n   */\n  DRAWEND: 'drawend'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Draw~Draw} instances are\n * instances of this type.\n */\nclass DrawEvent extends Event {\n  /**\n   * @param {DrawEventType} type Type.\n   * @param {Feature} feature The feature drawn.\n   */\n  constructor(type, feature) {\n\n    super(type);\n\n    /**\n     * The feature being drawn.\n     * @type {Feature}\n     * @api\n     */\n    this.feature = feature;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for drawing feature geometries.\n *\n * @fires DrawEvent\n * @api\n */\nclass Draw extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.shouldHandle_ = false;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.downPx_ = null;\n\n    /**\n     * @type {?}\n     * @private\n     */\n    this.downTimeout_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.lastDragTime_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.freehand_ = false;\n\n    /**\n     * Target source for drawn features.\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * Target collection for drawn features.\n     * @type {import(\"../Collection.js\").default<Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * Pixel distance for snapping.\n     * @type {number}\n     * @private\n     */\n    this.snapTolerance_ = options.snapTolerance ? options.snapTolerance : 12;\n\n    /**\n     * Geometry type.\n     * @type {GeometryType}\n     * @private\n     */\n    this.type_ = /** @type {GeometryType} */ (options.type);\n\n    /**\n     * Drawing mode (derived from geometry type.\n     * @type {Mode}\n     * @private\n     */\n    this.mode_ = getMode(this.type_);\n\n    /**\n     * Stop click, singleclick, and doubleclick events from firing during drawing.\n     * Default is `false`.\n     * @type {boolean}\n     * @private\n     */\n    this.stopClick_ = !!options.stopClick;\n\n    /**\n     * The number of points that must be drawn before a polygon ring or line\n     * string can be finished.  The default is 3 for polygon rings and 2 for\n     * line strings.\n     * @type {number}\n     * @private\n     */\n    this.minPoints_ = options.minPoints ?\n      options.minPoints :\n      (this.mode_ === Mode.POLYGON ? 3 : 2);\n\n    /**\n     * The number of points that can be drawn before a polygon ring or line string\n     * is finished. The default is no restriction.\n     * @type {number}\n     * @private\n     */\n    this.maxPoints_ = options.maxPoints ? options.maxPoints : Infinity;\n\n    /**\n     * A function to decide if a potential finish coordinate is permissible\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.finishCondition_ = options.finishCondition ? options.finishCondition : TRUE;\n\n    let geometryFunction = options.geometryFunction;\n    if (!geometryFunction) {\n      if (this.type_ === GeometryType.CIRCLE) {\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          const circle = opt_geometry ? /** @type {Circle} */ (opt_geometry) :\n            new Circle([NaN, NaN]);\n          const squaredLength = squaredCoordinateDistance(\n            coordinates[0], coordinates[1]);\n          circle.setCenterAndRadius(coordinates[0], Math.sqrt(squaredLength));\n          return circle;\n        };\n      } else {\n        let Constructor;\n        const mode = this.mode_;\n        if (mode === Mode.POINT) {\n          Constructor = Point;\n        } else if (mode === Mode.LINE_STRING) {\n          Constructor = LineString;\n        } else if (mode === Mode.POLYGON) {\n          Constructor = Polygon;\n        }\n        /**\n         * @param {!LineCoordType} coordinates The coordinates.\n         * @param {import(\"../geom/SimpleGeometry.js\").default=} opt_geometry Optional geometry.\n         * @return {import(\"../geom/SimpleGeometry.js\").default} A geometry.\n         */\n        geometryFunction = function(coordinates, opt_geometry) {\n          let geometry = opt_geometry;\n          if (geometry) {\n            if (mode === Mode.POLYGON) {\n              if (coordinates[0].length) {\n                // Add a closing coordinate to match the first\n                geometry.setCoordinates([coordinates[0].concat([coordinates[0][0]])]);\n              } else {\n                geometry.setCoordinates([]);\n              }\n            } else {\n              geometry.setCoordinates(coordinates);\n            }\n          } else {\n            geometry = new Constructor(coordinates);\n          }\n          return geometry;\n        };\n      }\n    }\n\n    /**\n     * @type {GeometryFunction}\n     * @private\n     */\n    this.geometryFunction_ = geometryFunction;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.dragVertexDelay_ = options.dragVertexDelay !== undefined ? options.dragVertexDelay : 500;\n\n    /**\n     * Finish coordinate for the feature (first point for polygons, last point for\n     * linestrings).\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.finishCoordinate_ = null;\n\n    /**\n     * Sketch feature.\n     * @type {Feature}\n     * @private\n     */\n    this.sketchFeature_ = null;\n\n    /**\n     * Sketch point.\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.sketchPoint_ = null;\n\n    /**\n     * Sketch coordinates. Used when drawing a line or polygon.\n     * @type {SketchCoordType}\n     * @private\n     */\n    this.sketchCoords_ = null;\n\n    /**\n     * Sketch line. Used when drawing polygon.\n     * @type {Feature<LineString>}\n     * @private\n     */\n    this.sketchLine_ = null;\n\n    /**\n     * Sketch line coordinates. Used when drawing a polygon or circle.\n     * @type {LineCoordType}\n     * @private\n     */\n    this.sketchLineCoords_ = null;\n\n    /**\n     * Squared tolerance for handling up events.  If the squared distance\n     * between a down and up event is greater than this tolerance, up events\n     * will not be handled.\n     * @type {number}\n     * @private\n     */\n    this.squaredClickTolerance_ = options.clickTolerance ?\n      options.clickTolerance * options.clickTolerance : 36;\n\n    /**\n     * Draw overlay where our sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: options.wrapX ? options.wrapX : false\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Name of the geometry attribute for newly created features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : noModifierKeys;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.freehandCondition_;\n    if (options.freehand) {\n      this.freehandCondition_ = always;\n    } else {\n      this.freehandCondition_ = options.freehandCondition ? options.freehandCondition : shiftKeyOnly;\n    }\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.updateState_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    super.setMap(map);\n    this.updateState_();\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may actually draw or finish the drawing.\n   * @override\n   * @api\n   */\n  handleEvent(event) {\n    if (event.originalEvent.type === EventType.CONTEXTMENU) {\n      // Avoid context menu for long taps when drawing on mobile\n      event.preventDefault();\n    }\n    this.freehand_ = this.mode_ !== Mode.POINT && this.freehandCondition_(event);\n    let move = event.type === MapBrowserEventType.POINTERMOVE;\n    let pass = true;\n    if (!this.freehand_ && this.lastDragTime_ && event.type === MapBrowserEventType.POINTERDRAG) {\n      const now = Date.now();\n      if (now - this.lastDragTime_ >= this.dragVertexDelay_) {\n        this.downPx_ = event.pixel;\n        this.shouldHandle_ = !this.freehand_;\n        move = true;\n      } else {\n        this.lastDragTime_ = undefined;\n      }\n      if (this.shouldHandle_ && this.downTimeout_ !== undefined) {\n        clearTimeout(this.downTimeout_);\n        this.downTimeout_ = undefined;\n      }\n    }\n    if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDRAG &&\n        this.sketchFeature_ !== null) {\n      this.addToDrawing_(event);\n      pass = false;\n    } else if (this.freehand_ &&\n        event.type === MapBrowserEventType.POINTERDOWN) {\n      pass = false;\n    } else if (move) {\n      pass = event.type === MapBrowserEventType.POINTERMOVE;\n      if (pass && this.freehand_) {\n        pass = this.handlePointerMove_(event);\n      } else if (/** @type {MapBrowserPointerEvent} */ (event).pointerEvent.pointerType == 'mouse' ||\n          (event.type === MapBrowserEventType.POINTERDRAG && this.downTimeout_ === undefined)) {\n        this.handlePointerMove_(event);\n      }\n    } else if (event.type === MapBrowserEventType.DBLCLICK) {\n      pass = false;\n    }\n\n    return super.handleEvent(event) && pass;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.shouldHandle_ = !this.freehand_;\n\n    if (this.freehand_) {\n      this.downPx_ = event.pixel;\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n      }\n      return true;\n    } else if (this.condition_(event)) {\n      this.lastDragTime_ = Date.now();\n      this.downTimeout_ = setTimeout(function() {\n        this.handlePointerMove_(new MapBrowserPointerEvent(\n          MapBrowserEventType.POINTERMOVE, event.map, event.pointerEvent, false, event.frameState));\n      }.bind(this), this.dragVertexDelay_);\n      this.downPx_ = event.pixel;\n      return true;\n    } else {\n      this.lastDragTime_ = undefined;\n      return false;\n    }\n  }\n\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    let pass = true;\n\n    if (this.downTimeout_) {\n      clearTimeout(this.downTimeout_);\n      this.downTimeout_ = undefined;\n    }\n\n    this.handlePointerMove_(event);\n\n    const circleMode = this.mode_ === Mode.CIRCLE;\n\n    if (this.shouldHandle_) {\n      if (!this.finishCoordinate_) {\n        this.startDrawing_(event);\n        if (this.mode_ === Mode.POINT) {\n          this.finishDrawing();\n        }\n      } else if (this.freehand_ || circleMode) {\n        this.finishDrawing();\n      } else if (this.atFinish_(event)) {\n        if (this.finishCondition_(event)) {\n          this.finishDrawing();\n        }\n      } else {\n        this.addToDrawing_(event);\n      }\n      pass = false;\n    } else if (this.freehand_) {\n      this.finishCoordinate_ = null;\n      this.abortDrawing_();\n    }\n    if (!pass && this.stopClick_) {\n      event.stopPropagation();\n    }\n    return pass;\n  }\n\n  /**\n   * Handle move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} event A move event.\n   * @return {boolean} Pass the event to other interactions.\n   * @private\n   */\n  handlePointerMove_(event) {\n    if (this.downPx_ &&\n        ((!this.freehand_ && this.shouldHandle_) ||\n        (this.freehand_ && !this.shouldHandle_))) {\n      const downPx = this.downPx_;\n      const clickPx = event.pixel;\n      const dx = downPx[0] - clickPx[0];\n      const dy = downPx[1] - clickPx[1];\n      const squaredDistance = dx * dx + dy * dy;\n      this.shouldHandle_ = this.freehand_ ?\n        squaredDistance > this.squaredClickTolerance_ :\n        squaredDistance <= this.squaredClickTolerance_;\n      if (!this.shouldHandle_) {\n        return true;\n      }\n    }\n\n    if (this.finishCoordinate_) {\n      this.modifyDrawing_(event);\n    } else {\n      this.createOrUpdateSketchPoint_(event);\n    }\n    return true;\n  }\n\n  /**\n   * Determine if an event is within the snapping tolerance of the start coord.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} The event is within the snapping tolerance of the start.\n   * @private\n   */\n  atFinish_(event) {\n    let at = false;\n    if (this.sketchFeature_) {\n      let potentiallyDone = false;\n      let potentiallyFinishCoordinates = [this.finishCoordinate_];\n      if (this.mode_ === Mode.LINE_STRING) {\n        potentiallyDone = this.sketchCoords_.length > this.minPoints_;\n      } else if (this.mode_ === Mode.POLYGON) {\n        const sketchCoords = /** @type {PolyCoordType} */ (this.sketchCoords_);\n        potentiallyDone = sketchCoords[0].length > this.minPoints_;\n        potentiallyFinishCoordinates = [sketchCoords[0][0], sketchCoords[0][sketchCoords[0].length - 2]];\n      }\n      if (potentiallyDone) {\n        const map = event.map;\n        for (let i = 0, ii = potentiallyFinishCoordinates.length; i < ii; i++) {\n          const finishCoordinate = potentiallyFinishCoordinates[i];\n          const finishPixel = map.getPixelFromCoordinate(finishCoordinate);\n          const pixel = event.pixel;\n          const dx = pixel[0] - finishPixel[0];\n          const dy = pixel[1] - finishPixel[1];\n          const snapTolerance = this.freehand_ ? 1 : this.snapTolerance_;\n          at = Math.sqrt(dx * dx + dy * dy) <= snapTolerance;\n          if (at) {\n            this.finishCoordinate_ = finishCoordinate;\n            break;\n          }\n        }\n      }\n    }\n    return at;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  createOrUpdateSketchPoint_(event) {\n    const coordinates = event.coordinate.slice();\n    if (!this.sketchPoint_) {\n      this.sketchPoint_ = new Feature(new Point(coordinates));\n      this.updateSketchFeatures_();\n    } else {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinates);\n    }\n  }\n\n  /**\n   * Start the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  startDrawing_(event) {\n    const start = event.coordinate;\n    this.finishCoordinate_ = start;\n    if (this.mode_ === Mode.POINT) {\n      this.sketchCoords_ = start.slice();\n    } else if (this.mode_ === Mode.POLYGON) {\n      this.sketchCoords_ = [[start.slice(), start.slice()]];\n      this.sketchLineCoords_ = this.sketchCoords_[0];\n    } else {\n      this.sketchCoords_ = [start.slice(), start.slice()];\n    }\n    if (this.sketchLineCoords_) {\n      this.sketchLine_ = new Feature(\n        new LineString(this.sketchLineCoords_));\n    }\n    const geometry = this.geometryFunction_(this.sketchCoords_);\n    this.sketchFeature_ = new Feature();\n    if (this.geometryName_) {\n      this.sketchFeature_.setGeometryName(this.geometryName_);\n    }\n    this.sketchFeature_.setGeometry(geometry);\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Modify the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  modifyDrawing_(event) {\n    let coordinate = event.coordinate;\n    const geometry = this.sketchFeature_.getGeometry();\n    let coordinates, last;\n    if (this.mode_ === Mode.POINT) {\n      last = this.sketchCoords_;\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      last = coordinates[coordinates.length - 1];\n      if (this.atFinish_(event)) {\n        // snap to finish\n        coordinate = this.finishCoordinate_.slice();\n      }\n    } else {\n      coordinates = this.sketchCoords_;\n      last = coordinates[coordinates.length - 1];\n    }\n    last[0] = coordinate[0];\n    last[1] = coordinate[1];\n    this.geometryFunction_(/** @type {!LineCoordType} */ (this.sketchCoords_), geometry);\n    if (this.sketchPoint_) {\n      const sketchPointGeom = this.sketchPoint_.getGeometry();\n      sketchPointGeom.setCoordinates(coordinate);\n    }\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (geometry.getType() == GeometryType.POLYGON &&\n        this.mode_ !== Mode.POLYGON) {\n      if (!this.sketchLine_) {\n        this.sketchLine_ = new Feature();\n      }\n      const ring = geometry.getLinearRing(0);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      if (!sketchLineGeom) {\n        sketchLineGeom = new LineString(ring.getFlatCoordinates(), ring.getLayout());\n        this.sketchLine_.setGeometry(sketchLineGeom);\n      } else {\n        sketchLineGeom.setFlatCoordinates(\n          ring.getLayout(), ring.getFlatCoordinates());\n        sketchLineGeom.changed();\n      }\n    } else if (this.sketchLineCoords_) {\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(this.sketchLineCoords_);\n    }\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Add a new coordinate to the drawing.\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @private\n   */\n  addToDrawing_(event) {\n    const coordinate = event.coordinate;\n    const geometry = this.sketchFeature_.getGeometry();\n    let done;\n    let coordinates;\n    if (this.mode_ === Mode.LINE_STRING) {\n      this.finishCoordinate_ = coordinate.slice();\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      if (coordinates.length >= this.maxPoints_) {\n        if (this.freehand_) {\n          coordinates.pop();\n        } else {\n          done = true;\n        }\n      }\n      coordinates.push(coordinate.slice());\n      if (done) {\n        this.finishCoordinate_ = coordinates[0];\n      }\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n    this.updateSketchFeatures_();\n    if (done) {\n      this.finishDrawing();\n    }\n  }\n\n  /**\n   * Remove last point of the feature currently being drawn.\n   * @api\n   */\n  removeLastPoint() {\n    if (!this.sketchFeature_) {\n      return;\n    }\n    const geometry = this.sketchFeature_.getGeometry();\n    let coordinates;\n    /** @type {LineString} */\n    let sketchLineGeom;\n    if (this.mode_ === Mode.LINE_STRING) {\n      coordinates = /** @type {LineCoordType} */ (this.sketchCoords_);\n      coordinates.splice(-2, 1);\n      this.geometryFunction_(coordinates, geometry);\n      if (coordinates.length >= 2) {\n        this.finishCoordinate_ = coordinates[coordinates.length - 2].slice();\n      }\n    } else if (this.mode_ === Mode.POLYGON) {\n      coordinates = /** @type {PolyCoordType} */ (this.sketchCoords_)[0];\n      coordinates.splice(-2, 1);\n      sketchLineGeom = this.sketchLine_.getGeometry();\n      sketchLineGeom.setCoordinates(coordinates);\n      this.geometryFunction_(this.sketchCoords_, geometry);\n    }\n\n    if (coordinates.length === 0) {\n      this.finishCoordinate_ = null;\n    }\n\n    this.updateSketchFeatures_();\n  }\n\n  /**\n   * Stop drawing and add the sketch feature to the target layer.\n   * The {@link module:ol/interaction/Draw~DrawEventType.DRAWEND} event is\n   * dispatched before inserting the feature.\n   * @api\n   */\n  finishDrawing() {\n    const sketchFeature = this.abortDrawing_();\n    if (!sketchFeature) {\n      return;\n    }\n    let coordinates = this.sketchCoords_;\n    const geometry = sketchFeature.getGeometry();\n    if (this.mode_ === Mode.LINE_STRING) {\n      // remove the redundant last point\n      coordinates.pop();\n      this.geometryFunction_(coordinates, geometry);\n    } else if (this.mode_ === Mode.POLYGON) {\n      // remove the redundant last point in ring\n      /** @type {PolyCoordType} */ (coordinates)[0].pop();\n      this.geometryFunction_(coordinates, geometry);\n      coordinates = geometry.getCoordinates();\n    }\n\n    // cast multi-part geometries\n    if (this.type_ === GeometryType.MULTI_POINT) {\n      sketchFeature.setGeometry(new MultiPoint([/** @type {PointCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_LINE_STRING) {\n      sketchFeature.setGeometry(new MultiLineString([/** @type {LineCoordType} */(coordinates)]));\n    } else if (this.type_ === GeometryType.MULTI_POLYGON) {\n      sketchFeature.setGeometry(new MultiPolygon([/** @type {PolyCoordType} */(coordinates)]));\n    }\n\n    // First dispatch event to allow full set up of feature\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWEND, sketchFeature));\n\n    // Then insert feature\n    if (this.features_) {\n      this.features_.push(sketchFeature);\n    }\n    if (this.source_) {\n      this.source_.addFeature(sketchFeature);\n    }\n  }\n\n  /**\n   * Stop drawing without adding the sketch feature to the target layer.\n   * @return {Feature} The sketch feature (or null if none).\n   * @private\n   */\n  abortDrawing_() {\n    this.finishCoordinate_ = null;\n    const sketchFeature = this.sketchFeature_;\n    if (sketchFeature) {\n      this.sketchFeature_ = null;\n      this.sketchPoint_ = null;\n      this.sketchLine_ = null;\n      this.overlay_.getSource().clear(true);\n    }\n    return sketchFeature;\n  }\n\n  /**\n   * Extend an existing geometry by adding additional points. This only works\n   * on features with `LineString` geometries, where the interaction will\n   * extend lines by adding points to the end of the coordinates array.\n   * @param {!Feature<LineString>} feature Feature to be extended.\n   * @api\n   */\n  extend(feature) {\n    const geometry = feature.getGeometry();\n    const lineString = geometry;\n    this.sketchFeature_ = feature;\n    this.sketchCoords_ = lineString.getCoordinates();\n    const last = this.sketchCoords_[this.sketchCoords_.length - 1];\n    this.finishCoordinate_ = last.slice();\n    this.sketchCoords_.push(last.slice());\n    this.updateSketchFeatures_();\n    this.dispatchEvent(new DrawEvent(DrawEventType.DRAWSTART, this.sketchFeature_));\n  }\n\n  /**\n   * Redraw the sketch features.\n   * @private\n   */\n  updateSketchFeatures_() {\n    const sketchFeatures = [];\n    if (this.sketchFeature_) {\n      sketchFeatures.push(this.sketchFeature_);\n    }\n    if (this.sketchLine_) {\n      sketchFeatures.push(this.sketchLine_);\n    }\n    if (this.sketchPoint_) {\n      sketchFeatures.push(this.sketchPoint_);\n    }\n    const overlaySource = this.overlay_.getSource();\n    overlaySource.clear(true);\n    overlaySource.addFeatures(sketchFeatures);\n  }\n\n  /**\n   * @private\n   */\n  updateState_() {\n    const map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      this.abortDrawing_();\n    }\n    this.overlay_.setMap(active ? map : null);\n  }\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  return function(feature, resolution) {\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\n/**\n * Create a `geometryFunction` for `type: 'Circle'` that will create a regular\n * polygon with a user specified number of sides and start angle instead of an\n * `import(\"../geom/Circle.js\").Circle` geometry.\n * @param {number=} opt_sides Number of sides of the regular polygon. Default is\n *     32.\n * @param {number=} opt_angle Angle of the first point in radians. 0 means East.\n *     Default is the angle defined by the heading from the center of the\n *     regular polygon to the current pointer position.\n * @return {GeometryFunction} Function that draws a\n *     polygon.\n * @api\n */\nexport function createRegularPolygon(opt_sides, opt_angle) {\n  return function(coordinates, opt_geometry) {\n    const center = /** @type {LineCoordType} */ (coordinates)[0];\n    const end = /** @type {LineCoordType} */ (coordinates)[1];\n    const radius = Math.sqrt(\n      squaredCoordinateDistance(center, end));\n    const geometry = opt_geometry ? /** @type {Polygon} */ (opt_geometry) :\n      fromCircle(new Circle(center), opt_sides);\n    let angle = opt_angle;\n    if (!opt_angle) {\n      const x = end[0] - center[0];\n      const y = end[1] - center[1];\n      angle = Math.atan(y / x) - (x < 0 ? Math.PI : 0);\n    }\n    makeRegular(geometry, center, radius, angle);\n    return geometry;\n  };\n}\n\n\n/**\n * Create a `geometryFunction` that will create a box-shaped polygon (aligned\n * with the coordinate system axes).  Use this with the draw interaction and\n * `type: 'Circle'` to return a box instead of a circle geometry.\n * @return {GeometryFunction} Function that draws a box-shaped polygon.\n * @api\n */\nexport function createBox() {\n  return (\n    function(coordinates, opt_geometry) {\n      const extent = boundingExtent(/** @type {LineCoordType} */ (coordinates));\n      const boxCoordinates = [[\n        getBottomLeft(extent),\n        getBottomRight(extent),\n        getTopRight(extent),\n        getTopLeft(extent),\n        getBottomLeft(extent)\n      ]];\n      let geometry = opt_geometry;\n      if (geometry) {\n        geometry.setCoordinates(boxCoordinates);\n      } else {\n        geometry = new Polygon(boxCoordinates);\n      }\n      return geometry;\n    }\n  );\n}\n\n\n/**\n * Get the drawing mode.  The mode for mult-part geometries is the same as for\n * their single-part cousins.\n * @param {GeometryType} type Geometry type.\n * @return {Mode} Drawing mode.\n */\nfunction getMode(type) {\n  let mode;\n  if (type === GeometryType.POINT ||\n      type === GeometryType.MULTI_POINT) {\n    mode = Mode.POINT;\n  } else if (type === GeometryType.LINE_STRING ||\n      type === GeometryType.MULTI_LINE_STRING) {\n    mode = Mode.LINE_STRING;\n  } else if (type === GeometryType.POLYGON ||\n      type === GeometryType.MULTI_POLYGON) {\n    mode = Mode.POLYGON;\n  } else if (type === GeometryType.CIRCLE) {\n    mode = Mode.CIRCLE;\n  }\n  return (\n    /** @type {!Mode} */ (mode)\n  );\n}\n\n\nexport default Draw;\n","/**\n * @module ol/interaction/Extent\n */\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {squaredDistanceToSegment, closestOnSegment, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport {boundingExtent, getArea} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport {fromExtent as polygonFromExtent} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {toUserExtent} from '../proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Initial extent. Defaults to no\n * initial extent.\n * @property {import(\"../style/Style.js\").StyleLike} [boxStyle]\n * Style for the drawn extent box. Defaults to\n * {@link module:ol/style/Style~createEditing()['Polygon']}\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [pointerStyle]\n * Style for the cursor used to draw the extent. Defaults to\n * {@link module:ol/style/Style~createEditing()['Point']}\n * @property {boolean} [wrapX=false] Wrap the drawn extent across multiple maps\n * in the X direction? Only affects visuals, not functionality.\n */\n\n\n/**\n * @enum {string}\n */\nconst ExtentEventType = {\n  /**\n   * Triggered after the extent is changed\n   * @event ExtentEvent#extentchanged\n   * @api\n   */\n  EXTENTCHANGED: 'extentchanged'\n};\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Extent~Extent} instances are\n * instances of this type.\n */\nclass ExtentEvent extends Event {\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent the new extent\n   */\n  constructor(extent) {\n    super(ExtentEventType.EXTENTCHANGED);\n\n    /**\n     * The current extent.\n     * @type {import(\"../extent.js\").Extent}\n     * @api\n     */\n    this.extent = extent;\n  }\n\n}\n\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map.\n * Once drawn, the vector box can be modified by dragging its vertices or edges.\n * This interaction is only supported for mouse devices.\n *\n * @fires ExtentEvent\n * @api\n */\nclass Extent extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options || {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * Extent of the drawn box\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.extent_ = null;\n\n    /**\n     * Handler for pointer move events\n     * @type {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null}\n     * @private\n     */\n    this.pointerHandler_ = null;\n\n    /**\n     * Pixel threshold to snap to extent\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * Is the pointer snapped to an extent vertex\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Feature for displaying the visible extent\n     * @type {Feature}\n     * @private\n     */\n    this.extentFeature_ = null;\n\n    /**\n     * Feature for displaying the visible pointer\n     * @type {Feature<Point>}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    if (!opt_options) {\n      opt_options = {};\n    }\n\n    /**\n     * Layer for the extentFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.extentOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.boxStyle ? opt_options.boxStyle : getDefaultExtentStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * Layer for the vertexFeature\n     * @type {VectorLayer}\n     * @private\n     */\n    this.vertexOverlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!opt_options.wrapX\n      }),\n      style: opt_options.pointerStyle ? opt_options.pointerStyle : getDefaultPointerStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    if (opt_options.extent) {\n      this.setExtent(opt_options.extent);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel cursor location\n   * @param {import(\"../PluggableMap.js\").default} map map\n   * @returns {import(\"../coordinate.js\").Coordinate|null} snapped vertex on extent\n   * @private\n   */\n  snapToVertex_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixelInternal(pixel);\n    const sortByDistance = function(a, b) {\n      return squaredDistanceToSegment(pixelCoordinate, a) -\n          squaredDistanceToSegment(pixelCoordinate, b);\n    };\n    const extent = this.getExtentInternal();\n    if (extent) {\n      //convert extents to line segments and find the segment closest to pixelCoordinate\n      const segments = getSegments(extent);\n      segments.sort(sortByDistance);\n      const closestSegment = segments[0];\n\n      let vertex = (closestOnSegment(pixelCoordinate,\n        closestSegment));\n      const vertexPixel = map.getPixelFromCoordinateInternal(vertex);\n\n      //if the distance is within tolerance, snap to the segment\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        //test if we should further snap to a vertex\n        const pixel1 = map.getPixelFromCoordinateInternal(closestSegment[0]);\n        const pixel2 = map.getPixelFromCoordinateInternal(closestSegment[1]);\n        const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n        const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n        const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        this.snappedToVertex_ = dist <= this.pixelTolerance_;\n        if (this.snappedToVertex_) {\n          vertex = squaredDist1 > squaredDist2 ?\n            closestSegment[1] : closestSegment[0];\n        }\n        return vertex;\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent pointer move event\n   * @private\n   */\n  handlePointerMove_(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    let vertex = this.snapToVertex_(pixel, map);\n    if (!vertex) {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n    }\n    this.createOrUpdatePointerFeature_(vertex);\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent extent\n   * @returns {Feature} extent as featrue\n   * @private\n   */\n  createOrUpdateExtentFeature_(extent) {\n    let extentFeature = this.extentFeature_;\n\n    if (!extentFeature) {\n      if (!extent) {\n        extentFeature = new Feature({});\n      } else {\n        extentFeature = new Feature(polygonFromExtent(extent));\n      }\n      this.extentFeature_ = extentFeature;\n      this.extentOverlay_.getSource().addFeature(extentFeature);\n    } else {\n      if (!extent) {\n        extentFeature.setGeometry(undefined);\n      } else {\n        extentFeature.setGeometry(polygonFromExtent(extent));\n      }\n    }\n    return extentFeature;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} vertex location of feature\n   * @returns {Feature} vertex as feature\n   * @private\n   */\n  createOrUpdatePointerFeature_(vertex) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(vertex));\n      this.vertexFeature_ = vertexFeature;\n      this.vertexOverlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(vertex);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    //display pointer (if not dragging)\n    if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE && !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    //call pointer to determine up/down/drag\n    super.handleEvent(mapBrowserEvent);\n    //return false to stop propagation\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(mapBrowserEvent) {\n    const pixel = mapBrowserEvent.pixel;\n    const map = mapBrowserEvent.map;\n\n    const extent = this.getExtentInternal();\n    let vertex = this.snapToVertex_(pixel, map);\n\n    //find the extent corner opposite the passed corner\n    const getOpposingPoint = function(point) {\n      let x_ = null;\n      let y_ = null;\n      if (point[0] == extent[0]) {\n        x_ = extent[2];\n      } else if (point[0] == extent[2]) {\n        x_ = extent[0];\n      }\n      if (point[1] == extent[1]) {\n        y_ = extent[3];\n      } else if (point[1] == extent[3]) {\n        y_ = extent[1];\n      }\n      if (x_ !== null && y_ !== null) {\n        return [x_, y_];\n      }\n      return null;\n    };\n    if (vertex && extent) {\n      const x = (vertex[0] == extent[0] || vertex[0] == extent[2]) ? vertex[0] : null;\n      const y = (vertex[1] == extent[1] || vertex[1] == extent[3]) ? vertex[1] : null;\n\n      //snap to point\n      if (x !== null && y !== null) {\n        this.pointerHandler_ = getPointHandler(getOpposingPoint(vertex));\n      //snap to edge\n      } else if (x !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([x, extent[1]]),\n          getOpposingPoint([x, extent[3]])\n        );\n      } else if (y !== null) {\n        this.pointerHandler_ = getEdgeHandler(\n          getOpposingPoint([extent[0], y]),\n          getOpposingPoint([extent[2], y])\n        );\n      }\n    //no snap - new bbox\n    } else {\n      vertex = map.getCoordinateFromPixelInternal(pixel);\n      this.setExtent([vertex[0], vertex[1], vertex[0], vertex[1]]);\n      this.pointerHandler_ = getPointHandler(vertex);\n    }\n    return true; //event handled; start downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (this.pointerHandler_) {\n      const pixelCoordinate = mapBrowserEvent.coordinate;\n      this.setExtent(this.pointerHandler_(pixelCoordinate));\n      this.createOrUpdatePointerFeature_(pixelCoordinate);\n    }\n    return true;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(mapBrowserEvent) {\n    this.pointerHandler_ = null;\n    //If bbox is zero area, set to null;\n    const extent = this.getExtentInternal();\n    if (!extent || getArea(extent) === 0) {\n      this.setExtent(null);\n    }\n    return false; //Stop handling downup sequence\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.extentOverlay_.setMap(map);\n    this.vertexOverlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection (or user projection if set)\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtent() {\n    return toUserExtent(this.getExtentInternal(), this.getMap().getView().getProjection());\n  }\n\n  /**\n   * Returns the current drawn extent in the view projection\n   *\n   * @return {import(\"../extent.js\").Extent} Drawn extent in the view projection.\n   * @api\n   */\n  getExtentInternal() {\n    return this.extent_;\n  }\n\n  /**\n   * Manually sets the drawn extent, using the view projection.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent\n   * @api\n   */\n  setExtent(extent) {\n    //Null extent means no bbox\n    this.extent_ = extent ? extent : null;\n    this.createOrUpdateExtentFeature_(extent);\n    this.dispatchEvent(new ExtentEvent(this.extent_));\n  }\n}\n\n/**\n * Returns the default style for the drawn bbox\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default Extent style\n */\nfunction getDefaultExtentStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POLYGON];\n  };\n}\n\n/**\n * Returns the default style for the pointer\n *\n * @return {import(\"../style/Style.js\").StyleFunction} Default pointer style\n */\nfunction getDefaultPointerStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedPoint corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent} event handler\n */\nfunction getPointHandler(fixedPoint) {\n  return function(point) {\n    return boundingExtent([fixedPoint, point]);\n  };\n}\n\n/**\n * @param {import(\"../coordinate.js\").Coordinate} fixedP1 first corner that will be unchanged in the new extent\n * @param {import(\"../coordinate.js\").Coordinate} fixedP2 second corner that will be unchanged in the new extent\n * @returns {function (import(\"../coordinate.js\").Coordinate): import(\"../extent.js\").Extent|null} event handler\n */\nfunction getEdgeHandler(fixedP1, fixedP2) {\n  if (fixedP1[0] == fixedP2[0]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [point[0], fixedP2[1]]]);\n    };\n  } else if (fixedP1[1] == fixedP2[1]) {\n    return function(point) {\n      return boundingExtent([fixedP1, [fixedP2[0], point[1]]]);\n    };\n  } else {\n    return null;\n  }\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent extent\n * @returns {Array<Array<import(\"../coordinate.js\").Coordinate>>} extent line segments\n */\nfunction getSegments(extent) {\n  return [\n    [[extent[0], extent[1]], [extent[0], extent[3]]],\n    [[extent[0], extent[3]], [extent[2], extent[3]]],\n    [[extent[2], extent[3]], [extent[2], extent[1]]],\n    [[extent[2], extent[1]], [extent[0], extent[1]]]\n  ];\n}\n\n\nexport default Extent;\n","/**\n * @module ol/interaction/Modify\n */\nimport {getUid} from '../util.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Feature from '../Feature.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {equals} from '../array.js';\nimport {equals as coordinatesEqual, distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, squaredDistanceToSegment, closestOnSegment} from '../coordinate.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {always, primaryAction, altKeyOnly, singleClick} from '../events/condition.js';\nimport {boundingExtent, buffer as bufferExtent, createOrUpdateFromCoordinate as createExtent} from '../extent.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Point from '../geom/Point.js';\nimport PointerInteraction from './Pointer.js';\nimport VectorLayer from '../layer/Vector.js';\nimport VectorSource from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport {fromUserExtent, toUserExtent, fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * The segment index assigned to a circle's center when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CENTER_INDEX = 0;\n\n/**\n * The segment index assigned to a circle's circumference when\n * breaking up a circle into ModifySegmentDataType segments.\n * @type {number}\n */\nconst CIRCLE_CIRCUMFERENCE_INDEX = 1;\n\nconst tempExtent = [0, 0, 0, 0];\nconst tempSegment = [];\n\n/**\n * @enum {string}\n */\nconst ModifyEventType = {\n  /**\n   * Triggered upon feature modification start\n   * @event ModifyEvent#modifystart\n   * @api\n   */\n  MODIFYSTART: 'modifystart',\n  /**\n   * Triggered upon feature modification end\n   * @event ModifyEvent#modifyend\n   * @api\n   */\n  MODIFYEND: 'modifyend'\n};\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {Array<number>} [depth]\n * @property {Feature} feature\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry\n * @property {number} [index]\n * @property {Array<import(\"../extent.js\").Extent>} segment\n * @property {Array<SegmentData>} [featureSegments]\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event will be considered to add or move a\n * vertex to the sketch. Default is\n * {@link module:ol/events/condition~primaryAction}.\n * @property {import(\"../events/condition.js\").Condition} [deleteCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. By default,\n * {@link module:ol/events/condition~singleClick} with\n * {@link module:ol/events/condition~altKeyOnly} results in a vertex deletion.\n * @property {import(\"../events/condition.js\").Condition} [insertVertexCondition] A\n * function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and\n * returns a boolean to indicate whether a new vertex should be added to the sketch\n * features. Default is {@link module:ol/events/condition~always}.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the\n * pointer close enough to a segment or vertex for editing.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style used for the features being modified. By default the default edit\n * style is used (see {@link module:ol/style}).\n * @property {VectorSource} [source] The vector source with\n * features to modify.  If a vector source is not provided, a feature collection\n * must be provided with the features option.\n * @property {Collection<Feature>} [features]\n * The features the interaction works on.  If a feature collection is not\n * provided, a vector source must be provided with the source option.\n * @property {boolean} [wrapX=false] Wrap the world horizontally on the sketch\n * overlay.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Modify~Modify} instances are\n * instances of this type.\n */\nexport class ModifyEvent extends Event {\n  /**\n   * @param {ModifyEventType} type Type.\n   * @param {Collection<Feature>} features\n   * The features modified.\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} mapBrowserPointerEvent\n   * Associated {@link module:ol/MapBrowserPointerEvent}.\n   */\n  constructor(type, features, mapBrowserPointerEvent) {\n    super(type);\n\n    /**\n     * The features being modified.\n     * @type {Collection<Feature>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserPointerEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for modifying feature geometries.  To modify features that have\n * been added to an existing source, construct the modify interaction with the\n * `source` option.  If you want to modify features in a collection (for example,\n * the collection used by a select interaction), construct the interaction with\n * the `features` option.  The interaction must be constructed with either a\n * `source` or `features` option.\n *\n * By default, the interaction will allow deletion of vertices when the `alt`\n * key is pressed.  To configure the interaction with a different condition\n * for deletion, use the `deleteCondition` option.\n * @fires ModifyEvent\n * @api\n */\nclass Modify extends PointerInteraction {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /** @private */\n    this.boundHandleFeatureChange_ = this.handleFeatureChange_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : primaryAction;\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultDeleteCondition_ = function(mapBrowserEvent) {\n      return altKeyOnly(mapBrowserEvent) && singleClick(mapBrowserEvent);\n    };\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.deleteCondition_ = options.deleteCondition ?\n      options.deleteCondition : this.defaultDeleteCondition_;\n\n    /**\n     * @type {import(\"../events/condition.js\").Condition}\n     * @private\n     */\n    this.insertVertexCondition_ = options.insertVertexCondition ?\n      options.insertVertexCondition : always;\n\n    /**\n     * Editing vertex.\n     * @type {Feature}\n     * @private\n     */\n    this.vertexFeature_ = null;\n\n    /**\n     * Segments intersecting {@link this.vertexFeature_} by segment uid.\n     * @type {Object<string, boolean>}\n     * @private\n     */\n    this.vertexSegments_ = null;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.lastPixel_ = [0, 0];\n\n    /**\n     * Tracks if the next `singleclick` event should be ignored to prevent\n     * accidental deletion right after vertex creation.\n     * @type {boolean}\n     * @private\n     */\n    this.ignoreNextSingleClick_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.modified_ = false;\n\n    /**\n     * Segment RTree for each layer\n     * @type {RBush<SegmentData>}\n     * @private\n     */\n    this.rBush_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.snappedToVertex_ = false;\n\n    /**\n     * Indicate whether the interaction is currently changing a feature's\n     * coordinates.\n     * @type {boolean}\n     * @private\n     */\n    this.changingFeature_ = false;\n\n    /**\n     * @type {Array}\n     * @private\n     */\n    this.dragSegments_ = [];\n\n    /**\n     * Draw overlay where sketch features are drawn.\n     * @type {VectorLayer}\n     * @private\n     */\n    this.overlay_ = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        wrapX: !!options.wrapX\n      }),\n      style: options.style ? options.style : getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @const\n     * @private\n     * @type {!Object<string, function(Feature, import(\"../geom/Geometry.js\").default): void>}\n     */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this)\n    };\n\n\n    /**\n     * @type {VectorSource}\n     * @private\n     */\n    this.source_ = null;\n\n    let features;\n    if (options.source) {\n      this.source_ = options.source;\n      features = new Collection(this.source_.getFeatures());\n      this.source_.addEventListener(VectorEventType.ADDFEATURE, this.handleSourceAdd_.bind(this));\n      this.source_.addEventListener(VectorEventType.REMOVEFEATURE, this.handleSourceRemove_.bind(this));\n    } else {\n      features = options.features;\n    }\n    if (!features) {\n      throw new Error('The modify interaction requires features or a source');\n    }\n\n    /**\n     * @type {Collection<Feature>}\n     * @private\n     */\n    this.features_ = features;\n\n    this.features_.forEach(this.addFeature_.bind(this));\n    this.features_.addEventListener(CollectionEventType.ADD, this.handleFeatureAdd_.bind(this));\n    this.features_.addEventListener(CollectionEventType.REMOVE, this.handleFeatureRemove_.bind(this));\n\n    /**\n     * @type {import(\"../MapBrowserPointerEvent.js\").default}\n     * @private\n     */\n    this.lastPointerEvent_ = null;\n\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  addFeature_(feature) {\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (writer) {\n        writer(feature, geometry);\n      }\n    }\n    const map = this.getMap();\n    if (map && map.isRendered() && this.getActive()) {\n      this.handlePointerAtPixel_(this.lastPixel_, map);\n    }\n    feature.addEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {import(\"../MapBrowserPointerEvent.js\").default} evt Map browser event\n   * @private\n   */\n  willModifyFeatures_(evt) {\n    if (!this.modified_) {\n      this.modified_ = true;\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYSTART, this.features_, evt));\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeature_(feature) {\n    this.removeFeatureSegmentData_(feature);\n    // Remove the vertex feature if the collection of canditate features is empty.\n    if (this.vertexFeature_ && this.features_.getLength() === 0) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    feature.removeEventListener(EventType.CHANGE, this.boundHandleFeatureChange_);\n  }\n\n  /**\n   * @param {Feature} feature Feature.\n   * @private\n   */\n  removeFeatureSegmentData_(feature) {\n    const rBush = this.rBush_;\n    /** @type {Array<SegmentData>} */\n    const nodesToRemove = [];\n    rBush.forEach(\n      /**\n       * @param {SegmentData} node RTree node.\n       */\n      function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n    for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n      const nodeToRemove = nodesToRemove[i];\n      for (let j = this.dragSegments_.length - 1; j >= 0; --j) {\n        if (this.dragSegments_[j][0] === nodeToRemove) {\n          this.dragSegments_.splice(j, 1);\n        }\n      }\n      rBush.remove(nodeToRemove);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setActive(active) {\n    if (this.vertexFeature_ && !active) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n    super.setActive(active);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    this.overlay_.setMap(map);\n    super.setMap(map);\n  }\n\n  /**\n   * Get the overlay layer that this interaction renders sketch features to.\n   * @return {VectorLayer} Overlay layer.\n   * @api\n   */\n  getOverlay() {\n    return this.overlay_;\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceAdd_(event) {\n    if (event.feature) {\n      this.features_.push(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent} event Event.\n   * @private\n   */\n  handleSourceRemove_(event) {\n    if (event.feature) {\n      this.features_.remove(event.feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    this.addFeature_(/** @type {Feature} */ (evt.element));\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    if (!this.changingFeature_) {\n      const feature = /** @type {Feature} */ (evt.target);\n      this.removeFeature_(feature);\n      this.addFeature_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = /** @type {Feature} */ (evt.element);\n    this.removeFeature_(feature);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n\n    /** @type {SegmentData} */\n    const segmentData = {\n      feature: feature,\n      geometry: geometry,\n      segment: [coordinates, coordinates]\n    };\n\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        depth: [i],\n        index: i,\n        segment: [coordinates, coordinates]\n      };\n\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n\n      /** @type {SegmentData} */\n      const segmentData = {\n        feature: feature,\n        geometry: geometry,\n        index: i,\n        segment: segment\n      };\n\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n\n        /** @type {SegmentData} */\n        const segmentData = {\n          feature: feature,\n          geometry: geometry,\n          depth: [j],\n          index: i,\n          segment: segment\n        };\n\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n\n          /** @type {SegmentData} */\n          const segmentData = {\n            feature: feature,\n            geometry: geometry,\n            depth: [j, k],\n            index: i,\n            segment: segment\n          };\n\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * We convert a circle into two segments.  The segment at index\n   * {@link CIRCLE_CENTER_INDEX} is the\n   * circle's center (a point).  The segment at index\n   * {@link CIRCLE_CIRCUMFERENCE_INDEX} is\n   * the circumference, and is not a line segment.\n   *\n   * @param {Feature} feature Feature.\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const coordinates = geometry.getCenter();\n\n    /** @type {SegmentData} */\n    const centerSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CENTER_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    /** @type {SegmentData} */\n    const circumferenceSegmentData = {\n      feature: feature,\n      geometry: geometry,\n      index: CIRCLE_CIRCUMFERENCE_INDEX,\n      segment: [coordinates, coordinates]\n    };\n\n    const featureSegments = [centerSegmentData, circumferenceSegmentData];\n    centerSegmentData.featureSegments = featureSegments;\n    circumferenceSegmentData.featureSegments = featureSegments;\n    this.rBush_.insert(createExtent(coordinates), centerSegmentData);\n    this.rBush_.insert(geometry.getExtent(), circumferenceSegmentData);\n  }\n\n  /**\n   * @param {Feature} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const geometry = geometries[i];\n      const writer = this.SEGMENT_WRITERS_[geometry.getType()];\n      writer(feature, geometry);\n    }\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @return {Feature} Vertex feature.\n   * @private\n   */\n  createOrUpdateVertexFeature_(coordinates) {\n    let vertexFeature = this.vertexFeature_;\n    if (!vertexFeature) {\n      vertexFeature = new Feature(new Point(coordinates));\n      this.vertexFeature_ = vertexFeature;\n      this.overlay_.getSource().addFeature(vertexFeature);\n    } else {\n      const geometry = vertexFeature.getGeometry();\n      geometry.setCoordinates(coordinates);\n    }\n    return vertexFeature;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent map browser event} and may modify the geometry.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!(/** @type {import(\"../MapBrowserPointerEvent.js\").default} */ (mapBrowserEvent).pointerEvent)) {\n      return true;\n    }\n    this.lastPointerEvent_ = mapBrowserEvent;\n\n    let handled;\n    if (!mapBrowserEvent.map.getView().getInteracting() &&\n        mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE &&\n        !this.handlingDownUpSequence) {\n      this.handlePointerMove_(mapBrowserEvent);\n    }\n    if (this.vertexFeature_ && this.deleteCondition_(mapBrowserEvent)) {\n      if (mapBrowserEvent.type != MapBrowserEventType.SINGLECLICK || !this.ignoreNextSingleClick_) {\n        handled = this.removePoint();\n      } else {\n        handled = true;\n      }\n    }\n\n    if (mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK) {\n      this.ignoreNextSingleClick_ = false;\n    }\n\n    return super.handleEvent(mapBrowserEvent) && !handled;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(evt) {\n    this.ignoreNextSingleClick_ = false;\n    this.willModifyFeatures_(evt);\n\n    const vertex = evt.coordinate;\n    for (let i = 0, ii = this.dragSegments_.length; i < ii; ++i) {\n      const dragSegment = this.dragSegments_[i];\n      const segmentData = dragSegment[0];\n      const depth = segmentData.depth;\n      const geometry = segmentData.geometry;\n      let coordinates;\n      const segment = segmentData.segment;\n      const index = dragSegment[1];\n\n      while (vertex.length < geometry.getStride()) {\n        vertex.push(segment[index][vertex.length]);\n      }\n\n      switch (geometry.getType()) {\n        case GeometryType.POINT:\n          coordinates = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.MULTI_POINT:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index] = vertex;\n          segment[0] = vertex;\n          segment[1] = vertex;\n          break;\n        case GeometryType.LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_LINE_STRING:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.MULTI_POLYGON:\n          coordinates = geometry.getCoordinates();\n          coordinates[depth[1]][depth[0]][segmentData.index + index] = vertex;\n          segment[index] = vertex;\n          break;\n        case GeometryType.CIRCLE:\n          segment[0] = vertex;\n          segment[1] = vertex;\n          if (segmentData.index === CIRCLE_CENTER_INDEX) {\n            this.changingFeature_ = true;\n            geometry.setCenter(vertex);\n            this.changingFeature_ = false;\n          } else { // We're dragging the circle's circumference:\n            this.changingFeature_ = true;\n            geometry.setRadius(coordinateDistance(geometry.getCenter(), vertex));\n            this.changingFeature_ = false;\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (coordinates) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n      }\n    }\n    this.createOrUpdateVertexFeature_(vertex);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(evt) {\n    if (!this.condition_(evt)) {\n      return false;\n    }\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n    const pixelCoordinate = evt.coordinate;\n    this.dragSegments_.length = 0;\n    this.modified_ = false;\n    const vertexFeature = this.vertexFeature_;\n    if (vertexFeature) {\n      const projection = evt.map.getView().getProjection();\n      const insertVertices = [];\n      const vertex = vertexFeature.getGeometry().getCoordinates();\n      const vertexExtent = boundingExtent([vertex]);\n      const segmentDataMatches = this.rBush_.getInExtent(vertexExtent);\n      const componentSegments = {};\n      segmentDataMatches.sort(compareIndexes);\n      for (let i = 0, ii = segmentDataMatches.length; i < ii; ++i) {\n        const segmentDataMatch = segmentDataMatches[i];\n        const segment = segmentDataMatch.segment;\n        let uid = getUid(segmentDataMatch.feature);\n        const depth = segmentDataMatch.depth;\n        if (depth) {\n          uid += '-' + depth.join('-'); // separate feature components\n        }\n        if (!componentSegments[uid]) {\n          componentSegments[uid] = new Array(2);\n        }\n\n        if (segmentDataMatch.geometry.getType() === GeometryType.CIRCLE && segmentDataMatch.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          const closestVertex = closestOnSegmentData(pixelCoordinate, segmentDataMatch, projection);\n          if (coordinatesEqual(closestVertex, vertex) && !componentSegments[uid][0]) {\n            this.dragSegments_.push([segmentDataMatch, 0]);\n            componentSegments[uid][0] = segmentDataMatch;\n          }\n          continue;\n        }\n\n        if (coordinatesEqual(segment[0], vertex) && !componentSegments[uid][0]) {\n          this.dragSegments_.push([segmentDataMatch, 0]);\n          componentSegments[uid][0] = segmentDataMatch;\n          continue;\n        }\n\n        if (coordinatesEqual(segment[1], vertex) && !componentSegments[uid][1]) {\n          // prevent dragging closed linestrings by the connecting node\n          if ((segmentDataMatch.geometry.getType() ===\n              GeometryType.LINE_STRING ||\n              segmentDataMatch.geometry.getType() ===\n              GeometryType.MULTI_LINE_STRING) &&\n              componentSegments[uid][0] &&\n              componentSegments[uid][0].index === 0) {\n            continue;\n          }\n\n          this.dragSegments_.push([segmentDataMatch, 1]);\n          componentSegments[uid][1] = segmentDataMatch;\n          continue;\n        }\n\n        if (getUid(segment) in this.vertexSegments_ &&\n            (!componentSegments[uid][0] && !componentSegments[uid][1]) &&\n            this.insertVertexCondition_(evt)) {\n          insertVertices.push([segmentDataMatch, vertex]);\n        }\n      }\n\n      if (insertVertices.length) {\n        this.willModifyFeatures_(evt);\n      }\n\n      for (let j = insertVertices.length - 1; j >= 0; --j) {\n        this.insertVertex_.apply(this, insertVertices[j]);\n      }\n    }\n    return !!this.vertexFeature_;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    for (let i = this.dragSegments_.length - 1; i >= 0; --i) {\n      const segmentData = this.dragSegments_[i][0];\n      const geometry = segmentData.geometry;\n      if (geometry.getType() === GeometryType.CIRCLE) {\n        // Update a circle object in the R* bush:\n        const coordinates = geometry.getCenter();\n        const centerSegmentData = segmentData.featureSegments[0];\n        const circumferenceSegmentData = segmentData.featureSegments[1];\n        centerSegmentData.segment[0] = coordinates;\n        centerSegmentData.segment[1] = coordinates;\n        circumferenceSegmentData.segment[0] = coordinates;\n        circumferenceSegmentData.segment[1] = coordinates;\n        this.rBush_.update(createExtent(coordinates), centerSegmentData);\n        this.rBush_.update(geometry.getExtent(), circumferenceSegmentData);\n      } else {\n        this.rBush_.update(boundingExtent(segmentData.segment), segmentData);\n      }\n    }\n    if (this.modified_) {\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} evt Event.\n   * @private\n   */\n  handlePointerMove_(evt) {\n    this.lastPixel_ = evt.pixel;\n    this.handlePointerAtPixel_(evt.pixel, evt.map);\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @private\n   */\n  handlePointerAtPixel_(pixel, map) {\n    const pixelCoordinate = map.getCoordinateFromPixel(pixel);\n    const projection = map.getView().getProjection();\n    const sortByDistance = function(a, b) {\n      return projectedDistanceToSegmentDataSquared(pixelCoordinate, a, projection) -\n          projectedDistanceToSegmentDataSquared(pixelCoordinate, b, projection);\n    };\n\n    const viewExtent = fromUserExtent(createExtent(pixelCoordinate, tempExtent), projection);\n    const buffer = map.getView().getResolution() * this.pixelTolerance_;\n    const box = toUserExtent(bufferExtent(viewExtent, buffer, tempExtent), projection);\n\n    const rBush = this.rBush_;\n    const nodes = rBush.getInExtent(box);\n    if (nodes.length > 0) {\n      nodes.sort(sortByDistance);\n      const node = nodes[0];\n      const closestSegment = node.segment;\n      let vertex = closestOnSegmentData(pixelCoordinate, node, projection);\n      const vertexPixel = map.getPixelFromCoordinate(vertex);\n      let dist = coordinateDistance(pixel, vertexPixel);\n      if (dist <= this.pixelTolerance_) {\n        /** @type {Object<string, boolean>} */\n        const vertexSegments = {};\n\n        if (node.geometry.getType() === GeometryType.CIRCLE && node.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n          this.snappedToVertex_ = true;\n          this.createOrUpdateVertexFeature_(vertex);\n        } else {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          this.snappedToVertex_ = dist <= this.pixelTolerance_;\n          if (this.snappedToVertex_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          }\n          this.createOrUpdateVertexFeature_(vertex);\n          for (let i = 1, ii = nodes.length; i < ii; ++i) {\n            const segment = nodes[i].segment;\n            if ((coordinatesEqual(closestSegment[0], segment[0]) &&\n                coordinatesEqual(closestSegment[1], segment[1]) ||\n                (coordinatesEqual(closestSegment[0], segment[1]) &&\n                coordinatesEqual(closestSegment[1], segment[0])))) {\n              vertexSegments[getUid(segment)] = true;\n            } else {\n              break;\n            }\n          }\n        }\n\n        vertexSegments[getUid(closestSegment)] = true;\n        this.vertexSegments_ = vertexSegments;\n        return;\n      }\n    }\n    if (this.vertexFeature_) {\n      this.overlay_.getSource().removeFeature(this.vertexFeature_);\n      this.vertexFeature_ = null;\n    }\n  }\n\n  /**\n   * @param {SegmentData} segmentData Segment data.\n   * @param {import(\"../coordinate.js\").Coordinate} vertex Vertex.\n   * @private\n   */\n  insertVertex_(segmentData, vertex) {\n    const segment = segmentData.segment;\n    const feature = segmentData.feature;\n    const geometry = segmentData.geometry;\n    const depth = segmentData.depth;\n    const index = segmentData.index;\n    let coordinates;\n\n    while (vertex.length < geometry.getStride()) {\n      vertex.push(0);\n    }\n\n    switch (geometry.getType()) {\n      case GeometryType.MULTI_LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.MULTI_POLYGON:\n        coordinates = geometry.getCoordinates();\n        coordinates[depth[1]][depth[0]].splice(index + 1, 0, vertex);\n        break;\n      case GeometryType.LINE_STRING:\n        coordinates = geometry.getCoordinates();\n        coordinates.splice(index + 1, 0, vertex);\n        break;\n      default:\n        return;\n    }\n\n    this.setGeometryCoordinates_(geometry, coordinates);\n    const rTree = this.rBush_;\n    rTree.remove(segmentData);\n    this.updateSegmentIndices_(geometry, index, depth, 1);\n\n    /** @type {SegmentData} */\n    const newSegmentData = {\n      segment: [segment[0], vertex],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index\n    };\n\n    rTree.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n    this.dragSegments_.push([newSegmentData, 1]);\n\n    /** @type {SegmentData} */\n    const newSegmentData2 = {\n      segment: [vertex, segment[1]],\n      feature: feature,\n      geometry: geometry,\n      depth: depth,\n      index: index + 1\n    };\n\n    rTree.insert(boundingExtent(newSegmentData2.segment), newSegmentData2);\n    this.dragSegments_.push([newSegmentData2, 0]);\n    this.ignoreNextSingleClick_ = true;\n  }\n\n  /**\n   * Removes the vertex currently being pointed.\n   * @return {boolean} True when a vertex was removed.\n   * @api\n   */\n  removePoint() {\n    if (this.lastPointerEvent_ && this.lastPointerEvent_.type != MapBrowserEventType.POINTERDRAG) {\n      const evt = this.lastPointerEvent_;\n      this.willModifyFeatures_(evt);\n      const removed = this.removeVertex_();\n      this.dispatchEvent(new ModifyEvent(ModifyEventType.MODIFYEND, this.features_, evt));\n      this.modified_ = false;\n      return removed;\n    }\n    return false;\n  }\n\n  /**\n   * Removes a vertex from all matching features.\n   * @return {boolean} True when a vertex was removed.\n   * @private\n   */\n  removeVertex_() {\n    const dragSegments = this.dragSegments_;\n    const segmentsByFeature = {};\n    let deleted = false;\n    let component, coordinates, dragSegment, geometry, i, index, left;\n    let newIndex, right, segmentData, uid;\n    for (i = dragSegments.length - 1; i >= 0; --i) {\n      dragSegment = dragSegments[i];\n      segmentData = dragSegment[0];\n      uid = getUid(segmentData.feature);\n      if (segmentData.depth) {\n        // separate feature components\n        uid += '-' + segmentData.depth.join('-');\n      }\n      if (!(uid in segmentsByFeature)) {\n        segmentsByFeature[uid] = {};\n      }\n      if (dragSegment[1] === 0) {\n        segmentsByFeature[uid].right = segmentData;\n        segmentsByFeature[uid].index = segmentData.index;\n      } else if (dragSegment[1] == 1) {\n        segmentsByFeature[uid].left = segmentData;\n        segmentsByFeature[uid].index = segmentData.index + 1;\n      }\n\n    }\n    for (uid in segmentsByFeature) {\n      right = segmentsByFeature[uid].right;\n      left = segmentsByFeature[uid].left;\n      index = segmentsByFeature[uid].index;\n      newIndex = index - 1;\n      if (left !== undefined) {\n        segmentData = left;\n      } else {\n        segmentData = right;\n      }\n      if (newIndex < 0) {\n        newIndex = 0;\n      }\n      geometry = segmentData.geometry;\n      coordinates = geometry.getCoordinates();\n      component = coordinates;\n      deleted = false;\n      switch (geometry.getType()) {\n        case GeometryType.MULTI_LINE_STRING:\n          if (coordinates[segmentData.depth[0]].length > 2) {\n            coordinates[segmentData.depth[0]].splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.LINE_STRING:\n          if (coordinates.length > 2) {\n            coordinates.splice(index, 1);\n            deleted = true;\n          }\n          break;\n        case GeometryType.MULTI_POLYGON:\n          component = component[segmentData.depth[1]];\n          /* falls through */\n        case GeometryType.POLYGON:\n          component = component[segmentData.depth[0]];\n          if (component.length > 4) {\n            if (index == component.length - 1) {\n              index = 0;\n            }\n            component.splice(index, 1);\n            deleted = true;\n            if (index === 0) {\n              // close the ring again\n              component.pop();\n              component.push(component[0]);\n              newIndex = component.length - 1;\n            }\n          }\n          break;\n        default:\n          // pass\n      }\n\n      if (deleted) {\n        this.setGeometryCoordinates_(geometry, coordinates);\n        const segments = [];\n        if (left !== undefined) {\n          this.rBush_.remove(left);\n          segments.push(left.segment[0]);\n        }\n        if (right !== undefined) {\n          this.rBush_.remove(right);\n          segments.push(right.segment[1]);\n        }\n        if (left !== undefined && right !== undefined) {\n\n          /** @type {SegmentData} */\n          const newSegmentData = {\n            depth: segmentData.depth,\n            feature: segmentData.feature,\n            geometry: segmentData.geometry,\n            index: newIndex,\n            segment: segments\n          };\n\n          this.rBush_.insert(boundingExtent(newSegmentData.segment), newSegmentData);\n        }\n        this.updateSegmentIndices_(geometry, index, segmentData.depth, -1);\n        if (this.vertexFeature_) {\n          this.overlay_.getSource().removeFeature(this.vertexFeature_);\n          this.vertexFeature_ = null;\n        }\n        dragSegments.length = 0;\n      }\n\n    }\n    return deleted;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {Array} coordinates Coordinates.\n   * @private\n   */\n  setGeometryCoordinates_(geometry, coordinates) {\n    this.changingFeature_ = true;\n    geometry.setCoordinates(coordinates);\n    this.changingFeature_ = false;\n  }\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {number} index Index.\n   * @param {Array<number>|undefined} depth Depth.\n   * @param {number} delta Delta (1 or -1).\n   * @private\n   */\n  updateSegmentIndices_(geometry, index, depth, delta) {\n    this.rBush_.forEachInExtent(geometry.getExtent(), function(segmentDataMatch) {\n      if (segmentDataMatch.geometry === geometry &&\n          (depth === undefined || segmentDataMatch.depth === undefined ||\n          equals(segmentDataMatch.depth, depth)) &&\n          segmentDataMatch.index > index) {\n        segmentDataMatch.index += delta;\n      }\n    });\n  }\n}\n\n\n/**\n * @param {SegmentData} a The first segment data.\n * @param {SegmentData} b The second segment data.\n * @return {number} The difference in indexes.\n */\nfunction compareIndexes(a, b) {\n  return a.index - b.index;\n}\n\n\n/**\n * Returns the distance from a point to a line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The coordinates of the point from\n *        which to calculate the distance.\n * @param {SegmentData} segmentData The object describing the line\n *        segment we are calculating the distance to.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {number} The square of the distance between a point and a line segment.\n */\nfunction projectedDistanceToSegmentDataSquared(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE) {\n    const circleGeometry = /** @type {import(\"../geom/Circle.js\").default} */ (geometry);\n\n    if (segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n      const distanceToCenterSquared =\n            squaredCoordinateDistance(circleGeometry.getCenter(), pointCoordinates);\n      const distanceToCircumference =\n            Math.sqrt(distanceToCenterSquared) - circleGeometry.getRadius();\n      return distanceToCircumference * distanceToCircumference;\n    }\n  }\n\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return squaredDistanceToSegment(coordinate, tempSegment);\n}\n\n/**\n * Returns the point closest to a given line segment.\n *\n * @param {import(\"../coordinate.js\").Coordinate} pointCoordinates The point to which a closest point\n *        should be found.\n * @param {SegmentData} segmentData The object describing the line\n *        segment which should contain the closest point.\n * @param {import(\"../proj/Projection.js\").default} projection The view projection.\n * @return {import(\"../coordinate.js\").Coordinate} The point closest to the specified line segment.\n */\nfunction closestOnSegmentData(pointCoordinates, segmentData, projection) {\n  const geometry = segmentData.geometry;\n\n  if (geometry.getType() === GeometryType.CIRCLE && segmentData.index === CIRCLE_CIRCUMFERENCE_INDEX) {\n    return geometry.getClosestPoint(pointCoordinates);\n  }\n  const coordinate = fromUserCoordinate(pointCoordinates, projection);\n  tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n  tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n  return toUserCoordinate(closestOnSegment(coordinate, tempSegment), projection);\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const style = createEditingStyle();\n  return function(feature, resolution) {\n    return style[GeometryType.POINT];\n  };\n}\n\n\nexport default Modify;\n","/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from './Interaction.js';\nimport {clear} from '../obj.js';\nimport {createEditingStyle} from '../style/Style.js';\nimport Collection from '../Collection.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {import(\"../style/Style.js\").StyleLike} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * If set to `false` the selected feature's style will not change.\n * @property {import(\"../events/condition.js\").Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {import(\"../events/condition.js\").Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array<import(\"../Feature.js\").default>} selected Selected features.\n   * @param {Array<import(\"../Feature.js\").default>} deselected Deselected features.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @private\n     * @type {import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction|null}\n     */\n    this.style_ = options.style !== undefined ? options.style : getDefaultStyleFunction();\n\n    /**\n     * An association between selected feature (key)\n     * and original style (value)\n     * @private\n     * @type {Object.<number, import(\"../style/Style.js\").default|Array.<import(\"../style/Style.js\").default>|import(\"../style/Style.js\").StyleFunction>}\n     */\n    this.featureStyleAssociation_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../Collection.js\").default}\n     */\n    this.features_ = options.features || new Collection();\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object<string, import(\"../layer/Layer.js\").default>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    const features = this.getFeatures();\n    features.addEventListener(CollectionEventType.ADD, this.addFeature_.bind(this));\n    features.addEventListener(CollectionEventType.REMOVE, this.removeFeature_.bind(this));\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {import(\"../layer/Layer.js\").default} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    this.featureLayerAssociation_[getUid(feature)] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.features_;\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature\n   * @return {import('../layer/Vector.js').default} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    return (\n      /** @type {import('../layer/Vector.js').default} */ (this.featureLayerAssociation_[getUid(feature)])\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    if (currentMap && this.style_) {\n      this.features_.forEach(this.removeSelectedStyle_.bind(this));\n    }\n    super.setMap(map);\n    if (map && this.style_) {\n      this.features_.forEach(this.giveSelectedStyle_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.giveSelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const feature = evt.element;\n    if (this.style_) {\n      this.removeSelectedStyle_(feature);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  giveSelectedStyle_(feature) {\n    const key = getUid(feature);\n    this.featureStyleAssociation_[key] = feature.getStyle();\n    feature.setStyle(this.style_);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  removeSelectedStyle_(feature) {\n    const key = getUid(feature);\n    feature.setStyle(this.featureStyleAssociation_[key]);\n    delete this.featureStyleAssociation_[key];\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    delete this.featureLayerAssociation_[getUid(feature)];\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.getFeatures();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n         * @param {import(\"../layer/Layer.js\").default} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return true;\n}\n\n\n/**\n * @return {import(\"../style/Style.js\").StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n","/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction from './Pointer.js';\nimport {getValues} from '../obj.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\nimport {fromUserCoordinate, toUserCoordinate} from '../proj.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {import(\"../coordinate.js\").Coordinate|null} vertex\n * @property {import(\"../pixel.js\").Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {import(\"../Feature.js\").default} feature\n * @property {Array<import(\"../coordinate.js\").Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../Collection.js\").default<import(\"../Feature.js\").default>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {import(\"../source/Vector.js\").default} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @param  {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n * @return {import(\"../Feature.js\").default} Feature.\n */\nfunction getFeatureFromEvent(evt) {\n  if (/** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature) {\n    return /** @type {import(\"../source/Vector.js\").VectorSourceEvent} */ (evt).feature;\n  } else if (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element) {\n    return /** @type {import(\"../Feature.js\").default} */ (/** @type {import(\"../Collection.js\").CollectionEvent} */ (evt).element);\n  }\n}\n\nconst tempSegment = [];\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     const snap = new Snap({\n *       source: source\n *     });\n *\n *     map.addInteraction(snap);\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    const options = opt_options ? opt_options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (options);\n\n    if (!pointerOptions.handleDownEvent) {\n      pointerOptions.handleDownEvent = TRUE;\n    }\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @type {import(\"../source/Vector.js\").default}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {import(\"../Collection.js\").default<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object<string, import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object<string, import(\"../extent.js\").Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object<string, import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n    * Segment RTree for each layer\n    * @type {import(\"../structs/RBush.js\").default<SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n    /**\n    * @const\n    * @private\n    * @type {Object<string, function(import(\"../Feature.js\").default, import(\"../geom/Geometry.js\").default): void>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_.bind(this),\n      'LineString': this.writeLineStringGeometry_.bind(this),\n      'LinearRing': this.writeLineStringGeometry_.bind(this),\n      'Polygon': this.writePolygonGeometry_.bind(this),\n      'MultiPoint': this.writeMultiPointGeometry_.bind(this),\n      'MultiLineString': this.writeMultiLineStringGeometry_.bind(this),\n      'MultiPolygon': this.writeMultiPolygonGeometry_.bind(this),\n      'GeometryCollection': this.writeGeometryCollectionGeometry_.bind(this),\n      'Circle': this.writeCircleGeometry_.bind(this)\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter(feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {import(\"../Collection.js\").default<import(\"../Feature.js\").default>|Array<import(\"../Feature.js\").default>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return features;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleEvent(evt) {\n    const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n    if (result.snapped) {\n      evt.coordinate = result.vertex.slice(0, 2);\n      evt.pixel = result.vertexPixel;\n    }\n    return super.handleEvent(evt);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../source/Vector.js\").VectorSourceEvent|import(\"../Collection.js\").CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    const feature = getFeatureFromEvent(evt);\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {import(\"../Feature.js\").default} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(evt) {\n    const featuresToUpdate = getValues(this.pendingFeatures_);\n    if (featuresToUpdate.length) {\n      featuresToUpdate.forEach(this.updateFeature_.bind(this));\n      this.pendingFeatures_ = {};\n    }\n    return false;\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = /** @type {Array<import(\"../Feature.js\").default>} */ (this.getFeatures_());\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel\n   * @param {import(\"../coordinate.js\").Coordinate} pixelCoordinate Coordinate\n   * @param {import(\"../PluggableMap.js\").default} map Map.\n   * @return {Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n\n    if (segments.length === 0) {\n      return {\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      };\n    }\n\n    const projection = map.getView().getProjection();\n    const projectedCoordinate = fromUserCoordinate(pixelCoordinate, projection);\n\n    let closestSegmentData;\n    let minSquaredDistance = Infinity;\n    for (let i = 0; i < segments.length; ++i) {\n      const segmentData = segments[i];\n      tempSegment[0] = fromUserCoordinate(segmentData.segment[0], projection);\n      tempSegment[1] = fromUserCoordinate(segmentData.segment[1], projection);\n      const delta = squaredDistanceToSegment(projectedCoordinate, tempSegment);\n      if (delta < minSquaredDistance) {\n        closestSegmentData = segmentData;\n        minSquaredDistance = delta;\n      }\n    }\n    const closestSegment = closestSegmentData.segment;\n\n    if (this.vertex_ && !this.edge_) {\n      const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n      const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n      const squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n      const squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n      const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n      if (dist <= this.pixelTolerance_) {\n        snapped = true;\n        vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n      }\n    } else if (this.edge_) {\n      const isCircle = closestSegmentData.feature.getGeometry().getType() === GeometryType.CIRCLE;\n      if (isCircle) {\n        vertex = closestOnCircle(pixelCoordinate,\n          /** @type {import(\"../geom/Circle.js\").default} */ (closestSegmentData.feature.getGeometry()));\n      } else {\n        tempSegment[0] = fromUserCoordinate(closestSegment[0], projection);\n        tempSegment[1] = fromUserCoordinate(closestSegment[1], projection);\n        vertex = toUserCoordinate(closestOnSegment(projectedCoordinate, tempSegment), projection);\n      }\n      vertexPixel = map.getPixelFromCoordinate(vertex);\n\n      if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n        snapped = true;\n        if (this.vertex_ && !isCircle) {\n          const pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n          const pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n          const squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n          const squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n          const dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n          if (dist <= this.pixelTolerance_) {\n            vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n            vertexPixel = map.getPixelFromCoordinate(vertex);\n          }\n        }\n      }\n    }\n\n    if (snapped) {\n      vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n    }\n\n    return {\n      snapped: snapped,\n      vertex: vertex,\n      vertexPixel: vertexPixel\n    };\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const polygon = fromCircle(geometry);\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter(feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = {\n        feature: feature,\n        segment: segment\n      };\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = {\n        feature: feature,\n        segment: [coordinates, coordinates]\n      };\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = {\n            feature: feature,\n            segment: segment\n          };\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = {\n      feature: feature,\n      segment: [coordinates, coordinates]\n    };\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature\n   * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = {\n          feature: feature,\n          segment: segment\n        };\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\nexport default Snap;\n","/**\n * @module ol/interaction/Translate\n */\nimport Collection from '../Collection.js';\nimport {getChangeEventType} from '../Object.js';\nimport Event from '../events/Event.js';\nimport {TRUE} from '../functions.js';\nimport {includes} from '../array.js';\nimport PointerInteraction from './Pointer.js';\nimport InteractionProperty from './Property.js';\n\n\n/**\n * @enum {string}\n */\nconst TranslateEventType = {\n  /**\n   * Triggered upon feature translation start.\n   * @event TranslateEvent#translatestart\n   * @api\n   */\n  TRANSLATESTART: 'translatestart',\n  /**\n   * Triggered upon feature translation.\n   * @event TranslateEvent#translating\n   * @api\n   */\n  TRANSLATING: 'translating',\n  /**\n   * Triggered upon feature translation end.\n   * @event TranslateEvent#translateend\n   * @api\n   */\n  TRANSLATEEND: 'translateend'\n};\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default):boolean} FilterFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {Collection<import(\"../Feature.js\").default>} [features] Only features contained in this collection will be able to be translated. If\n * not specified, all features on the map will be able to be translated.\n * @property {Array<import(\"../layer/Layer.js\").default>|function(import(\"../layer/Layer.js\").default): boolean} [layers] A list of layers from which features should be\n * translated. Alternatively, a filter function can be provided. The\n * function will be called for each layer in the map and should return\n * `true` for layers that you want to be translatable. If the option is\n * absent, all visible layers will be considered translatable.\n * @property {FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * translated or `false` otherwise.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside the radius around the given position\n * will be checked for features.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Translate~Translate} instances\n * are instances of this type.\n */\nexport class TranslateEvent extends Event {\n  /**\n   * @param {TranslateEventType} type Type.\n   * @param {Collection<import(\"../Feature.js\").default>} features The features translated.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} startCoordinate The original coordinates before.translation started\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   */\n  constructor(type, features, coordinate, startCoordinate, mapBrowserEvent) {\n\n    super(type);\n\n    /**\n     * The features being translated.\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @api\n     */\n    this.features = features;\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * The coordinate of the start position before translation started.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.startCoordinate = startCoordinate;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for translating (moving) features.\n *\n * @fires TranslateEvent\n * @api\n */\nclass Translate extends PointerInteraction {\n  /**\n   * @param {Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n    const options = opt_options ? opt_options : {};\n\n    super(/** @type {import(\"./Pointer.js\").Options} */ (options));\n\n    /**\n     * The last position we translated to.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.lastCoordinate_ = null;\n\n    /**\n     * The start position before translation started.\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @private\n     */\n    this.startCoordinate_ = null;\n\n\n    /**\n     * @type {Collection<import(\"../Feature.js\").default>}\n     * @private\n     */\n    this.features_ = options.features !== undefined ? options.features : null;\n\n    /** @type {function(import(\"../layer/Layer.js\").default): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(import(\"../layer/Layer.js\").default): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * @private\n     * @type {FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    /**\n     * @type {import(\"../Feature.js\").default}\n     * @private\n     */\n    this.lastFeature_ = null;\n\n    this.addEventListener(getChangeEventType(InteractionProperty.ACTIVE), this.handleActiveChanged_);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDownEvent(event) {\n    this.lastFeature_ = this.featuresAtPixel_(event.pixel, event.map);\n    if (!this.lastCoordinate_ && this.lastFeature_) {\n      this.startCoordinate_ = event.coordinate;\n      this.lastCoordinate_ = event.coordinate;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATESTART, features,\n          event.coordinate, this.startCoordinate_, event));\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleUpEvent(event) {\n    if (this.lastCoordinate_) {\n      this.lastCoordinate_ = null;\n      this.handleMoveEvent(event);\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATEEND, features,\n          event.coordinate, this.startCoordinate_, event));\n      // cleanup\n      this.startCoordinate_ = null;\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleDragEvent(event) {\n    if (this.lastCoordinate_) {\n      const newCoordinate = event.coordinate;\n      const deltaX = newCoordinate[0] - this.lastCoordinate_[0];\n      const deltaY = newCoordinate[1] - this.lastCoordinate_[1];\n\n      const features = this.features_ || new Collection([this.lastFeature_]);\n\n      features.forEach(function(feature) {\n        const geom = feature.getGeometry();\n        geom.translate(deltaX, deltaY);\n        feature.setGeometry(geom);\n      });\n\n      this.lastCoordinate_ = newCoordinate;\n      this.dispatchEvent(\n        new TranslateEvent(\n          TranslateEventType.TRANSLATING, features,\n          newCoordinate, this.startCoordinate_, event));\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  handleMoveEvent(event) {\n    const elem = event.map.getViewport();\n\n    // Change the cursor to grab/grabbing if hovering any of the features managed\n    // by the interaction\n    if (this.featuresAtPixel_(event.pixel, event.map)) {\n      elem.classList.remove(this.lastCoordinate_ ? 'ol-grab' : 'ol-grabbing');\n      elem.classList.add(this.lastCoordinate_ ? 'ol-grabbing' : 'ol-grab');\n    } else {\n      elem.classList.remove('ol-grab', 'ol-grabbing');\n    }\n  }\n\n  /**\n   * Tests to see if the given coordinates intersects any of our selected\n   * features.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel coordinate to test for intersection.\n   * @param {import(\"../PluggableMap.js\").default} map Map to test the intersection on.\n   * @return {import(\"../Feature.js\").default} Returns the feature found at the specified pixel\n   * coordinates.\n   * @private\n   */\n  featuresAtPixel_(pixel, map) {\n    return map.forEachFeatureAtPixel(pixel,\n      function(feature, layer) {\n        if (this.filter_(feature, layer)) {\n          if (!this.features_ || includes(this.features_.getArray(), feature)) {\n            return feature;\n          }\n        }\n      }.bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n    super.setMap(map);\n    this.updateState_(oldMap);\n  }\n\n  /**\n   * @private\n   */\n  handleActiveChanged_() {\n    this.updateState_(null);\n  }\n\n  /**\n   * @param {import(\"../PluggableMap.js\").default} oldMap Old map.\n   * @private\n   */\n  updateState_(oldMap) {\n    let map = this.getMap();\n    const active = this.getActive();\n    if (!map || !active) {\n      map = map || oldMap;\n      if (map) {\n        const elem = map.getViewport();\n        elem.classList.remove('ol-grab', 'ol-grabbing');\n      }\n    }\n  }\n}\n\nexport default Translate;\n","import $olgm$OLGoogleMaps from './olgm/OLGoogleMaps';\nimport $olgm$gm$ImageOverlay from './olgm/gm/ImageOverlay';\nimport $olgm$gm$MapElement from './olgm/gm/MapElement';\nimport $olgm$gm$MapIcon from './olgm/gm/MapIcon';\nimport $olgm$gm$MapLabel from './olgm/gm/MapLabel';\nimport $olgm$gm$PanesOverlay from './olgm/gm/PanesOverlay';\nimport $olgm$herald$ImageWMSSource from './olgm/herald/ImageWMSSource';\nimport $olgm$herald$Layers from './olgm/herald/Layers';\nimport $olgm$herald$Source from './olgm/herald/Source';\nimport $olgm$herald$TileSource from './olgm/herald/TileSource';\nimport $olgm$herald$VectorSource from './olgm/herald/VectorSource';\nimport $olgm$layer$Google from './olgm/layer/Google';\nimport * as _olgm_interaction from './olgm/interaction';\n\nvar olgm = window['olgm'] = {};\n\nolgm.gm = {};\nolgm.interaction = {};\nolgm.layer = {};\nolgm.OLGoogleMaps = $olgm$OLGoogleMaps;\nolgm.gm.ImageOverlay = $olgm$gm$ImageOverlay;\nolgm.gm.MapElement = $olgm$gm$MapElement;\nolgm.gm.MapIcon = $olgm$gm$MapIcon;\nolgm.gm.MapLabel = $olgm$gm$MapLabel;\nolgm.gm.PanesOverlay = $olgm$gm$PanesOverlay;\nolgm.interaction.defaults = _olgm_interaction.defaults;\nolgm.layer.Google = $olgm$layer$Google;\n","/**\n * @module olgm/interaction\n */\nimport {defaults as olDefaults} from 'ol/interaction.js';\nimport DragPan from 'ol/interaction/DragPan.js';\n\n\n/**\n * Set of interactions that are recommended to include in ol3 maps used\n * by this library. It basically is the same as the default interactions\n * included in such maps by default, with the exclusion of some that are\n * not compatible with this library.\n *\n * Here's the one that are excluded and why:\n * * `ol.interaction.DragRotate` - Google Maps doesn't support the same kind\n *   of rotation that OL3 does.\n * * `ol.interaction.PinchRotate` - Google Maps doesn't support the same kind\n *   of rotation that OL3 does.\n * * `ol.interaction.DragPan` - The one created by OL3 includes kinetic\n *   animation while panning, which causes animation not being syncrhonized\n *   with Google Maps. It is excluded, but also replace by one that doesn't\n *   have kinetic enabled.\n * * `ol.interaction.MouseWheelZoom` - By default, OL uses a zoom animation\n *   that is causing a lag before zooming starts. It is deactivated by setting\n *   its duration to 0. Without this change, a temporary 'shift' effect is also\n *   visible when zooming; this change prevents this artefact as well.\n *\n * @param {module:ol/interaction/Interaction~DefaultsOptions=} opt_options Defaults options.\n * @return {module:ol/Collection<ol.interaction.Interaction>} A collection of\n * interactions to be used with the module:ol/PluggableMap constructor's interactions option.\n * @api stable\n */\nexport function defaults(opt_options) {\n\n  const options = (opt_options !== undefined) ? opt_options : {};\n\n  options['altShiftDragRotate'] = false;\n  options['dragPan'] = false;\n  options['pinchRotate'] = false;\n  options['zoomDuration'] = 0;\n\n  return olDefaults(options).extend([\n    new DragPan()\n  ]);\n\n}\n","/**\n * @module ol/interaction\n */\nimport Collection from './Collection.js';\nimport Kinetic from './Kinetic.js';\nimport DoubleClickZoom from './interaction/DoubleClickZoom.js';\nimport DragPan from './interaction/DragPan.js';\nimport DragRotate from './interaction/DragRotate.js';\nimport DragZoom from './interaction/DragZoom.js';\nimport KeyboardPan from './interaction/KeyboardPan.js';\nimport KeyboardZoom from './interaction/KeyboardZoom.js';\nimport MouseWheelZoom from './interaction/MouseWheelZoom.js';\nimport PinchRotate from './interaction/PinchRotate.js';\nimport PinchZoom from './interaction/PinchZoom.js';\nimport {focus} from './events/condition.js';\n\nexport {default as DoubleClickZoom} from './interaction/DoubleClickZoom.js';\nexport {default as DragAndDrop} from './interaction/DragAndDrop.js';\nexport {default as DragBox} from './interaction/DragBox.js';\nexport {default as DragPan} from './interaction/DragPan.js';\nexport {default as DragRotate} from './interaction/DragRotate.js';\nexport {default as DragRotateAndZoom} from './interaction/DragRotateAndZoom.js';\nexport {default as DragZoom} from './interaction/DragZoom.js';\nexport {default as Draw} from './interaction/Draw.js';\nexport {default as Extent} from './interaction/Extent.js';\nexport {default as Interaction} from './interaction/Interaction.js';\nexport {default as KeyboardPan} from './interaction/KeyboardPan.js';\nexport {default as KeyboardZoom} from './interaction/KeyboardZoom.js';\nexport {default as Modify} from './interaction/Modify.js';\nexport {default as MouseWheelZoom} from './interaction/MouseWheelZoom.js';\nexport {default as PinchRotate} from './interaction/PinchRotate.js';\nexport {default as PinchZoom} from './interaction/PinchZoom.js';\nexport {default as Pointer} from './interaction/Pointer.js';\nexport {default as Select} from './interaction/Select.js';\nexport {default as Snap} from './interaction/Snap.js';\nexport {default as Translate} from './interaction/Translate.js';\n\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction} instances and insert\n * them into a {@link module:ol/Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions=} opt_options Defaults options.\n * @return {import(\"./Collection.js\").default<import(\"./interaction/Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(opt_options) {\n\n  const options = opt_options ? opt_options : {};\n\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate = options.altShiftDragRotate !== undefined ?\n    options.altShiftDragRotate : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom = options.doubleClickZoom !== undefined ?\n    options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(new DoubleClickZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(new DragPan({\n      condition: options.onFocusOnly ? focus : undefined,\n      kinetic: kinetic\n    }));\n  }\n\n  const pinchRotate = options.pinchRotate !== undefined ? options.pinchRotate :\n    true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(new PinchZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(new KeyboardZoom({\n      delta: options.zoomDelta,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const mouseWheelZoom = options.mouseWheelZoom !== undefined ?\n    options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(new MouseWheelZoom({\n      condition: options.onFocusOnly ? focus : undefined,\n      duration: options.zoomDuration\n    }));\n  }\n\n  const shiftDragZoom = options.shiftDragZoom !== undefined ?\n    options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(new DragZoom({\n      duration: options.zoomDuration\n    }));\n  }\n\n  return interactions;\n\n}\n"],"names":["Abstract","ol3map","gmap","this","assign","Object","target","var_sources","TypeError","output","i","ii","arguments","length","source","key","hasOwnProperty","clear","object","property","getValues","values","push","isEmpty","listen","type","listener","opt_this","opt_once","bind","originalListener_1","removeEventListener","apply","eventsKey","addEventListener","listenOnce","unlistenByKey","CHANGE","ERROR","BLUR","CLEAR","CONTEXTMENU","CLICK","DBLCLICK","DRAGENTER","DRAGOVER","DROP","FOCUS","KEYDOWN","KEYPRESS","LOAD","RESIZE","WHEEL","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","disposed_","Disposable","disposeInternal","numberSafeCompareFunction","a","b","includes","arr","indexOf","linearFindNearest","direction","n","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","propagationStopped","BaseEvent","opt_target","_super","_this","eventTarget_","pendingRemovals_","dispatching_","listeners_","__extends","Target","listeners","event","evt","Event","propagate","call","pendingRemovals","opt_type","keys","index","splice","revision_","Observable","dispatchEvent","EventType","len","EventTarget","oldValue","opt_values","values_","undefined","setProperties","BaseObject","value","eventType","getChangeEventType","ObjectEvent","ObjectEventType","opt_silent","notify","set","changeEventTypeCache","clamp","min","max","Math","cosh","x","y","exp","squaredSegmentDistance","x1","y1","x2","y2","dx","dy","t","squaredDistance","toRadians","angleInDegrees","PI","modulo","r","lerp","code","message","split","name","assert","assertion","errorCode","AssertionError","options","properties","LayerProperty","opacity","visible","zIndex","maxResolution","Infinity","minResolution","minZoom","maxZoom","className_","className","state_","BaseLayer","opt_managed","state","layer","managed","getZIndex","round","getOpacity","sourceState","getSourceState","getVisible","extent","getExtent","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","opt_array","opt_states","get","zindex","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","render","map","setMap","handleSourcePropertyChange_","setSource","Layer","array","states","getLayerState","getSource","getState","SourceState","changed","handleSourceChange_","pixel","getFeatures","frameState","layerRenderer","getRenderer","prepareFrame","renderFrame","RenderEventType","layerStatesArray","createRenderer","opt_options","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","createEmpty","extendCoordinate","buffer","opt_extent","closestSquaredDistanceXY","containsCoordinate","coordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","Relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromCoordinates","extendCoordinates","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getForViewAndSize","center","resolution","rotation","size","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","x0","x3","y0","y3","getIntersection","intersection","intersects","applyTransform","transformFn","xs","ys","POINT","LINE_STRING","LINEAR_RING","POLYGON","MULTI_POINT","MULTI_LINE_STRING","MULTI_POLYGON","GEOMETRY_COLLECTION","CIRCLE","DEFAULT_RADIUS","getDistance","c1","c2","opt_radius","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","Units","DEGREES","FEET","METERS","PIXELS","TILE_PIXELS","USFEET","METERS_PER_UNIT","code_","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","Projection","tileGrid","func","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","units","point","PROJECTIONS","EPSG3857Projection","fromEPSG4326","input","opt_output","opt_dimension","dimension","slice","halfSize","log","tan","toEPSG4326","atan","opt_axisOrientation","EPSG4326Projection","transforms","add","destination","sourceCode","getCode","destinationCode","cache","cloneTransform","identityTransform","addProjection","projection","addTransformFunc","projectionLike","opt_units","pointResolution","getter","getPointResolutionFunc","getUnits","getMetersPerUnit","toEPSG4326_1","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transform","transformFunc","getTransform","transformExtent","projections2","forwardTransform","inverseTransform","userProjection","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","createCanvasContext2D","opt_width","opt_height","canvas","document","createElement","width","height","getContext","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","style","opt_inversePixelTransform","opt_frameState","opt_context","inversePixelTransform","context","getFontParameters","font","family","fontFamily","fontWeight","fontStyle","families","weight","compose","dx1","dy1","sx","sy","angle","dx2","dy2","makeInverse","mat","det","c","d","e","f","toString","join","measureFont","opt_highWaterMark","highWaterMark","count_","entries_","oldest_","newest_","LRUCache","getCount","entry","value_","key_","newer","older","consumers","LabelCache","consumer","consumerId","outer","canExpireCache","peekLastKey","pop","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","labelCache","checkedFonts","measureContext","textHeights","checkFont","interval","referenceWidth","retries","checked","referenceFonts","text","isAvailable","getMeasureContext","available","referenceFont","measureText","check","done","clearInterval","fontSpec","setInterval","div","heights","measureTextHeight","innerHTML","margin","padding","position","left","body","appendChild","offsetHeight","removeChild","measureTextWidth","measureAndCacheTextWidth","rotateAtOffset","offsetX","offsetY","translate","rotate","resetTransform","drawImage","image","originX","originY","w","h","scale","alpha","globalAlpha","setTransform","IDLE","LOADING","LOADED","EMPTY","boundHandleImageChange_","handleImageChange_","layer_","LayerRenderer","tiles","zoom","tile","tileCoord","tileRange","loadedTileCallback","forEachLoadedTile","hitTolerance","declutteredFeatures","ImageState","renderIfReadyAndVisible","imageState","load","getLayer","container","renderedResolution","tempTransform_","pixelTransform","containerReused","createTransformStringCanvas_","CanvasLayerRenderer","layerClassName","getClassName","firstElementChild","HTMLCanvasElement","transformOrigin","pixelRatio","halfWidth","halfHeight","viewState","topLeft","topRight","bottomRight","bottomLeft","coordinateToPixelTransform","save","beginPath","moveTo","lineTo","clip","inverted","hasListener","event_1","RenderEvent","dispatchRenderEvent_","composeTransform","renderPixel","getImageData","err","Uint8Array","imageLayer","image_","CanvasImageLayerRenderer","getImage","layerState","layerIndex","viewResolution","imageSource","hints","viewHints","renderedExtent","ViewHint","loadImage","imageExtent","imageResolution","getResolution","imagePixelRatio","getPixelRatio","viewCenter","size_1","canvasTransform","createTransformString","useContainer","clearRect","clipped","layerExtent","clipUnrotated","img","dw","dh","preRender","previousAlpha","postRender","restore","ImageLayer","BaseImageLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","BaseTileLayer","TileProperty","TileRange","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","CanvasTileLayerRenderer","tileState","getUseInterimTilesOnError","TileState","z","getTile","getPreload","setState","isDrawableTile","getInterimTile","tileSource","sourceRevision","getRevision","getTileGridForProjection","getZForResolution","zDirection","tileResolution","tilePixelRatio","getTilePixelRatio","canvasExtent","getTileRangeForExtentAndZ","tilesToDrawByZ","findLoadedTiles","createLoadedTileFinder","tmpTileRange","uid","inTransition","getAlpha","time","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","clips","clipZs","currentClip","zs","Number","sort","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","dx_1","dy_1","originTileCoord","getTileCoordForCoordAndZ","originTileExtent","getTileCoordExtent","origin_1","tileGutter","getGutterForProjection","tilesToDraw","tileCoordKey","floatX","nextX","floatY","nextY","transition","i_1","drawTileImage","updateUsedTiles","usedTiles","manageTilePyramid","updateCacheSize_","scheduleExpireCache","gutter","getTileImage","tileAlpha","alphaChanged","animate","endTransition","postRenderFunction","tileSourceKey","expireCache","postRenderFunctions","getKey","wantedTiles","tileCache","opt_tileCallback","tileQueue","isKeyQueued","enqueue","getTileCoordCenter","useTile","prototype","TileLayer","HEX_COLOR_RE_","NAMED_COLOR_RE_","cacheSize","fromString","s","color","g","exec","el","rgb","getComputedStyle","fromNamed","hasAlpha","parseInt","substr","normalize","fromStringInternal_","asArray","asColorLike","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","ImageStyle","getScale","getRotation","getRotateWithView","canvas_","hitDetectionCanvas_","fill_","fill","origin_","points_","points","radius_","radius1","radius2_","radius2","angle_","stroke_","stroke","anchor_","size_","imageSize_","hitDetectionImageSize_","RegularShape","getFill","clone","getPoints","getRadius","getRadius2","getAngle","getStroke","setOpacity","setScale","strokeStyle","lineCap","lineJoin","miterLimit","lineDash","lineDashOffset","strokeWidth","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","renderOptions","imageSize","draw_","createHitDetectionCanvas_","angle0","radiusC","arc","fillStyle","lineWidth","setLineDash","closePath","drawHitDetectionCanvas_","CircleStyle","color_","Fill","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","Stroke","geometry_","geometryFunction_","defaultGeometryFunction","geometry","setGeometry","renderer","text_","zIndex_","Style","getGeometry","getText","feature","defaultStyles","createDefaultStyle","createEditingStyle","styles","white","blue","GeometryType","concat","Property","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","style_","styleFunction_","setStyle","updateWhileAnimating_","updateWhileInteracting_","BaseVectorLayer","renderOrder","styleFunction","styles_1","toStyleFunction","inflateCoordinates","opt_coordinates","j","inflateCoordinatesArray","ends","opt_coordinatess","coordinatess","jj","inflateMultiCoordinatesArray","endss","opt_coordinatesss","coordinatesss","VectorContext","circleGeometry","geometryCollectionGeometry","lineStringGeometry","multiLineStringGeometry","multiPointGeometry","multiPolygonGeometry","pointGeometry","polygonGeometry","imageStyle","opt_declutterGroup","textStyle","opt_declutterGroups","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","tolerance","maxExtent","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","CanvasBuilder","dashArray","dash","closed","skipFirst","myEnd","getBufferedMaxExtent","lastRel","nextRel","lastXCoord","lastYCoord","nextCoord","skipped","builderEnds","builderEnd","appendFlatCoordinates","beginGeometry","builderEndss","getType","getStride","builderBegin","getOrientedFlatCoordinates","getEndss","myEnds","drawCustomCoordinates_","CanvasInstruction","getFlatCoordinates","getEnds","endGeometry","instruction","fillStyleColor","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createStroke","applyPixelRatio","createFill","currentFillStyle","applyStroke","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","declutterGroups_","hitDetectionImage_","anchorX_","anchorY_","height_","originX_","originY_","CanvasImageBuilder","myBegin","drawCoordinates_","reverseHitDetectionInstructions","finish","declutterGroups","anchor","getAnchor","getSize","hitDetectionImage","getHitDetectionImage","origin","getOrigin","CanvasLineStringBuilder","moveToLineToInstruction","updateStrokeStyle","drawFlatCoordinates_","lastStroke","douglasPeucker","squaredTolerance","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","first","maxSquaredDistance","squaredDistance_1","snap","quantize","quantizeArray","simplifiedEnds","CanvasPolygonBuilder","numEnds","setFillStrokeStyles_","circleInstruction","drawFlatCoordinatess_","updateFillStyle","matchingChunk","maxAngle","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","chunkM","m","start","acos","TEXT_ALIGN","right","top","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","Circle","PolygonBuilder","Default","Builder","Image","ImageBuilder","LineString","LineStringBuilder","Polygon","Text","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","prune","CanvasTextBuilder","fillState","strokeState","textState","geometryType","placement","TextPlacement","textAlign","flatOffset","flatEnd","o","oo","range","declutterGroup","drawChars_","geometryWidths","overflow","getFlatMidpoint","getFlatMidpoints","getFlatInteriorPoint","interiorPoints","getFlatInteriorPoints","saveTextStates_","backgroundFill","backgroundStroke","setFillStrokeStyle","pixelRatio_1","NaN","p","strokeKey","textKey","textBaseline","fillKey","baseline","textScale","textFillStyle","textStrokeStyle","getFont","getOverflow","getMaxAngle","getPlacement","getTextAlign","getTextBaseline","getBackgroundFill","getBackgroundStroke","getPadding","textOffsetX","getOffsetX","textOffsetY","getOffsetY","textRotateWithView","textRotation","tolerance_","maxExtent_","pixelRatio_","resolution_","buildersByZIndex_","BuilderGroup","group","builderInstructions","zKey","builders","builderKey","builderInstruction","builderType","zIndexKey","replays","replay","transform2D","opt_dest","dest","anchorX","anchorY","deltaX","deltaY","k","DEFAULT","IMAGE","TEXT","lineStringLength","drawTextOnPath","startM","previousAngle","result","numChars","segmentM","segmentLength","pow","angleChanged","char","charLength","charM","segmentPos","delta","abs","interpolate","quickselect","compare","quickselectStep","sd","newLeft","floor","newRight","swap","defaultCompare","RBush","maxEntries","_maxEntries","_minEntries","ceil","findItem","item","items","equalsFn","let","calcBBox","node","toBBox","distBBox","children","destNode","createNode","const","child","leaf","compareNodeMinX","compareNodeMinY","bboxArea","bboxMargin","contains","multiSelect","mid","all","_all","search","bbox","nodesToSearch","childBBox","collides","insert","_build","_splitRoot","tmpNode","_insert","remove","parent","goingUp","path","indexes","_condense","compareMinX","compareMinY","toJSON","fromJSON","N","M","N2","N1","right2","right3","_chooseSubtree","level","minArea","minEnlargement","targetNode","enlargement","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","newNode","minOverlap","bbox1","bbox2","overlap","_allDistMargin","leftBBox","rightBBox","siblings","tmpTransform","p1","p2","p3","p4","overlaps","alignFill_","declutterItems","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","Executor","release","label","containsKey","align","lines","numLines","widths","currentWidth","measureTextWidths","lineHeight","renderWidth","leftRight","strokeText","fillText","setStrokeStyle_","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","centerX","centerY","strokePadding","declutterArgs","replayTextBackground_","repeatSize","declutterTree","groupCount","box","declutterData","currentAlpha","getTextImage","featureCallback","opt_hitExtent","pixelCoordinates","transform1","transform2","dd","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","fn","coords","labelWithAnchor","drawTextImageWithPointPlacement_","widthIndex","declutterGroupIndex","replayImage_","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","cc","chars","part","execute_","opt_featureCallback","ORDER","BuilderType","allInstructions","opt_renderBuffer","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","createExecutors_","ExecutorGroup","flatClipCoords","getClipCoords","executors","instructionByZindex","candidates","contextSize","hitExtent","mask","circleArrayCache","arraySize","error","fillCircleArrayRowToMiddle","getCircleArray","imageData","j_1","result_1","executor","executeHitDetection","opt_builderTypes","opt_declutterReplays","builderTypes","execute","0","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","Point","builderGroup","getImageState","imageReplay","getBuilder","setImageStyle","addDeclutter","drawPoint","textReplay","setTextStyle","drawText","lineStringReplay","drawLineString","polygonReplay","drawPolygon","MultiPoint","drawMultiPoint","MultiLineString","drawMultiLineString","MultiPolygon","drawMultiPolygon","GeometryCollection","replayGroup","geometries","getGeometriesArray","geometryRenderer","circleReplay","drawCircle","defaultOrder","feature1","feature2","getTolerance","renderFeature","opt_transform","loading","unlistenImageChange","listenImageChange","getGeometryFunction","simplifiedGeometry","simplifyTransformed","renderGeometry","getGeometries","drawCustom","renderFeatureInternal","lastResult","lastArgs","lastThis","called","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","getSimplifiedGeometry","nextArgs","arrayEquals","Geometry","closestPoint","minSquaredDistance","coord","getClosestPoint","opt_closestPoint","closestPointXY","computeExtent","opt_sy","opt_anchor","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","getWorldExtent","layout","GeometryLayout","SimpleGeometry","getSimplifiedGeometryInternal","getStrideForLayout","opt_layout","nesting","getLayoutForStride","opt_squaredTolerance","opt_userTransform","context_","transform_","squaredTolerance_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","CanvasImmediateRenderer","localTransform","setContextFillState_","setContextStrokeState_","setContextTextState_","close","moveToLineTo_","simpleGeometry","transformGeom2D","drawText_","drawGeometryCollection","drawGeometry","drawImages_","flatMidpoint","geometryExtent","flatMidpoints","drawRings_","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageImage","imageOrigin","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","src","crossOrigin","shared","cache_","cacheSize_","maxCacheSize_","IconImageCache","iconImage","maxCacheSize","expire","ImageBase","ua","navigator","userAgent","toLowerCase","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","window","devicePixelRatio","IMAGE_DECODE","decode","imageLoadFunction","src_","unlisten_","imageLoadFunction_","ImageWrapper","unlistenImage_","listenImage","handleImageLoad_","handleImageError_","loadHandler","errorHandler","promise","listening_1","then","catch","listenerKeys","imageState_","tainted_","IconImage","dispatchChangeEvent_","replaceColor_","isTainted_","fillRect","ctx","imgData","putImageData","normalizedAnchor_","anchorOrigin_","anchorOrigin","IconOrigin","anchorXUnits_","anchorXUnits","IconAnchorUnits","anchorYUnits_","anchorYUnits","crossOrigin_","imgSize","iconImage_","iconImageCache","offset_","offsetOrigin_","offsetOrigin","Icon","getSrc","getImageSize","iconImageSize","hitDetect","features","resultFeatures","indexFactor","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","dirty_","hitDetectionImageData_","renderedFeatures_","renderedRevision_","renderedResolution_","renderedRotation_","renderedCenter_","renderedProjection_","renderedRenderOrder_","replayGroup_","replayGroupChanged","CanvasVectorLayerRenderer","transformToString","projectionExtent","vectorSource","intersectsExtent","getRenderTransform","declutterReplays","getDeclutter","getWrapX","canWrapX","startX","worldWidth","world","transform_1","transform_2","viewHints_1","zz","executorData","currentExecutor","replayDeclutter","parseFloat","Promise","resolve","reject","requestAnimationFrame","imageSmoothingEnabled","featureCount","featuresByZIndex","featureStyleFunction","getStyleFunction","originalStyle","setColor","setText","canvas_1","imgContext","setImage","byGeometryType","replace","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","layer_1","features_1","forEachFeatureAtCoordinate","animating","interacting","getUpdateWhileAnimating","getUpdateWhileInteracting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","getRenderBuffer","vectorLayerRenderOrder","getRenderOrder","defaultRenderOrder","worldsAway","dispose","userTransform","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","userExtent","getFeaturesInExtent","replayGroupInstructions","executorGroup","getOverlaps","VectorLayer","Herald","super","activate","deactivate","unlisten","DEFAULT_WMS_VERSION","calculateSourceResolution","targetProj","targetCenter","targetResolution","sourceCenter","sourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","isFinite","enlargeClipPoint","centroidX","centroidY","dX","dY","distance","targetExtent","triangulation","sources","opt_renderEdges","sourceDataExtent","canvasWidthInUnits","canvasHeightInUnits","stitchContext","stitchScale","xPos","yPos","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","u1","v1","u2","v2","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","l","solveLinearSystem","p0","maxSourceExtent","errorThreshold","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","addQuad_","leftBound_1","newTriangle","Triangulation","aSrc","bSrc","cSrc","dSrc","maxSubdivision","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isGlobal","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","addTriangle_","getImageFunction","maxTargetExtent","limitedTargetExtent","sourceImage","calculateSourceExtent","sourcePixelRatio","triangulation_","targetResolution_","targetExtent_","sourceImage_","sourcePixelRatio_","sourceListenerKey_","ReprojImage","unlistenSource_","renderReprojected","reproject_","projection_","attributions_","adaptAttributions","attributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","wrapX","Source","attributionLike","ImageSourceEventType","resolutions_","resolutions","reprojectedImage_","reprojectedRevision_","ImageSource","idx","getImageInternal","ImageSourceEvent","defaultImageLoadFunction","appendParams","uri","params","keyParams","encodeURIComponent","qs","GETFEATUREINFO_IMAGE_SIZE","url_","url","params_","v13_","updateV13_","serverType_","hidpi_","hidpi","ratio_","ratio","ImageWMS","projectionObj","sourceProjectionObj","baseParams","SERVICE","VERSION","REQUEST","FORMAT","TRANSPARENT","QUERY_LAYERS","getRequestUrl_","layers","LAYERS","mpu","findNearestResolution","viewExtent","requestExtent","handleImageChange","WMSServerType","dpi","getAxisOrientation","version","s1","s2","n1","n2","compareVersions","opt_message","ImageOverlay","topLeft_","div_","onAdd","borderStyle","borderWidth","getPanes","mapPane","draw","sizeX","sizeY","overlayProjection","topLeftPx","fromLatLngToDivPixel","getWorldWidth","mapOverlap","setZIndex","onRemove","parentNode","google","maps","OverlayView","SourceHerald","googleMapsIsActive_","watchLayer","unwatchLayer","setGoogleMapsActive","active","googleMapsIsActive","findIndex","getLayers","getArray","AbstractListener","Listener","listenerKey","listenerKey_","unByKey","PropertyListener","oldTarget","on","innerListener_","ImageWMSSourceHerald","layers_","cacheItem","imageOverlay","lastUrl","handleVisibleChange_","handleMoveEnd_","view","oldView","activateCacheItem_","resetImageOverlay_","updateImageOverlay_","deactivateCacheItem_","generateImageWMSFunction_","getParams","baseUrl","getUrl","getView","calculateExtent","wmsParamsList","customParams","wmsParams","upperCaseKey","toUpperCase","format","transparent","tiled","versionNumbers","wms13","queryParams","BBOX","HEIGHT","STYLES","TILED","WIDTH","opt_force","Date","getTime","currentResolution","lngLat","topLeftLatLng","LatLng","overlay","orderLayers","refresh","SorceHerald","easeIn","easeOut","linear","interimTile","hifi","transition_","transitionStarts_","Tile","prev","id","tileLoadFunction","tileLoadFunction_","ImageTile","getBlankImage","naturalWidth","naturalHeight","opt_tileCoord","getKeyZXY","TileCache","peekLast","peekFirstKey","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","opt_errorThreshold","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","sourceProjExtent","errorThresholdInPixels","sourceRange","srcX","srcY","ReprojTile","unlistenSources_","getTileSize","leftToLoad_1","sourceListenKey_1","setTimeout","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","getFullTileRange","createFromTemplates","templates","tileUrlFunctions","createFromTileUrlFunctions","nullTileUrlFunction","toSize","opt_size","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","tmpTileCoord","opt_strict","zoomFactor","every","currentVal","res","origins","zoomFactor_","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","sizes","calculateTileRanges_","TileGrid","opt_tileRange","tileCoordExtent","createOrUpdateTileRange","getTileCoordForXYAndZ_","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","adjustX","adjustY","xFromOrigin","yFromOrigin","tileCoordX","tileCoordY","createOrUpdateTileCoord","opt_direction","fullTileRanges","getForProjection","opt_maxZoom","opt_tileSize","opt_corner","corner","getDefaultTileGrid","extentFromProjection","Corner","resolutionsFromExtent","setDefaultTileGrid","half","opaque_","opaque","tilePixelRatio_","canUseScreen","screen","availWidth","availHeight","tmpSize","tileOptions","TileSource","getTileCacheForProjection","loaded","getResolutions","thisProj","opt_projection","withinExtentAndZ","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","setUrl","tileLoadingKeys_","UrlTile","TileEventType","TileSourceEvent","pruneExceptNewestZ","setKey","match","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","stop_1","expandUrl","setTileUrlFunction","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","TileImage","usedTileCache","getGutter","projKey","urlTileCoord","getTileCoordForTileUrlFunction","tileUrl","handleTileChange","newTile","getTileInternal","refreshInterimChain","createTile_","tilegrid","proj","imageTile","PanesOverlay","getMapPanes","TileSourceHerald","panesOverlay_","addListenerOnce","element","ignoreNextOpacityChange","getTileGrid","tileGridTileSize","googleTileSize","Size","getTileUrl","googleGetTileUrlFunction_","isPng","googleTileLayer","ImageMapType","overlayMapTypes","handleOpacityChange_","oldSource","ol3Coords","defaultOrigin","defaultTileSizeExponent","log2","exponentDifference","intersectionSize","intersectionArea","getTileUrlFunction","googleMapsLayers","removeAt","panes","overlayIndex","childNodes","childNodesWithLayer","newOpacity","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","opt_tmpPoint","tmpPoint","assignClosestArrayPoint","deflateCoordinate","deflateCoordinates","deflateCoordinatesArray","opt_ends","interpolatePoint","fraction","pointX","pointY","length_1","cumulativeLengths","haystack","needle","opt_comparator","cmp","comparator","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","ret","point1","point2","intersectsLineString","coordinatesExtent","forEachSegment","startRel","endRel","startY","endX","endY","slope","intersectsSegment","intersectsLinearRingArray","flatMidpoint_","flatMidpointRevision_","maxDelta_","maxDeltaRevision_","setCoordinates","setFlatCoordinates","opt_extrapolate","getCoordinateAt","setLayout","linearRing","twiceArea","linearRings","LinearRing","linearRingArea","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","maxSegmentLength","isNaN","linearRingIsClockwise","edge","linearRingsAreOriented","opt_right","isClockwise","orientLinearRings","reverseCoordinates","orientLinearRingsArray","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","linearRingsArea","flatCenter","fromExtent","fromCircle","circle","opt_sides","opt_angle","sides","getLayout","arrayLength","polygon","startAngle","makeRegular","lineStrings","lineString","opt_interpolate","lineStringsCoordinateAtM","midpoints","douglasPeuckerArray","intersectsLineStringArray","opt_endss","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","newEndss","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingssArea","linearRingssCenter","getInteriorPointsOfMultiArray","linearRingssAreOriented","simplifiedEndss","quantizeMultiArray","prevEnds","intersectsLinearRingMultiArray","deflateMultiCoordinatesArray","lastEnds","opt_geometryOrProperties","id_","geometryName_","geometryChangeKey_","handleGeometryChanged_","Feature","getProperties","setGeometryName","getGeometryName","getStyle","handleGeometryChange_","createStyleFunction","RESOLUTIONS","getCenterOf","getCoordinates","getInteriorPoint","out","rgba","stringStartsWith","parseRGBA","getColorOpacity","getStyleOf","Vector","Function","rgbaString","matches","string","MapElement","drawn_","redraw_","latLng","pos","getVisible_","getMap","mapZoom","getZoom","MapLabel","setValues","prop","drawCanvas_","strokeWeight","wrapText","adjustCanvasSize","words","metrics","renderHeight","actualBoundingBoxAscent","actualBoundingBoxDescent","pane","markerLayer","MapIcon","imageStyle_","rotate_","cosTheta","sinTheta","w_2","h_2","createFeatureGeometry","opt_ol3map","gmapGeometry","createLatLng","inProj","lineStringlatLngs","genLatLngs_","Data","polygonlatLngs","multiLineStringlatLngs","genMultiLatLngs_","multiPolygons","opt_inProj","mutliPolygons","latLgns","multiPolygon","genMultiPolygon_","getPolygons","multiPoints","createGeometry","lonLatCoords","latLngs","multiLatLngs","createStyle","mapIconOptions","opt_index","gmStyle","strokeColor","strokeOpacity","fillColor","fillOpacity","gmIcon","gmSymbol","useCanvas","SymbolPath","nbPoints","outerRadius","innerRadius","imageStroke","imageStrokeColor","imageFill","imageFillColor","imageFillOpacity","imageRadius","imageSrc","imageScale","createStyleInternal","FeatureHerald","feature_","featureListener_","data_","index_","mapIconOptions_","visible_","gmapFeature_","label_","marker_","updateStyle_","handleFeatureChange_","oldGeometry","setVisible","getGeometry_","overrideStyle","iconStyle","opt_pane","prevMarker","prevLabel","olgm_pane","labelOptions","createLabel","VectorFeatureHerald","features_","source_","watchFeature_","handleAddFeature_","handleRemoveFeature_","unwatchFeature_","herald","VectorSourceHerald","handleResolutionChange_","getListeners","listenerMap","ol_lm","listenerObj","boundListener","opt_setDeleteIndex","bindTo","deleteIndex","findListener","callOnce","removeListeners","ViewHerald","windowResizeTimerId_","windowListenerKey_","setConstrainResolution","setRotation","setZoomAndCenter","setCenter","handleWindowResize_","lat","lng","childDiv","mapDiv","getDiv","nodeName","tilesDiv","tilesDivStyle","sideSize","mapDivStyle","getTargetElement","diffX","diffY","trigger","viewportStyle","getViewport","setZoom","clearTimeout","setCenterAfterResize_","GoogleLayer","mapTypeId_","mapTypeId","MapTypeId","ROADMAP","styles_","getMapTypeId","getStyles","LayersHerald","watchOptions","googleLayers_","googleCache_","imageWMSSourceHerald_","tileSourceHerald_","vectorSourceHerald_","viewHerald_","watchOptions_","gmapEl_","ol3mapEl_","targetEl_","ol3mapIsRenderered_","once","toggleGoogleMaps_","layerGroup","oldLayerGroup","oldLayers","unwatchLayer_","watchLayer_","handleLayersAdd_","handleLayersRemove_","getGoogleMapsActive","setGoogleMapsActive_","setWatchOptions","watchGoogleLayer_","vector","unwatchGoogleLayer_","activateGoogleMaps_","ControlPosition","controls","deactivateGoogleMaps_","setMapTypeId","setOptions","OLGoogleMaps","gmapEl","gmapOptions","disableDefaultUI","disableDoubleClickZoom","draggable","keyboardShortcuts","scrollwheel","streetViewControl","Map","heralds_","watch","layersHerald_","active_","getGoogleMapsMap","newWatchOptions","toggle","opt_element","unique_","unique","array_","assertUnique_","updateLength_","Collection","getLength","elem","CollectionEvent","CollectionEventType","insertAt","opt_except","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","Kinetic","now","lastIndex","firstIndex","duration","SINGLECLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","handleEvent","map_","setActive","Interaction","InteractionProperty","mapBrowserEvent","zoomByDelta","opt_duration","currentZoom","newZoom","getConstrainedZoom","newResolution","getResolutionForZoom","getAnimating","cancelAnimations","easing","delta_","duration_","stopEvent","MapBrowserEventType","browserEvent","shiftKey","preventDefault","closestOnSegment","segment","along","coordinate1","coordinate2","cosAngle","sinAngle","coord1","coord2","squaredDistanceToSegment","altShiftKeysOnly","originalEvent","altKey","metaKey","ctrlKey","focus","activeElement","always","mouseActionButton","button","never","singleClick","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","mouseOnly","pointerEvent","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","trackedPointers_","targetPointers","PointerInteraction","updateTrackedPointers_","handledUp","handled","pointerId","centroid","pointerEvents","clientX","clientY","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","condition","defaultCondition","noKinetic_","DragPan","beginInteraction","centroidFromPointers","update","rotateCoordinate","adjustCenterInternal","getCenterInternal","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","animateInternal","getConstrainedCenter","endInteraction","disable","lastAngle_","DragRotate","getConstraints","theta","adjustRotationInternal","element_","startPixel_","endPixel_","RenderBox","startPixel","endPixel","getOverlayContainer","createOrUpdateGeometry","render_","DragBoxEventType","box_","minArea_","onBoxEnd_","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","DragBox","setPixels","DragBoxEvent","out_","mapExtent","calculateExtentInternal","boxPixelExtent","factor","getResolutionForExtentInternal","getConstrainedResolution","UP","DOWN","defaultCondition_","pixelDelta_","pixelDelta","keyCode","KeyCode","mapUnitsDelta","currentCenter","pan","Mode","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","trackpadDeltaPerZoom_","MouseWheelZoom","sign","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","endInteraction_","adjustZoom","timeLeft","handleWheelZoom_","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","PinchRotate","rotationDelta","touch0","touch1","viewportPosition","getBoundingClientRect","lastDistance_","lastScaleDelta_","PinchZoom","scaleDelta","adjustResolutionInternal","DragAndDropEventType","file","opt_features","formatConstructors_","formatConstructors","dropListenKeys_","DragAndDrop","tryReadFeatures_","featureProjection","addFeatures","DragAndDropEvent","dropArea","handleDrop","handleStop","getActive","registerListeners_","unregisterListeners_","readFeatures","files","dataTransfer","reader","FileReader","handleResult_","readAsText","stopPropagation","dropEffect","lastMagnitude_","DragRotateAndZoom","magnitude","angleDelta","opt_dragging","pixel_","coordinate_","dragging","MapBrowserEvent","getEventPixel","getCoordinateFromPixel","MapEvent","setCenterAndRadius","getRadiusSquared_","intersectsCoordinate","ARRAY_BUFFER","JSON","XML","withCredentials","xhr","success","dataProjection","failure","XMLHttpRequest","open","FormatType","responseType","onload","status","responseText","responseXML","DOMParser","parseFromString","readProjection","onerror","send","opt_maxEntries","rbush_","RBush_","items_","extents","forEach_","getAll","getInExtent","rbush","opt_feature","loader_","format_","loader","strategy_","strategy","allStrategy","collection","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","VectorSource","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorSourceEvent","VectorEventType","valid","getId","newFeatures","geometryFeatures","length_2","length_3","modifyingCollection","addFeature","removeFeature","opt_fast","featureId","removeFeatureInternal","clearEvent","forEachFeatureInExtent","forEachInExtent","forEachFeatureAtCoordinateDirect","opt_filter","closestFeature","filter","previousMinSquaredDistance","minDistance","sid","removeFromIdIndex_","loadedExtentsRtree","extentsToLoad","extentToLoad","this_1","removed","setLoader","DrawEventType","shouldHandle_","downPx_","downTimeout_","lastDragTime_","freehand_","snapTolerance_","snapTolerance","type_","mode","getMode","stopClick_","stopClick","minPoints_","minPoints","maxPoints_","maxPoints","finishCondition_","finishCondition","geometryFunction","opt_geometry","squaredLength","squaredCoordinateDistance","Constructor_1","mode_1","dragVertexDelay_","dragVertexDelay","finishCoordinate_","sketchFeature_","sketchPoint_","sketchCoords_","sketchLine_","sketchLineCoords_","squaredClickTolerance_","clickTolerance","overlay_","geometryName","freehandCondition_","freehand","freehandCondition","updateState_","Draw","move","pass","addToDrawing_","handlePointerMove_","startDrawing_","MapBrowserPointerEvent","circleMode","finishDrawing","atFinish_","abortDrawing_","downPx","clickPx","modifyDrawing_","createOrUpdateSketchPoint_","at","potentiallyDone","potentiallyFinishCoordinates","sketchCoords","finishCoordinate","finishPixel","getPixelFromCoordinate","updateSketchFeatures_","DrawEvent","sketchLineGeom","ring","getLinearRing","sketchFeature","sketchFeatures","overlaySource","ExtentEventType","pointerHandler_","pixelTolerance_","pixelTolerance","snappedToVertex_","extentFeature_","vertexFeature_","extentOverlay_","boxStyle","vertexOverlay_","pointerStyle","setExtent","Extent","pixelCoordinate","getExtentInternal","segments","closestSegment","vertex","vertexPixel","coordinateDistance","pixel1","pixel2","squaredDist1","squaredDist2","dist","snapToVertex_","createOrUpdatePointerFeature_","extentFeature","polygonFromExtent","vertexFeature","getOpposingPoint","x_","y_","getPointHandler","getEdgeHandler","createOrUpdateExtentFeature_","ExtentEvent","fixedPoint","fixedP1","fixedP2","CIRCLE_CIRCUMFERENCE_INDEX","tempExtent","tempSegment","ModifyEventType","mapBrowserPointerEvent","boundHandleFeatureChange_","defaultDeleteCondition_","deleteCondition_","deleteCondition","insertVertexCondition_","insertVertexCondition","vertexSegments_","lastPixel_","ignoreNextSingleClick_","modified_","rBush_","changingFeature_","dragSegments_","SEGMENT_WRITERS_","writePointGeometry_","writeLineStringGeometry_","writePolygonGeometry_","writeMultiPointGeometry_","writeMultiLineStringGeometry_","writeMultiPolygonGeometry_","writeCircleGeometry_","writeGeometryCollectionGeometry_","handleSourceAdd_","handleSourceRemove_","addFeature_","handleFeatureAdd_","handleFeatureRemove_","lastPointerEvent_","Modify","writer","isRendered","handlePointerAtPixel_","ModifyEvent","removeFeatureSegmentData_","rBush","nodesToRemove","nodeToRemove","removeFeature_","segmentData","depth","rings","centerSegmentData","circumferenceSegmentData","featureSegments","createExtent","geometry_1","getInteracting","removePoint","willModifyFeatures_","dragSegment","setRadius","setGeometryCoordinates_","createOrUpdateVertexFeature_","insertVertices","vertexExtent","segmentDataMatches","componentSegments","compareIndexes","segmentDataMatch","coordinatesEqual","closestOnSegmentData","insertVertex_","bufferExtent","nodes","projectedDistanceToSegmentDataSquared","vertexSegments","rTree","updateSegmentIndices_","newSegmentData","newSegmentData2","removeVertex_","component","newIndex","dragSegments","segmentsByFeature","deleted","pointCoordinates","distanceToCenterSquared","distanceToCircumference","SelectEventType","SELECT","selected","deselected","layerFilter","addCondition_","addCondition","removeCondition_","removeCondition","toggleCondition_","toggleCondition","multi_","multi","filter_","hitTolerance_","featureStyleAssociation_","layers_1","layerFilter_","featureLayerAssociation_","Select","removeSelectedStyle_","giveSelectedStyle_","forEachFeatureAtPixel","addFeatureLayerAssociation_","removeFeatureLayerAssociation_","SelectEvent","getFeatureFromEvent","vertex_","edge_","featuresListenerKeys_","featureChangeListenerKeys_","indexedFeaturesExtents_","pendingFeatures_","Snap","opt_listen","register","feature_uid","segmentWriter","snapTo","snapped","updateFeature_","featuresToUpdate","opt_unlisten","unregister","nodesToRemove_1","currentMap","getFeatures_","forEachFeatureRemove_","forEachFeatureAdd_","closestSegmentData","projectedCoordinate","isCircle","closestOnCircle","TranslateEventType","startCoordinate","lastCoordinate_","startCoordinate_","lastFeature_","handleActiveChanged_","Translate","featuresAtPixel_","TranslateEvent","newCoordinate","deltaX_1","deltaY_1","geom","classList","oldMap","olgm","gm","interaction","$olgm$OLGoogleMaps","$olgm$gm$ImageOverlay","$olgm$gm$MapElement","$olgm$gm$MapIcon","$olgm$gm$MapLabel","$olgm$gm$PanesOverlay","defaults","interactions","altShiftDragRotate","doubleClickZoom","DoubleClickZoom","zoomDelta","zoomDuration","dragPan","onFocusOnly","pinchRotate","pinchZoom","keyboard","KeyboardPan","KeyboardZoom","mouseWheelZoom","shiftDragZoom","DragZoom","Google","$olgm$layer$Google"],"mappings":"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"}